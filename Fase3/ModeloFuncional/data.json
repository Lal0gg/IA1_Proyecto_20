{
    "intents": [
        {
            "tag": "responder_en_errores",
            "patterns": [
                "Perdón, no sé cómo responder a eso.",
                "Lo siento, no tengo información sobre ese tema.",
                "Disculpa, no entiendo la consulta.",
                "No estoy seguro de lo que necesitas, podrías aclararlo.",
                "Lamento no poder ayudarte con eso ahora mismo.",
                "Eso está fuera de mi alcance por ahora.",
                "Lo siento, no tengo esa respuesta.",
                "No entiendo lo que me estás preguntando.",
                "Disculpa, no tengo datos sobre eso.",
                "Perdón, no sé cómo ayudarte en esto.",
                "Lo siento, no tengo la información que buscas.",
                "No puedo responder esa pregunta.",
                "Mis disculpas, no puedo ayudarte con eso.",
                "Eso no está en mi conocimiento.",
                "Lo siento, no entiendo tu solicitud.",
                "Disculpa, no puedo procesar esa información.",
                "No tengo datos sobre ese tema.",
                "No estoy seguro de cómo responder a eso.",
                "Mis disculpas, no tengo información relevante.",
                "Perdón, pero no entiendo la pregunta.",
                "Eso está fuera de mi alcance.",
                "No sé cómo ayudarte con eso.",
                "Lo siento, no estoy diseñado para responder eso.",
                "Disculpa, no tengo una respuesta adecuada.",
                "Mis disculpas, no sé qué decir sobre eso.",
                "Perdón, no tengo suficiente información.",
                "No sé cómo responder a eso ahora.",
                "Lamento no tener datos sobre ese tema.",
                "Eso no está en mi base de conocimiento.",
                "Lo siento, pero no entiendo la consulta."
            ],
            "responses": [
                "Lo siento, no tengo una respuesta para eso.",
                "Disculpa, no puedo ayudarte con esa información.",
                "No entiendo la pregunta, ¿podrías explicarla de otra manera?",
                "Mis disculpas, no tengo datos sobre eso.",
                "Lo siento, no sé cómo responderte.",
                "No tengo información suficiente para ayudarte.",
                "Perdón, no entiendo lo que preguntas.",
                "Disculpa, no puedo procesar esa solicitud.",
                "Mis disculpas, no estoy seguro de cómo responder.",
                "Lo siento, esa respuesta no está disponible.",
                "Perdón, no puedo ayudarte con eso en este momento.",
                "Disculpa, no tengo datos que puedan ayudarte.",
                "Mis disculpas, no sé qué responder.",
                "Lo siento, no sé cómo proceder con tu consulta.",
                "No entiendo esa solicitud.",
                "Lo siento, no puedo procesar tu petición.",
                "Mis disculpas, no tengo acceso a esa información.",
                "Perdón, no sé qué decirte sobre eso.",
                "No puedo ofrecerte una respuesta adecuada.",
                "Mis disculpas, eso no está en mi base de datos."
            ]
        },
        {
            "tag": "claridad",
            "patterns": [
                "¿Podrías darme más detalles, por favor?",
                "¿Puedes ser más específico?",
                "Necesito un poco más de contexto para ayudarte.",
                "¿Podrías aclarar a qué te refieres?",
                "¿Qué quieres decir exactamente con eso?",
                "¿Puedes explicarlo de otra manera?",
                "¿Podrías darme más información sobre eso?",
                "No entiendo completamente, ¿puedes elaborarlo más?",
                "¿Puedes proporcionar un poco más de contexto?",
                "¿Podrías detallar más tu consulta?",
                "No estoy seguro de a qué te refieres, ¿puedes explicarlo mejor?",
                "¿Puedes darme más datos para entender mejor?",
                "¿Puedes explicarlo con un ejemplo?",
                "¿A qué te refieres exactamente?",
                "¿Puedes ampliar tu pregunta, por favor?",
                "No estoy seguro de haber entendido, ¿puedes ser más claro?",
                "¿Puedes darme más contexto?",
                "¿Puedes explicarme más para ayudarte mejor?",
                "¿Puedes aclarar lo que necesitas?",
                "No entiendo completamente, ¿puedes darme más información?",
                "¿Podrías elaborar un poco más tu idea?",
                "¿Qué quisiste decir con eso?",
                "¿Podrías especificar a qué te refieres?",
                "¿Puedes explicarlo mejor, por favor?",
                "¿Puedes darme un ejemplo más claro?",
                "¿Podrías ampliar un poco más tu pregunta?",
                "¿Puedes explicar mejor qué necesitas?",
                "¿Podrías proporcionar más detalles?",
                "No estoy seguro de entender tu punto, ¿puedes aclararlo?",
                "¿Qué significa eso en este contexto?",
                "¿Puedes darme más datos sobre tu consulta?",
                "¿Podrías desarrollar más tu idea?",
                "¿A qué te refieres exactamente con eso?",
                "¿Podrías explicar tu pregunta en más detalle?",
                "No entiendo completamente tu solicitud, ¿puedes explicarlo mejor?",
                "¿Puedes ampliar tu punto de vista?",
                "¿Qué quieres decir con eso exactamente?",
                "¿Puedes darme más contexto para ayudarte mejor?",
                "¿Puedes darme una explicación más detallada?",
                "¿Puedes darme más información para comprenderlo?",
                "¿Qué quieres decir con ese término?",
                "¿Podrías ser más claro, por favor?",
                "¿A qué situación específica te refieres?",
                "¿Puedes darme una descripción más completa?",
                "¿Podrías ser más detallado en tu explicación?",
                "¿Qué implica eso exactamente?",
                "¿Podrías explicarlo desde otro ángulo?",
                "¿Qué esperas exactamente que haga?",
                "¿Qué significa eso para ti?",
                "¿Puedes darme más ejemplos relacionados con esto?"
            ],
            "responses": [
                "¿Podrías darme más contexto para ayudarte mejor?",
                "Lo siento, no entiendo completamente. ¿Puedes ser más claro?",
                "No estoy seguro de lo que necesitas. ¿Puedes explicarlo más?",
                "¿Puedes darme más detalles sobre tu consulta?",
                "Necesito más información para ayudarte. ¿Puedes elaborarlo más?",
                "¿Podrías ser más específico?",
                "No entiendo completamente, ¿puedes explicar con un ejemplo?",
                "¿Puedes detallar un poco más lo que necesitas?",
                "¿Puedes darme más información para entender mejor?",
                "No estoy seguro de a qué te refieres. ¿Puedes aclararlo?",
                "¿Podrías explicar mejor tu consulta, por favor?",
                "Necesito un poco más de contexto para ayudarte mejor.",
                "¿Puedes ser más claro con lo que necesitas?",
                "¿Puedes ampliar tu explicación para entender mejor?",
                "¿Podrías explicar con más detalle?",
                "No entiendo bien, ¿puedes darme más detalles?",
                "¿Podrías explicar a qué te refieres?",
                "¿Puedes ser más específico en tu pregunta?",
                "¿A qué te refieres exactamente?",
                "¿Podrías proporcionar más información, por favor?",
                "¿Qué quieres decir con eso?",
                "No estoy seguro de lo que intentas decir. ¿Puedes elaborarlo?",
                "¿Podrías explicarlo con más claridad?",
                "¿Qué detalles puedes agregar para que lo entienda mejor?",
                "¿Puedes expandir más tu consulta, por favor?",
                "¿Qué aspecto específico estás preguntando?",
                "¿Puedes ser más claro con tu explicación?",
                "¿A qué caso específico te refieres?",
                "¿Qué necesitas exactamente en este contexto?",
                "¿Puedes darme más pistas sobre lo que necesitas?",
                "¿Podrías explicar más tu consulta para entenderlo mejor?",
                "¿Qué significa eso en tu caso?",
                "¿Podrías proporcionar algún ejemplo más detallado?",
                "¿Qué esperas exactamente de esta consulta?",
                "¿Puedes darme más contexto sobre este tema?",
                "No estoy seguro de haber entendido tu punto. ¿Puedes aclararlo?",
                "¿Qué información adicional puedes darme sobre eso?",
                "¿Podrías desglosar tu pregunta para que la entienda mejor?",
                "¿Qué quieres decir específicamente con eso?",
                "¿Puedes ayudarme a entender mejor tu situación?",
                "¿A qué contexto se refiere tu consulta?",
                "¿Podrías elaborarlo un poco más, por favor?",
                "¿Qué quieres decir exactamente con esa palabra?",
                "¿Qué buscas lograr con esta información?",
                "¿Puedes darme más ejemplos para que lo entienda?",
                "¿A qué resultado esperas llegar?",
                "¿Podrías especificar un poco más tu punto?",
                "¿Qué detalles podrías agregar para aclararlo?",
                "¿Qué contexto adicional puedes darme?"
            ]
        },
        {
            "tag": "preguntas_generales",
            "patterns": [
                "¿Qué es esto?",
                "¿Cómo funciona esto?",
                "¿Qué significa esta palabra?",
                "¿Qué debo hacer en este caso?",
                "¿Cómo puedo solucionar este problema?",
                "¿Cuáles son las opciones disponibles?",
                "¿Dónde puedo encontrar más información?",
                "¿Cuándo estará disponible esto?",
                "¿Por qué ocurre esto?",
                "¿Qué harías tú en mi lugar?",
                "¿Cómo puedo aprender más sobre este tema?",
                "¿Es esto posible?",
                "¿Cuál es la mejor manera de proceder?",
                "¿Qué implica este proceso?",
                "¿Cuánto tiempo tomará esto?",
                "¿Qué necesitas de mi parte?",
                "¿Quién puede ayudarme con esto?",
                "¿Qué pasos debo seguir ahora?",
                "¿Esto está funcionando como debería?",
                "¿Es seguro hacer esto?",
                "¿Cuáles son los riesgos?",
                "¿Cómo puedo verificar esto?",
                "¿Qué más debería saber?",
                "¿Qué debo evitar en esta situación?",
                "¿Cuáles son las ventajas de hacer esto?",
                "¿Qué alternativas tengo?",
                "¿Dónde puedo empezar?",
                "¿Qué sucede si hago esto?",
                "¿Esto es necesario?",
                "¿Cómo afecta esto a otras cosas?",
                "¿Qué recomendaciones tienes?",
                "¿Cómo puedo hacerlo más rápido?",
                "¿Qué recursos tengo disponibles?",
                "¿Qué diferencia hay entre esto y aquello?",
                "¿Esto es obligatorio?",
                "¿Qué pasa si no hago esto?",
                "¿Qué tan difícil es esto?",
                "¿Es esto eficiente?",
                "¿Cuáles son las implicaciones de esto?",
                "¿Qué debo hacer primero?",
                "¿Esto aplica a mi situación?",
                "¿Cómo se calcula esto?",
                "¿Esto es correcto?",
                "¿Qué significa esto para mí?",
                "¿Cuáles son los pasos esenciales?",
                "¿Quién es responsable de esto?",
                "¿Cómo puedo medir esto?",
                "¿Qué sucede después de esto?",
                "¿Es esto una buena idea?",
                "¿Cómo afecta esto en el futuro?"
            ],
            "responses": [
                "Esto significa que necesitas más información específica.",
                "Esto depende del contexto, ¿puedes darme más detalles?",
                "En general, esto implica un procedimiento estándar.",
                "La mejor manera de proceder es analizar los detalles.",
                "Esto puede variar según la situación específica.",
                "Podemos buscar más datos para confirmarlo.",
                "Te recomendaría investigar más sobre este tema.",
                "Esto sugiere que es importante considerar tus opciones.",
                "La respuesta depende del objetivo que tengas.",
                "Esto parece ser parte de un proceso más grande.",
                "Para solucionarlo, considera los recursos que tienes.",
                "Esto requiere una comprensión clara de los pasos necesarios.",
                "Debes revisar si esta información es precisa.",
                "Esto es posible con los recursos adecuados.",
                "El tiempo estimado depende de las circunstancias.",
                "Necesitamos evaluar los riesgos antes de proceder.",
                "Puedes encontrar más información en recursos especializados.",
                "Es importante priorizar los pasos en este caso.",
                "Esto se puede verificar revisando la documentación.",
                "Considera las ventajas y desventajas de esta opción.",
                "Esto podría implicar algunas limitaciones.",
                "La seguridad depende de cómo se implemente esto.",
                "Para empezar, asegúrate de entender el objetivo.",
                "Esto puede tener implicaciones a largo plazo.",
                "La eficiencia puede mejorar con ciertos ajustes.",
                "Esto podría necesitar más análisis.",
                "Es importante asegurarse de que los datos sean correctos.",
                "Esto es relevante si aplica directamente a tu caso.",
                "Puedes medir esto utilizando indicadores clave.",
                "Esto parece ser una buena idea en este contexto.",
                "Para obtener resultados, es necesario seguir estos pasos.",
                "Esto podría ser obligatorio en algunos casos.",
                "Esto depende de tus prioridades y objetivos.",
                "El impacto puede ser significativo según las circunstancias.",
                "Esto podría ser complejo pero manejable.",
                "Las alternativas pueden ofrecer mejores resultados.",
                "Esto es algo a considerar cuidadosamente.",
                "El próximo paso es evaluar las opciones.",
                "Esto puede requerir aprobación adicional.",
                "Esto está diseñado para optimizar el proceso.",
                "Las implicaciones deben ser evaluadas antes de proceder.",
                "Esto tiene beneficios específicos si se implementa correctamente.",
                "Es importante entender cómo esto afecta a otros aspectos.",
                "Esto puede necesitar más investigación para confirmarlo.",
                "Esto generalmente se aplica en escenarios específicos.",
                "Esto es algo que debe ser monitoreado constantemente.",
                "Esto puede facilitar otros procesos relacionados.",
                "Esto debería ser revisado antes de tomar una decisión.",
                "El futuro impacto depende de cómo se maneje esto."
            ]
        },
        {
            "tag": "notificaciones_recientes",
            "patterns": [
                "¿Cuáles son las últimas notificaciones?",
                "¿Qué hay de nuevo en las notificaciones?",
                "¿Puedo ver mis notificaciones recientes?",
                "Muéstrame las últimas notificaciones, por favor.",
                "¿Qué notificaciones acabo de recibir?",
                "¿Cuáles son las actualizaciones recientes?",
                "¿Qué novedades tengo en las notificaciones?",
                "¿Hay algo nuevo que deba saber?",
                "¿Qué notificaciones se han recibido recientemente?",
                "¿Puedo revisar las notificaciones más recientes?",
                "¿Qué pasó en las notificaciones últimamente?",
                "¿Qué me he perdido en las notificaciones?",
                "¿Cuáles son las noticias recientes?",
                "¿Puedo consultar las últimas alertas?",
                "¿Hay algún mensaje nuevo en las notificaciones?",
                "¿Qué cambios recientes hay en las notificaciones?",
                "¿Qué eventos han ocurrido recientemente?",
                "¿Cuáles son las actualizaciones más recientes?",
                "¿Qué mensajes acabo de recibir?",
                "¿Hay algo nuevo en mis alertas?",
                "¿Qué ha sucedido en las últimas notificaciones?",
                "¿Cuáles son los avisos más recientes?",
                "¿Hay algo relevante en las notificaciones recientes?",
                "¿Qué me llegó en las últimas notificaciones?",
                "¿Cuáles son las noticias más recientes?",
                "¿Puedo revisar las notificaciones actuales?",
                "¿Qué hay de importante en las últimas alertas?",
                "¿Qué notificaciones recientes debo revisar?",
                "¿Hay algo interesante en mis notificaciones?",
                "¿Cuáles son las novedades más recientes?",
                "¿Qué notificaciones acaban de llegar?",
                "¿Hay actualizaciones nuevas en las notificaciones?",
                "¿Qué información nueva tengo en las notificaciones?",
                "¿Qué datos recientes han llegado en las notificaciones?",
                "¿Puedo ver lo último en notificaciones?",
                "¿Qué me puedes decir de las notificaciones recientes?",
                "¿Qué novedades tengo desde la última vez?",
                "¿Qué mensajes recientes están disponibles?",
                "¿Hay algo nuevo que deba ver en las notificaciones?",
                "¿Qué alertas acabo de recibir?",
                "¿Hay alguna novedad importante en las notificaciones?",
                "¿Qué eventos nuevos hay en las notificaciones?",
                "¿Qué actualizaciones recientes debo considerar?",
                "¿Qué novedades hay desde hace poco?",
                "¿Hay algo urgente en las notificaciones recientes?",
                "¿Qué mensajes nuevos hay disponibles?",
                "¿Cuáles son los avisos recientes?",
                "¿Qué información nueva tienes para mí?",
                "¿Hay algo más en las notificaciones recientes?",
                "¿Qué notificaciones están activas ahora mismo?"
            ],
            "responses": [
                "Aquí están las notificaciones más recientes.",
                "Estas son tus últimas notificaciones.",
                "Revisemos tus notificaciones más recientes.",
                "Esto es lo más nuevo en tus notificaciones.",
                "Actualmente, estas son las notificaciones recientes.",
                "Aquí tienes las novedades más recientes.",
                "Estas son las actualizaciones más recientes para ti.",
                "Esto es lo último que llegó en tus notificaciones.",
                "Tu lista de notificaciones recientes incluye esto.",
                "Estas son las alertas más recientes que recibiste.",
                "Revisando tus notificaciones más actuales.",
                "Esto es lo que llegó recientemente en tus notificaciones.",
                "Aquí tienes lo más reciente que recibiste.",
                "Estos son los mensajes más nuevos en tus notificaciones.",
                "Esto es lo más importante en tus notificaciones recientes.",
                "Las notificaciones actuales incluyen estos elementos.",
                "Esto es lo último que ocurrió en tus notificaciones.",
                "Aquí tienes un resumen de tus notificaciones recientes.",
                "Estas son las actualizaciones más importantes hasta ahora.",
                "Esto es lo que está activo en tus notificaciones ahora mismo.",
                "Tu lista reciente incluye estas notificaciones.",
                "Esto es lo que tienes de novedades en las notificaciones.",
                "Estas son las noticias más recientes que recibiste.",
                "Aquí tienes las alertas más recientes en tu sistema.",
                "Esto es lo que se ha actualizado en tus notificaciones.",
                "Revisemos las novedades recientes en tus notificaciones.",
                "Esto es lo más nuevo que tengo para ti en notificaciones.",
                "Estas son las alertas más importantes de las últimas horas.",
                "Revisando las actualizaciones recientes de tus notificaciones.",
                "Esto es lo que necesitas saber de tus notificaciones.",
                "Esto es lo último que llegó a tus notificaciones.",
                "Tus notificaciones recientes incluyen esto.",
                "Aquí tienes los mensajes más nuevos en tu sistema.",
                "Estas son las novedades más recientes desde la última vez.",
                "Esto es lo que debes revisar en tus notificaciones actuales.",
                "Aquí tienes las alertas nuevas en tus notificaciones.",
                "Estas son las actualizaciones más recientes que encontré.",
                "Revisando las novedades más recientes en tus alertas.",
                "Esto es lo que está disponible en las notificaciones.",
                "Las notificaciones más recientes incluyen estos datos.",
                "Estas son las noticias nuevas en tus notificaciones.",
                "Aquí está el resumen de las últimas notificaciones.",
                "Esto es lo que se actualizó en tus notificaciones más recientes.",
                "Tu sistema tiene estas alertas nuevas ahora.",
                "Esto es lo más nuevo que debes saber en las notificaciones.",
                "Aquí tienes las novedades importantes en tus notificaciones.",
                "Esto es lo que se recibió recientemente.",
                "Tu lista de notificaciones incluye estas alertas nuevas.",
                "Estas son las novedades más recientes en tu sistema."
            ]
        },
        {
            "tag": "definiciones_distintos_temas",
            "patterns": [
                "¿Qué es la inteligencia artificial?",
                "¿Qué significa la teoría de la relatividad?",
                "¿Qué es el cambio climático?",
                "¿Cómo se define el amor?",
                "¿Qué es la democracia?",
                "¿Qué significa la teoría de cuerdas?",
                "¿Qué es la evolución?",
                "¿Cómo se define el liderazgo?",
                "¿Qué es la física cuántica?",
                "¿Qué significa la economía circular?",
                "¿Qué es el capitalismo?",
                "¿Cómo se define la globalización?",
                "¿Qué es el arte moderno?",
                "¿Qué significa el término blockchain?",
                "¿Qué es la sostenibilidad?",
                "¿Qué significa la biodiversidad?",
                "¿Qué es el metaverso?",
                "¿Qué es el feminismo?",
                "¿Qué es la ética?",
                "¿Qué significa la inteligencia emocional?",
                "¿Qué es el Big Data?",
                "¿Cómo se define el concepto de marketing?",
                "¿Qué significa la nanotecnología?",
                "¿Qué es el transhumanismo?",
                "¿Qué es el universo?",
                "¿Cómo se define el concepto de justicia?",
                "¿Qué es la física de partículas?",
                "¿Qué significa el concepto de democracia participativa?",
                "¿Qué es el socialismo?",
                "¿Qué es el materialismo histórico?",
                "¿Qué significa la neurociencia?",
                "¿Qué es la ética profesional?",
                "¿Qué es la biotecnología?",
                "¿Qué significa el concepto de resiliencia?",
                "¿Qué es la inteligencia colectiva?",
                "¿Qué es el cambio tecnológico?",
                "¿Cómo se define el concepto de bienestar?",
                "¿Qué significa la globalización económica?",
                "¿Qué es la teoría de la mente?",
                "¿Qué significa la geopolítica?",
                "¿Qué es la física relativista?",
                "¿Qué significa la economía conductual?",
                "¿Qué es el arte contemporáneo?",
                "¿Qué es el modelo neoliberal?",
                "¿Qué es el ciberespacio?",
                "¿Qué significa la sostenibilidad económica?",
                "¿Qué es el pensamiento crítico?",
                "¿Qué es la inteligencia artificial explicativa?",
                "¿Qué es la epistemología?",
                "¿Qué significa la posmodernidad?",
                "¿Qué es la antropología?",
                "¿Qué significa la criptografía?",
                "¿Qué es la teoría del caos?",
                "¿Qué es la lingüística?",
                "¿Qué significa la ingeniería genética?",
                "¿Qué es la ecología?",
                "¿Qué es el multiculturalismo?",
                "¿Qué significa la teoría de juegos?",
                "¿Qué es la psicología positiva?",
                "¿Qué es la sociología?",
                "¿Qué significa la astrofísica?",
                "¿Qué es la cinematografía?",
                "¿Qué es la literatura poscolonial?",
                "¿Qué significa la cibernética?",
                "¿Qué es la psicología del comportamiento?",
                "¿Qué es la microbiología?",
                "¿Qué significa la termodinámica?",
                "¿Qué es la ética ambiental?",
                "¿Qué es la semiótica?",
                "¿Qué significa la teoría de la información?",
                "¿Qué es la etnografía?",
                "¿Qué es la paleontología?",
                "¿Qué significa la fisiología?",
                "¿Qué es la teología?",
                "¿Qué es la epistemología genética?",
                "¿Qué significa la biología evolutiva?",
                "¿Qué es la musicología?",
                "¿Qué es la teoría crítica?",
                "¿Qué significa la ontología?",
                "¿Qué es la arqueología?",
                "¿Qué es la hermenéutica?",
                "¿Qué significa la psicología analítica?",
                "¿Qué es la fenomenología?",
                "¿Qué es la sociolingüística?",
                "¿Qué significa la teoría literaria?",
                "¿Qué es la biotecnología verde?",
                "¿Qué es la epistemología feminista?",
                "¿Qué significa la teoría de la decisión?",
                "¿Qué es la geografía humana?",
                "¿Qué significa la psicología cognitiva?",
                "¿Qué es la etología?",
                "¿Qué es la filosofía política?",
                "¿Qué significa la psicología evolutiva?",
                "¿Qué es la cartografía?",
                "¿Qué es la bioética?",
                "¿Qué significa la teoría de la motivación?",
                "¿Qué es la microeconomía?",
                "¿Qué es la cosmología?",
                "¿Qué es un podcast?",
                "¿Qué significa el término 'freelance'?",
                "¿Qué es un blog?",
                "¿Qué es un meme?",
                "¿Qué significa 'startup'?",
                "¿Qué es el marketing de contenidos?",
                "¿Qué es un influencer?",
                "¿Qué significa 'crowdfunding'?",
                "¿Qué es un webinar?",
                "¿Qué es la realidad aumentada?",
                "¿Qué significa 'SEO'?",
                "¿Qué es un vlog?",
                "¿Qué es la impresión 3D?",
                "¿Qué significa 'gig economy'?",
                "¿Qué es un e-book?",
                "¿Qué es la ciberseguridad?",
                "¿Qué significa 'phishing'?",
                "¿Qué es un sistema operativo?",
                "¿Qué es el comercio electrónico?",
                "¿Qué significa 'backup'?",
                "¿Qué es el teletrabajo?",
                "¿Qué es el aprendizaje en línea?",
                "¿Qué significa 'big data'?",
                "¿Qué es un CRM?",
                "¿Qué es la privacidad en línea?",
                "¿Qué significa 'streaming'?",
                "¿Qué es un firewall?",
                "¿Qué es la gamificación?",
                "¿Qué es un robot aspirador?",
                "¿Qué significa 'malware'?",
                "¿Qué es un smartwatch?",
                "¿Qué significa 'app'?",
                "¿Qué es un chatbot?",
                "¿Qué es la realidad virtual?",
                "¿Qué significa 'cloud computing'?",
                "¿Qué es un hashtag?",
                "¿Qué es la inteligencia artificial conversacional?",
                "¿Qué significa 'blockchain'?",
                "¿Qué es un podcast de video?",
                "¿Qué es el marketing de afiliación?",
                "¿Qué significa 'big tech'?",
                "¿Qué es un asistente virtual?",
                "¿Qué es la domótica?",
                "¿Qué significa 'digitalización'?",
                "¿Qué es un NFT?",
                "¿Qué es el pago móvil?",
                "¿Qué significa 'e-commerce'?",
                "¿Qué es un código QR?",
                "¿Qué es la impresión digital?",
                "¿Qué significa 'fintech'?",
                "¿Qué es una red social?",
                "¿Qué es la ciberresiliencia?",
                "¿Qué significa 'IoT'?",
                "¿Qué es el marketing digital?",
                "¿Qué es un blog corporativo?",
                "¿Qué significa 'dron'?",
                "¿Qué es la realidad extendida?",
                "¿Qué es el trabajo remoto?",
                "¿Qué significa 'machine learning'?",
                "¿Qué es un plan de negocios?",
                "¿Qué es un hat-trick en fútbol?",
                "¿Qué significa 'fuera de juego'?",
                "¿Qué es un penalti?",
                "¿Qué es la táctica del catenaccio?",
                "¿Qué significa 'pase de la muerte'?",
                "¿Qué es un saque de esquina?",
                "¿Qué es un gol olímpico?",
                "¿Qué significa 'tiempo añadido'?",
                "¿Qué es un tiro libre directo?",
                "¿Qué es la regla del offside?",
                "¿Qué significa 'cambio de orientación'?",
                "¿Qué es un regate?",
                "¿Qué es un saque de meta?",
                "¿Qué significa 'zona defensiva'?",
                "¿Qué es un descenso?",
                "¿Qué significa 'ascenso'?",
                "¿Qué es un equipo ascensor?",
                "¿Qué es la regla del back-pass?",
                "¿Qué significa 'marcación hombre a hombre'?",
                "¿Qué es un autogol?",
                "¿Qué significa 'gol fantasma'?",
                "¿Qué es un contragolpe?",
                "¿Qué significa 'libero'?",
                "¿Qué es un gol de chilena?",
                "¿Qué significa 'golaveraje'?",
                "¿Qué es un rondo?",
                "¿Qué significa 'fútbol total'?",
                "¿Qué es un saque de banda?",
                "¿Qué significa 'presión alta'?",
                "¿Qué es un hat-trick a la inversa?"
            ],
            "responses": [
                "La inteligencia artificial es el campo de estudio que se enfoca en crear máquinas capaces de realizar tareas que normalmente requieren inteligencia humana.",
                "La teoría de la relatividad, propuesta por Albert Einstein, establece que las leyes de la física son las mismas para todos los observadores en movimiento relativo entre sí.",
                "El cambio climático se refiere a los cambios significativos y duraderos en las condiciones climáticas globales, principalmente causado por la actividad humana.",
                "El amor es un sentimiento complejo que involucra afecto, apego y cuidado hacia otra persona u objeto.",
                "La democracia es un sistema de gobierno en el que el poder es ejercido por el pueblo, a través del sufragio libre y elecciones periódicas.",
                "La teoría de cuerdas es una teoría física que propone que las partículas fundamentales no son puntos, sino cuerdas vibrantes de energía.",
                "La evolución es el proceso mediante el cual las especies cambian a lo largo del tiempo debido a la selección natural y otros factores.",
                "El liderazgo es la capacidad de influir y guiar a un grupo de personas para alcanzar un objetivo común.",
                "La física cuántica es la rama de la física que estudia los fenómenos a escalas extremadamente pequeñas, como partículas subatómicas.",
                "La economía circular es un modelo económico que busca reducir el desperdicio y aprovechar al máximo los recursos al cerrar el ciclo de vida de los productos.",
                "El capitalismo es un sistema económico basado en la propiedad privada de los medios de producción y en la libre competencia.",
                "La globalización es el proceso de interconexión e interdependencia de los países a nivel económico, cultural y político.",
                "El arte moderno se refiere a las obras de arte que se desarrollaron desde finales del siglo XIX hasta mediados del siglo XX, caracterizadas por nuevas formas de expresión.",
                "Blockchain es una tecnología de registro distribuido que permite almacenar información de manera segura y descentralizada.",
                "La sostenibilidad es la capacidad de mantener o mejorar los sistemas ambientales, sociales y económicos sin comprometer las necesidades de las futuras generaciones.",
                "La biodiversidad es la variedad de formas de vida en la Tierra, que incluye especies, ecosistemas y diversidad genética.",
                "El metaverso es un espacio virtual compartido, generado por la interacción de la realidad física y la digital, donde los usuarios pueden interactuar en tiempo real.",
                "El feminismo es un movimiento social y político que busca la igualdad de derechos entre mujeres y hombres.",
                "La ética es la rama de la filosofía que estudia los principios de la moralidad y la conducta humana.",
                "La inteligencia emocional se refiere a la capacidad de reconocer, comprender y manejar nuestras propias emociones y las de los demás.",
                "Big Data es un conjunto de datos extremadamente grandes y complejos que requieren herramientas especiales para su procesamiento y análisis.",
                "El marketing es el conjunto de actividades y estrategias utilizadas para promover y vender productos o servicios.",
                "La nanotecnología es la manipulación de la materia a una escala molecular o atómica para desarrollar productos nuevos y avanzados.",
                "El transhumanismo es un movimiento filosófico y científico que busca mejorar las capacidades humanas mediante la tecnología.",
                "El universo es el conjunto de todo lo que existe: la totalidad del espacio, tiempo, materia y energía.",
                "La justicia es el concepto moral y político que busca la equidad y la imparcialidad en la distribución de recursos, oportunidades y derechos.",
                "La física de partículas estudia las partículas fundamentales que constituyen la materia y las fuerzas que las gobiernan.",
                "La democracia participativa es un modelo en el que los ciudadanos tienen una participación directa en la toma de decisiones políticas, más allá del voto.",
                "El socialismo es una ideología política y económica que aboga por la propiedad colectiva de los medios de producción y la distribución equitativa de los recursos.",
                "El materialismo histórico es una teoría de Karl Marx que sostiene que la historia humana es el resultado de la lucha de clases y de la evolución de los modos de producción.",
                "La neurociencia es el estudio del sistema nervioso, incluyendo el cerebro y su influencia en el comportamiento y las funciones cognitivas.",
                "La ética profesional se refiere a los principios morales y las normas que guían el comportamiento dentro de una determinada profesión.",
                "La biotecnología es el uso de organismos vivos o sus componentes para desarrollar productos y soluciones en áreas como la medicina, la agricultura y la industria.",
                "La resiliencia es la capacidad de un sistema o individuo para resistir y adaptarse frente a situaciones adversas o de cambio.",
                "La inteligencia colectiva es la capacidad compartida de un grupo de individuos para resolver problemas, crear ideas y tomar decisiones.",
                "El cambio tecnológico se refiere a la evolución de las tecnologías y cómo estas transforman las sociedades y economías.",
                "El bienestar es el estado de salud física y mental positiva, junto con la satisfacción general con la vida.",
                "La globalización económica se refiere a la creciente interdependencia económica de los países, debido al aumento del comercio y la inversión internacional.",
                "La teoría de la mente es la capacidad de atribuir estados mentales (pensamientos, creencias, deseos) a otros y comprender que los demás tienen perspectivas diferentes.",
                "La geopolítica estudia la influencia de la geografía, la economía y la política en las relaciones internacionales y la toma de decisiones globales.",
                "La física relativista es la rama de la física que estudia fenómenos que ocurren a velocidades cercanas a la de la luz, tal como la teoría de la relatividad de Einstein.",
                "La economía conductual estudia cómo las decisiones económicas son influenciadas por factores psicológicos, sociales y emocionales.",
                "El arte contemporáneo se refiere a las formas de arte creadas en la segunda mitad del siglo XX y hasta la actualidad, a menudo influenciado por la tecnología y el contexto social.",
                "El modelo neoliberal es una teoría económica que promueve la reducción del papel del estado en la economía y la expansión de los mercados libres.",
                "El ciberespacio es el entorno virtual formado por la interconexión de redes de comunicación globales y las actividades realizadas en él.",
                "La sostenibilidad económica se refiere a la capacidad de una economía para mantenerse a largo plazo, garantizando el bienestar sin agotar los recursos.",
                "El pensamiento crítico es la capacidad de analizar y evaluar información de manera objetiva, buscando la verdad y evitando prejuicios.",
                "La inteligencia artificial explicativa busca que los sistemas de inteligencia artificial puedan proporcionar explicaciones claras y comprensibles sobre sus decisiones y procesos.",
                "La epistemología es una rama de la filosofía que se ocupa del conocimiento, su naturaleza y cómo se obtiene.",
                "La posmodernidad es un término que describe una actitud y estilo cultural que surgió después de la modernidad, caracterizada por el escepticismo hacia las grandes narrativas y la valoración de la diversidad cultural.",
                "La antropología es la ciencia que estudia al ser humano desde una perspectiva integral, abordando aspectos biológicos, culturales, sociales y lingüísticos.",
                "La criptografía es la práctica y el estudio de técnicas para asegurar la comunicación en presencia de adversarios, a través de la codificación de mensajes.",
                "La teoría del caos es una rama de las matemáticas que estudia sistemas dinámicos muy sensibles a las condiciones iniciales, lo que lleva a resultados impredecibles a largo plazo.",
                "La lingüística es la ciencia que se ocupa del estudio del lenguaje humano, su estructura, uso y evolución.",
                "La ingeniería genética es la manipulación directa del material genético de un organismo utilizando técnicas de biotecnología para cambiar sus características.",
                "La ecología es la ciencia que estudia las interacciones entre los organismos y su entorno, incluyendo la distribución y abundancia de los seres vivos.",
                "El multiculturalismo es la coexistencia de distintas culturas dentro de una sociedad, promoviendo el respeto y la valoración de la diversidad cultural.",
                "La teoría de juegos es una rama de las matemáticas aplicadas que analiza situaciones estratégicas donde los resultados de una decisión dependen de las decisiones de otros participantes.",
                "La psicología positiva es la rama de la psicología que estudia los aspectos positivos de la experiencia humana, como la felicidad, el bienestar y las virtudes.",
                "La sociología es la disciplina que estudia las estructuras, el funcionamiento y las transformaciones de las sociedades humanas.",
                "La astrofísica es una rama de la astronomía que utiliza las leyes de la física para entender el comportamiento y propiedades de los objetos celestes.",
                "La cinematografía se refiere tanto al arte y técnica de hacer películas como a la profesión de aquellos que capturan imágenes en movimiento.",
                "La literatura poscolonial analiza las obras literarias producidas en países que fueron colonizados y cómo estas reflejan las experiencias de la colonización y descolonización.",
                "La cibernética es el estudio de los sistemas de control y comunicación en animales y máquinas, enfocándose en la regulación y la retroalimentación.",
                "La psicología del comportamiento, o conductismo, se centra en estudiar cómo los comportamientos se aprenden como respuesta a estímulos del entorno.",
                "La microbiología es la disciplina que estudia los microorganismos, incluyendo bacterias, virus, hongos y protozoos, y sus efectos en la salud, el ambiente y la industria.",
                "La termodinámica es una rama de la física que trata sobre el calor, el trabajo, la temperatura y las propiedades de los sistemas que afectan estas cantidades.",
                "La ética ambiental es la rama de la ética que se preocupa por los valores morales aplicados a la conservación y protección del medio ambiente.",
                "La semiótica es el estudio de los signos y símbolos, cómo se usan y cómo significan en la comunicación.",
                "La teoría de la información es el estudio de la cuantificación, almacenamiento y comunicación de información, basado en medidas como la entropía.",
                "La etnografía es una metodología de investigación en antropología que implica la observación y descripción de culturas y comportamientos humanos.",
                "La paleontología es la ciencia que estudia la vida prehistórica a través de los fósiles.",
                "La fisiología es la rama de la biología que trata de las funciones y actividades de los seres vivos y sus partes.",
                "La teología es el estudio sistemático de la naturaleza de lo divino y de las creencias religiosas, prácticas y experiencias.",
                "La epistemología genética es una teoría de Jean Piaget que estudia cómo se desarrolla el conocimiento a través de estadios cognitivos.",
                "La biología evolutiva es la rama de la biología que estudia los mecanismos, patrones y consecuencias de la evolución biológica.",
                "La musicología es el estudio académico de la música, que incluye su historia, teoría, y prácticas culturales.",
                "La teoría crítica es una escuela de pensamiento que busca entender y cambiar la sociedad mediante la crítica de las estructuras de poder y las ideologías.",
                "La ontología es la rama de la filosofía que trata sobre la naturaleza del ser, de la existencia y de la realidad.",
                "La arqueología es la ciencia que estudia las sociedades humanas del pasado a través de sus restos materiales.",
                "La hermenéutica es la teoría y metodología de la interpretación, especialmente de textos, pero también de fenómenos culturales.",
                "La psicología analítica, desarrollada por Carl Jung, se centra en explorar el inconsciente a través de arquetipos y el proceso de individuación.",
                "La fenomenología es una corriente filosófica que estudia las experiencias conscientes directamente tal como se presentan.",
                "La sociolingüística estudia cómo el lenguaje se usa en contextos sociales y cómo es influenciado por factores sociales.",
                "La teoría literaria es el análisis sistemático de la literatura, explorando aspectos como género, estilo, narrativa y crítica.",
                "La biotecnología verde se refiere al uso de la biotecnología en la agricultura para mejorar la producción y sostenibilidad de los cultivos.",
                "La epistemología feminista es una corriente que examina cómo el conocimiento es influenciado por las relaciones de género, buscando una perspectiva más inclusiva.",
                "La teoría de la decisión se ocupa de los métodos y principios usados para tomar decisiones racionales en contextos de incertidumbre.",
                "La geografía humana estudia los aspectos humanos del mundo, como las culturas, economías, y patrones de población.",
                "La psicología cognitiva se enfoca en cómo procesamos información, percibimos, recordamos, y pensamos.",
                "La etología es el estudio científico del comportamiento animal, especialmente en condiciones naturales.",
                "La filosofía política es la rama de la filosofía que investiga cuestiones sobre el estado, el gobierno, la política, la libertad, la justicia, la propiedad y los derechos.",
                "La psicología evolutiva aplica principios de la evolución para entender el comportamiento humano y sus orígenes.",
                "La cartografía es el arte y ciencia de la representación gráfica de la Tierra y sus características en mapas.",
                "La bioética es el estudio de las cuestiones éticas que surgen de los avances en medicina y biología.",
                "La teoría de la motivación se refiere a los estudios que intentan explicar por qué las personas se comportan de ciertas maneras para alcanzar objetivos.",
                "La microeconomía es la rama de la economía que analiza el comportamiento de individuos y empresas en términos de decisiones de consumo y producción.",
                "La cosmología es la ciencia que estudia el origen, la evolución y el destino del universo en su totalidad.",
                "Un podcast es una serie de episodios de audio que se pueden descargar o escuchar en línea, normalmente centrados en un tema específico.",
                "Freelance se refiere a alguien que trabaja por cuenta propia, ofreciendo servicios a diferentes clientes sin un contrato fijo.",
                "Un blog es un sitio web donde se publican regularmente artículos, usualmente escritos por una persona o un grupo de personas sobre un tema específico.",
                "Un meme es una imagen, video o texto que se propaga rápidamente por internet, a menudo con contenido humorístico o satírico.",
                "Una startup es una empresa emergente, generalmente en el ámbito tecnológico, que busca resolver un problema con un modelo de negocio innovador.",
                "El marketing de contenidos es una estrategia de marketing que consiste en crear y compartir contenido relevante para atraer y retener a un público específico.",
                "Un influencer es una persona que tiene la capacidad de influir en las decisiones de compra de otros debido a su autoridad, conocimiento o relación con su audiencia.",
                "Crowdfunding es un método de financiación colectiva donde muchas personas aportan pequeñas cantidades de dinero, generalmente a través de internet, para financiar un proyecto.",
                "Un webinar es una conferencia, taller o presentación que se transmite en línea, permitiendo la participación remota de los asistentes.",
                "La realidad aumentada es una tecnología que superpone elementos digitales sobre el mundo real, mejorando la experiencia del usuario con información adicional.",
                "SEO significa Search Engine Optimization y se refiere a las técnicas usadas para mejorar la visibilidad de un sitio web en los motores de búsqueda.",
                "Un vlog es un blog en formato de video, donde los creadores comparten contenido visual sobre su vida, opiniones o experiencias.",
                "La impresión 3D es un proceso de fabricación aditiva donde se crea un objeto tridimensional a partir de un diseño digital, capa por capa.",
                "La gig economy es un mercado laboral donde trabajan personas autónomas que ofrecen servicios a corto plazo o trabajos temporales.",
                "Un e-book es un libro en formato digital que se puede leer en dispositivos electrónicos como tabletas, lectores de libros electrónicos o computadoras.",
                "La ciberseguridad se refiere a las prácticas diseñadas para proteger dispositivos, redes, programas y datos contra ataques, daños o accesos no autorizados.",
                "Phishing es una forma de fraude en línea donde los atacantes se hacen pasar por entidades confiables para obtener información personal o financiera.",
                "Un sistema operativo es un software que gestiona el hardware de una computadora y proporciona servicios comunes para los programas que se ejecutan en la misma.",
                "El comercio electrónico es la compra y venta de productos o servicios a través de internet, abarcando desde pequeñas tiendas hasta grandes mercados online.",
                "Backup es la copia de seguridad de datos para proteger contra su pérdida, permitiendo restaurarlos en caso de fallo o daño del sistema.",
                "El teletrabajo es una práctica de empleo donde los empleados realizan su trabajo desde casa o cualquier lugar remoto, usando tecnologías de comunicación.",
                "El aprendizaje en línea o e-learning es la educación o capacitación que se realiza a través de internet usando recursos digitales.",
                "Big Data se refiere a grandes volúmenes de datos que se pueden analizar para revelar patrones, tendencias y asociaciones, especialmente relacionadas con el comportamiento humano.",
                "CRM significa Customer Relationship Management y es un conjunto de prácticas, estrategias y tecnologías que las empresas usan para gestionar y analizar las interacciones con los clientes.",
                "La privacidad en línea es la protección de los datos personales de los usuarios de internet, evitando su acceso o uso no autorizado.",
                "Streaming es la transmisión en tiempo real de contenido de audio o video a través de internet, permitiendo su consumo sin necesidad de descargarlo.",
                "Un firewall es un sistema de seguridad de red que monitorea y controla el tráfico entrante y saliente según reglas de seguridad predefinidas.",
                "La gamificación es la aplicación de mecánicas de juego en contextos no lúdicos para motivar la participación, el compromiso y la lealtad.",
                "Un robot aspirador es un dispositivo automatizado diseñado para limpiar suelos de manera autónoma, utilizando sensores para navegar por el espacio.",
                "Malware es una abreviatura de 'malicious software', que incluye virus, gusanos, troyanos y otros programas creados para dañar o interrumpir sistemas.",
                "Un smartwatch es un reloj inteligente que, además de mostrar la hora, puede realizar funciones como recibir notificaciones, realizar pagos, y monitorizar la salud.",
                "App es la abreviatura de aplicación, un software diseñado para realizar tareas específicas en dispositivos móviles o tabletas.",
                "Un chatbot es un programa de inteligencia artificial diseñado para simular conversaciones humanas, usado en servicio al cliente o entretenimiento.",
                "La realidad virtual es una tecnología que crea un entorno simulado que parece real, permitiendo a los usuarios interactuar en tres dimensiones.",
                "Cloud computing o computación en la nube se refiere al uso de servidores remotos para almacenar, gestionar y procesar datos, en lugar de usar hardware local.",
                "Un hashtag es una palabra o frase sin espacios precedida por el símbolo #, usada en redes sociales para etiquetar o categorizar contenido.",
                "La inteligencia artificial conversacional es un tipo de IA que permite a las máquinas entender y generar lenguaje humano para interactuar de manera natural.",
                "Blockchain es una tecnología de registro distribuido que permite almacenar información en bloques seguros y enlazados, utilizado en criptomonedas y más.",
                "Un podcast de video es similar a un podcast de audio, pero incluye contenido visual, disponible para descarga o streaming en plataformas específicas.",
                "El marketing de afiliación es un acuerdo donde una empresa paga a afiliados por cada visita, venta o registro que proviene del enlace del afiliado.",
                "Big tech se refiere a las grandes compañías tecnológicas que tienen una influencia significativa en la economía global y la vida digital.",
                "Un asistente virtual es una aplicación de IA que puede realizar tareas o servicios para un individuo basado en comandos o preguntas en lenguaje natural.",
                "La domótica es la integración de la tecnología en el hogar para automatizar y controlar funciones como iluminación, seguridad, y entretenimiento.",
                "La digitalización es el proceso de convertir información o actividades analógicas a formato digital, mejorando la eficiencia y accesibilidad.",
                "Un NFT (Non-Fungible Token) es un tipo de activo digital que representa objetos reales o digitales, único y no intercambiable, registrado en blockchain.",
                "El pago móvil es una forma de pago que utiliza dispositivos móviles como smartphones para hacer transacciones financieras.",
                "E-commerce o comercio electrónico es la compra y venta de productos o servicios por internet, incluyendo tiendas online y plataformas de market place.",
                "Un código QR es un tipo de código de barras de dos dimensiones que almacena información para ser leída por dispositivos electrónicos.",
                "La impresión digital es una técnica de impresión que usa métodos digitales para transferir imágenes a diversos soportes sin necesidad de planchas.",
                "Fintech es la combinación de 'finanzas' y 'tecnología' para describir nuevas tecnologías que buscan hacer servicios financieros más accesibles.",
                "Una red social es una plataforma digital donde usuarios crean perfiles y se conectan para compartir información, contenido y comunicarse.",
                "La ciberresiliencia es la capacidad de una organización para mantener sus operaciones y recuperarse rápidamente de incidentes cibernéticos.",
                "IoT, o Internet de las Cosas, se refiere a la interconexión de objetos físicos con dispositivos electrónicos, sensores y software para intercambiar datos.",
                "El marketing digital incluye todas las actividades de marketing que se realizan a través de medios electrónicos como la web, móviles, correo electrónico, etc.",
                "Un blog corporativo es una plataforma donde una empresa publica contenido relacionado con su industria, productos, servicios o cultura organizacional.",
                "Un dron es un vehículo aéreo no tripulado que puede controlarse remotamente o volar de manera autónoma, utilizado para vigilancia, filmación, entre otros usos.",
                "La realidad extendida (XR) abarca realidad virtual, aumentada y mixta, creando experiencias inmersivas que mezclan lo físico y lo digital.",
                "El trabajo remoto es el empleo realizado fuera de una oficina central, utilizando herramientas digitales para colaborar y comunicarse.",
                "Machine learning o aprendizaje automático es una rama de la IA que permite a los sistemas mejorar su rendimiento sin ser explícitamente programados.",
                "Un plan de negocios es un documento que detalla los objetivos de una empresa, las estrategias para alcanzarlos, y los análisis financieros pertinentes.",
                "Un hat-trick es cuando un jugador marca tres goles en un mismo partido.",
                "Fuera de juego o offside ocurre cuando un jugador está más cerca de la línea de gol contraria que el balón y el penúltimo defensor cuando le pasa el balón un compañero.",
                "Un penalti es un tiro libre desde el punto penal, otorgado por una infracción cometida dentro del área de penal.",
                "El catenaccio es una táctica defensiva italiana, que utiliza un esquema muy defensivo con un libero para contrarrestar los ataques del equipo rival.",
                "El pase de la muerte es un pase horizontal desde la banda hacia el centro, justo detrás de la defensa contraria, ideal para marcar goles.",
                "Un saque de esquina es un tiro libre desde la esquina del campo cuando el balón sale por la línea de fondo tras ser tocado por un defensor.",
                "Un gol olímpico es un gol marcado directamente desde un saque de esquina.",
                "El tiempo añadido es el tiempo extra que el árbitro añade al final de cada tiempo para compensar paradas en el juego.",
                "Un tiro libre directo permite intentar marcar un gol directamente sin necesidad de que otro jugador toque el balón antes.",
                "La regla del offside o fuera de juego es para evitar que los atacantes se posicionen ilegalmente cerca de la portería contraria.",
                "Un cambio de orientación es un pase que cambia el flanco de juego, buscando desequilibrar al equipo defensor.",
                "Un regate es la acción de un jugador para esquivar a un oponente manteniendo el control del balón.",
                "Un saque de meta ocurre cuando el balón sale por la línea de fondo después de ser tocado por un atacante; el portero reinicia el juego.",
                "La zona defensiva es el área del campo más cercana a la propia portería, donde se concentra la defensa del equipo.",
                "El descenso es cuando un equipo pasa de una categoría superior a una inferior por mal rendimiento en la liga.",
                "El ascenso es el proceso de un equipo que pasa de una división inferior a una superior por buen rendimiento.",
                "Un equipo ascensor es aquel que sube y baja frecuentemente entre diferentes divisiones sin establecerse en una sola categoría.",
                "La regla del back-pass prohíbe al portero tomar el balón con las manos si le fue pasado deliberadamente con el pie por un compañero.",
                "La marcación hombre a hombre es una táctica donde cada defensor se encarga de marcar a un atacante rival específico.",
                "Un autogol es cuando un jugador marca un gol en su propia portería, contando a favor del equipo contrario.",
                "Un gol fantasma es un gol que entra en la portería pero no es visto o reconocido por el árbitro, usualmente debido a la falta de tecnología.",
                "Un contragolpe es una rápida transición de defensa a ataque, aprovechando que el equipo contrario está desorganizado.",
                "El libero es un defensor que actúa como una especie de 'barrendero', detrás de la línea defensiva, para recoger balones perdidos.",
                "Un gol de chilena es un gol marcado con una acrobática patada trasera, con el jugador saltando y golpeando el balón por encima de su cabeza.",
                "El golaveraje es la diferencia entre goles marcados y recibidos, utilizado como criterio de desempate en algunas ligas.",
                "Un rondo es un ejercicio de entrenamiento donde jugadores se pasan el balón en círculo mientras uno intenta recuperarlo.",
                "El fútbol total es una filosofía de juego donde todos los jugadores pueden ocupar cualquier posición, promoviendo la fluidez y flexibilidad.",
                "Un saque de banda es el método de reiniciar el juego cuando el balón sale por la línea lateral, tomando el balón con las manos.",
                "La presión alta es una estrategia donde los jugadores presionan agresivamente a los defensores contrarios para recuperar el balón cerca de su área.",
                "Un hat-trick a la inversa es cuando un jugador provoca tres autogoles, una rareza en el deporte."
            ]
        },
        {
            "tag": "procedimientos_varios",
            "patterns": [
                "¿Cómo cambio una rueda?",
                "¿Cómo puedo cocinar arroz?",
                "¿Cómo arreglo un grifo que gotea?",
                "¿Cómo instalo una lámpara?",
                "¿Cómo configuro mi router?",
                "¿Cómo limpio una alfombra?",
                "¿Cómo saco una mancha de vino de la ropa?",
                "¿Cómo planto un árbol?",
                "¿Cómo cambio una bombilla?",
                "¿Cómo desinfecto la casa?",
                "¿Cómo guardo correctamente la comida?",
                "¿Cómo pinto una pared?",
                "¿Cómo arreglo un coche averiado?",
                "¿Cómo hacer una cama?",
                "¿Cómo corto una cebolla sin llorar?",
                "¿Cómo preparo un café?",
                "¿Cómo saco el aire de una rueda de bicicleta?",
                "¿Cómo doy de comer a un gato?",
                "¿Cómo instalo una aplicación en mi teléfono?",
                "¿Cómo aprendo a nadar?",
                "¿Cómo deshago un nudo?",
                "¿Cómo cargo mi celular más rápido?",
                "¿Cómo cambio una pila de reloj?",
                "¿Cómo reciclo adecuadamente?",
                "¿Cómo desinfecto mi móvil?",
                "¿Cómo instalo un sistema operativo en mi computadora?",
                "¿Cómo hago una pizza casera?",
                "¿Cómo organizo mi closet?",
                "¿Cómo cuido una planta de interior?",
                "¿Cómo formateo un disco duro?",
                "¿Cómo tejo una bufanda?",
                "¿Cómo arreglo un teléfono móvil con la pantalla rota?",
                "¿Cómo construyo un mueble de madera?",
                "¿Cómo instalo un aire acondicionado?",
                "¿Cómo borro el historial de navegación?",
                "¿Cómo hago un presupuesto personal?",
                "¿Cómo cuido mi piel después de un quemadura?",
                "¿Cómo cambio un fusible quemado?",
                "¿Cómo afilo un cuchillo?",
                "¿Cómo organizo una fiesta?",
                "¿Cómo hago un compost?",
                "¿Cómo cambio el aceite del coche?",
                "¿Cómo monto una bicicleta?",
                "¿Cómo elijo un buen vino?",
                "¿Cómo afeitarme correctamente?",
                "¿Cómo arreglo una cadena rota de bicicleta?",
                "¿Cómo instalo un ventilador de techo?",
                "¿Cómo arreglo una fuga de agua en la casa?",
                "¿Cómo hago una ensalada?",
                "¿Cómo quito la pintura vieja de una superficie?",
                "¿Cómo hago que mi ropa se vea más nueva?"
            ],
            "responses": [
                "Para cambiar una rueda, asegúrate de tener un gato hidráulico, una llave inglesa y una rueda de repuesto. Levanta el coche, quita los tornillos, cambia la rueda y aprieta nuevamente los tornillos.",
                "Para cocinar arroz, enjuaga el arroz, ponlo en una olla con agua (aproximadamente 1.5 partes de agua por 1 de arroz), lleva a ebullición y luego cocina a fuego bajo por 18-20 minutos.",
                "Para arreglar un grifo que gotea, apaga el suministro de agua, desarma el grifo, revisa la arandela y cámbiala si está dañada. Vuelve a armar el grifo y abre el agua.",
                "Para instalar una lámpara, apaga la corriente eléctrica, conecta los cables de la lámpara a los cables del techo según el código de colores y atornilla la lámpara en su lugar.",
                "Para configurar un router, conecta el cable de internet al puerto WAN del router, conéctalo a una fuente de energía y accede a la configuración a través de un navegador web.",
                "Para limpiar una alfombra, usa un aspirador para eliminar el polvo. Luego, usa un limpiador de alfombra adecuado y un trapo para frotar las manchas. Deja secar bien.",
                "Para sacar una mancha de vino de la ropa, primero pon sal sobre la mancha, luego enjuaga con agua fría. Después, pon detergente y lava la prenda normalmente.",
                "Para plantar un árbol, excava un hoyo más grande que la raíz del árbol, coloca el árbol en el hoyo, cúbrelo con tierra y rieguelo bien.",
                "Para cambiar una bombilla, apaga la corriente eléctrica, desenrosca la bombilla rota, coloca la nueva en el mismo lugar y vuelve a encender la electricidad.",
                "Para desinfectar la casa, usa un limpiador desinfectante en superficies de alto contacto como manijas de puertas, mesas y teléfonos. Usa guantes y ventila el lugar.",
                "Para guardar correctamente la comida, asegúrate de sellarla bien en envases herméticos y colócala en el refrigerador o congelador según sea necesario.",
                "Para pintar una pared, cubre el suelo y los muebles con plásticos, aplica una capa de imprimación si es necesario, y luego pinta con una brocha o rodillo.",
                "Para arreglar un coche averiado, identifica el problema (batería, motor, etc.), asegúrate de tener las herramientas necesarias y sigue el manual del coche.",
                "Para hacer la cama, coloca las sábanas ajustadas sobre el colchón, estira bien las sábanas y cubre con la manta y almohadas.",
                "Para cortar una cebolla sin llorar, enfríala en el refrigerador antes de cortarla y usa un cuchillo bien afilado para reducir la liberación de compuestos irritantes.",
                "Para preparar un café, coloca café molido en un filtro, vierte agua caliente por encima y deja que el café gotee en la jarra o taza.",
                "Para sacar el aire de una rueda de bicicleta, utiliza una bomba de mano con manómetro para presionar el aire hacia afuera o un desinflador si es necesario.",
                "Para dar de comer a un gato, pon comida en su plato y asegúrate de que tenga acceso a agua fresca en todo momento.",
                "Para instalar una aplicación en tu teléfono, accede a la tienda de aplicaciones, busca la app deseada, presiona 'Instalar' y espera a que se complete.",
                "Para aprender a nadar, comienza con lecciones en una piscina profunda, practica flotación y respiración, y gradualmente aprende a mover tus brazos y piernas.",
                "Para deshacer un nudo, utiliza un poco de aceite o agua para aflojar el nudo y luego usa los dedos para separar suavemente las fibras del hilo o cuerda.",
                "Para cargar tu celular más rápido, utiliza un cargador de alta potencia, apaga el teléfono mientras se carga y asegúrate de que no esté usando muchas aplicaciones.",
                "Para cambiar una pila de reloj, abre la tapa del reloj, quita la pila vieja con cuidado y coloca la nueva, asegurándote de que está en la posición correcta.",
                "Para reciclar adecuadamente, separa los materiales reciclables como plástico, vidrio y papel, y colócalos en los contenedores destinados para cada tipo de material.",
                "Para desinfectar tu móvil, usa un paño suave y húmedo con alcohol isopropílico para limpiar la pantalla y las superficies del dispositivo.",
                "Para instalar un sistema operativo en tu computadora, inserta el disco o USB con el sistema operativo, reinicia el equipo y sigue las instrucciones en pantalla.",
                "Para hacer una pizza casera, prepara la masa, agrega salsa de tomate, queso y tus ingredientes favoritos, y hornea en un horno precalentado a 220°C por unos 15 minutos.",
                "Para organizar tu closet, divide la ropa por tipo (camisas, pantalones, etc.) y por frecuencia de uso. Usa cajas o separadores para maximizar el espacio.",
                "Para cuidar una planta de interior, asegúrate de que reciba la cantidad adecuada de luz, riega según la necesidad de la planta y cambia la tierra cuando sea necesario.",
                "Para formatear un disco duro, ve a 'Administración de discos' en tu computadora, selecciona el disco, elige 'Formatear' y sigue los pasos que te indica el sistema.",
                "Para tejer una bufanda, elige el hilo y las agujas adecuadas, haz un nudo inicial, y luego teje en punto derecho o en el patrón que prefieras.",
                "Para arreglar un teléfono móvil con la pantalla rota, compra una pantalla de repuesto, usa una herramienta especial para quitar la pantalla dañada y reemplázala.",
                "Para construir un mueble de madera, sigue las instrucciones del manual, utiliza tornillos y herramientas adecuadas, y asegúrate de que todas las piezas encajen correctamente.",
                "Para instalar un aire acondicionado, coloca la unidad exterior en un lugar ventilado, conecta los tubos de refrigerante y la unidad interior, y sigue las instrucciones del fabricante.",
                "Para borrar el historial de navegación, ve a la configuración de tu navegador, selecciona la opción de 'Borrar historial' y elige el período que deseas eliminar.",
                "Para hacer un presupuesto personal, registra todos tus ingresos y gastos mensuales, calcula tus ahorros y ajusta tus gastos si es necesario para cumplir con tus metas.",
                "Para cuidar tu piel después de una quemadura, aplica una crema hidratante o gel de aloe vera, evita el sol y mantén la zona limpia y cubierta si es necesario.",
                "Para cambiar un fusible quemado, apaga la corriente eléctrica, retira el fusible viejo y reemplázalo por uno del mismo tipo y capacidad.",
                "Para afilar un cuchillo, usa una piedra de afilar o una afiladora eléctrica, y pasa el cuchillo por la piedra en un ángulo de unos 20 grados para mantenerlo afilado.",
                "Para organizar una fiesta, elige un tema, haz una lista de invitados, prepara la comida y las bebidas, y decora el lugar de acuerdo al tema elegido.",
                "Para hacer un compost, coloca restos de comida, hojas y otros materiales orgánicos en un contenedor, mantén la mezcla húmeda y voltea de vez en cuando.",
                "Para cambiar el aceite del coche, levanta el coche, retira el tornillo de drenaje, deja salir el aceite viejo, coloca el nuevo aceite y asegúrate de que esté en el nivel correcto.",
                "Para montar una bicicleta, comienza con el marco, coloca las ruedas, el manillar y los pedales, y ajusta todos los tornillos y tuercas antes de probarla.",
                "Para elegir un buen vino, considera el tipo de uva, la región y la cosecha. Si es para una comida específica, asegúrate de que combine bien con los platillos.",
                "Para afeitarte correctamente, humedece tu rostro con agua tibia, aplica crema de afeitar, utiliza una cuchilla limpia y afeita en la dirección del crecimiento del vello.",
                "Para arreglar una cadena rota de bicicleta, retira la cadena de la bicicleta, encuentra el eslabón roto y reemplázalo o usa un conector de cadena para unir los extremos.",
                "Para instalar un ventilador de techo, apaga la electricidad, fija el soporte del ventilador al techo, conecta los cables y coloca las aspas de forma segura.",
                "Para arreglar una fuga de agua en la casa, cierra la llave de paso, encuentra la fuente de la fuga, usa cinta de fontanero o reemplaza la parte dañada.",
                "Para hacer una ensalada, corta tus verduras favoritas, agrega proteínas como pollo o huevo, aliña con aceite, vinagre, sal y pimienta al gusto.",
                "Para quitar la pintura vieja de una superficie, usa un removedor de pintura, aplica sobre la superficie y raspa con una espátula hasta que la pintura se desprenda.",
                "Para hacer que tu ropa se vea más nueva, lava con detergentes adecuados, plancha correctamente y almacena la ropa de manera que no se deforme."
            ]
        },
        {
            "tag": "como_funciona",
            "patterns": [
                "¿Cómo funciona una impresora?",
                "¿Cómo funciona el internet?",
                "¿Cómo funciona un motor de coche?",
                "¿Cómo funciona el sistema solar?",
                "¿Cómo funciona un teléfono móvil?",
                "¿Cómo funciona un televisor?",
                "¿Cómo funciona un frigorífico?",
                "¿Cómo funciona una bicicleta?",
                "¿Cómo funciona el Wi-Fi?",
                "¿Cómo funciona una cámara digital?",
                "¿Cómo funciona una tarjeta gráfica?",
                "¿Cómo funciona una lavadora?",
                "¿Cómo funciona un ascensor?",
                "¿Cómo funciona un microondas?",
                "¿Cómo funciona una lámpara LED?",
                "¿Cómo funciona un reloj inteligente?",
                "¿Cómo funciona el Bluetooth?",
                "¿Cómo funciona un sistema operativo?",
                "¿Cómo funciona un aeroplano?",
                "¿Cómo funciona un GPS?",
                "¿Cómo funciona el correo electrónico?",
                "¿Cómo funciona una batería de coche?",
                "¿Cómo funciona un sistema de refrigeración?",
                "¿Cómo funciona una impresora 3D?",
                "¿Cómo funciona un aire acondicionado?",
                "¿Cómo funciona la energía solar?",
                "¿Cómo funciona una cámara de seguridad?",
                "¿Cómo funciona un radar?",
                "¿Cómo funciona el blockchain?",
                "¿Cómo funciona una cerradura digital?",
                "¿Cómo funciona el sistema inmunológico?",
                "¿Cómo funciona la electricidad?",
                "¿Cómo funciona un altavoz Bluetooth?",
                "¿Cómo funciona la criptomoneda?",
                "¿Cómo funciona una página web?",
                "¿Cómo funciona una batería recargable?",
                "¿Cómo funciona un termostato inteligente?",
                "¿Cómo funciona el correo postal?",
                "¿Cómo funciona un tren?",
                "¿Cómo funciona un motor eléctrico?",
                "¿Cómo funciona la energía eólica?",
                "¿Cómo funciona un router?",
                "¿Cómo funciona el teletrabajo?",
                "¿Cómo funciona un termómetro digital?",
                "¿Cómo funciona una impresora láser?",
                "¿Cómo funciona un micrófono?",
                "¿Cómo funciona un GPS en el coche?",
                "¿Cómo funciona un calefactor?",
                "¿Cómo funciona una bomba de aire?",
                "¿Cómo funciona una calculadora científica?"
            ],
            "responses": [
                "Una impresora funciona recibiendo una señal de una computadora o dispositivo móvil, que le indica qué imprimir. Luego, usa tinta o tóner para transferir la imagen o texto sobre papel.",
                "El internet funciona a través de una red global de servidores y cables que permiten la transmisión de datos a alta velocidad entre dispositivos conectados.",
                "Un motor de coche funciona quemando combustible dentro de sus cilindros. Esta combustión genera energía que mueve los pistones, los cuales hacen girar el cigüeñal para mover el vehículo.",
                "El sistema solar funciona gracias a la gravedad del sol, que mantiene a los planetas en órbita alrededor de él. Los planetas, satélites y otros objetos están todos en constante movimiento.",
                "Un teléfono móvil funciona enviando y recibiendo señales a través de torres celulares, Wi-Fi o Bluetooth, y procesando datos mediante su sistema operativo y hardware interno.",
                "Un televisor funciona recibiendo señales de audio y video, ya sea a través de cable, satélite o Wi-Fi. Estas señales son procesadas y luego se muestran en la pantalla.",
                "Un frigorífico funciona extrayendo calor del interior del compartimento y liberándolo al ambiente exterior. Esto se logra mediante un ciclo de compresión y expansión de un gas refrigerante.",
                "Una bicicleta funciona mediante el movimiento de pedales, que hacen girar una cadena que a su vez hace girar la rueda trasera. La fuerza se transfiere a las ruedas para que avancen.",
                "El Wi-Fi funciona mediante ondas de radio que permiten la transmisión de datos entre un router y dispositivos dentro de su alcance. Los datos viajan en forma de señales digitales.",
                "Una cámara digital funciona capturando imágenes a través de un sensor de imagen. Este sensor convierte la luz que entra a través del lente en señales eléctricas que se procesan y almacenan.",
                "Una tarjeta gráfica funciona procesando los gráficos y videos de una computadora, utilizando su propio procesador para liberar de carga al CPU y generar imágenes en el monitor.",
                "Una lavadora funciona utilizando un motor para girar el tambor, donde se mezclan agua y detergente. El agua es bombeada y se elimina al final del ciclo de lavado.",
                "Un ascensor funciona mediante un sistema de poleas y contrapesos que permiten que se mueva hacia arriba y hacia abajo dentro de un edificio.",
                "Un microondas funciona utilizando ondas electromagnéticas (microondas) para calentar las moléculas de agua en los alimentos, lo que genera calor y cocina el alimento rápidamente.",
                "Una lámpara LED funciona mediante un diodo semiconductor que emite luz cuando una corriente eléctrica pasa a través de él. Son muy eficientes en términos de energía.",
                "Un reloj inteligente funciona utilizando sensores y conectividad inalámbrica (Bluetooth, Wi-Fi) para monitorear la salud, recibir notificaciones y ejecutar aplicaciones.",
                "El Bluetooth funciona mediante la transmisión de ondas de radio a corta distancia entre dispositivos, lo que les permite intercambiar datos sin necesidad de cables.",
                "Un sistema operativo funciona gestionando el hardware de la computadora o dispositivo móvil y proporcionando una interfaz para que los usuarios interactúen con las aplicaciones.",
                "Un aeroplano funciona generando una diferencia de presión entre la parte superior e inferior de sus alas mediante la velocidad, lo que crea una fuerza de elevación que le permite volar.",
                "Un GPS funciona mediante señales enviadas por satélites que transmiten su posición. Los dispositivos GPS calculan la ubicación del usuario comparando estas señales.",
                "El correo electrónico funciona enviando mensajes a través de servidores de correo, los cuales reciben, almacenan y entregan los mensajes a las direcciones de destino a través de internet.",
                "Una batería de coche funciona almacenando energía química que se convierte en energía eléctrica para alimentar el motor y otros componentes electrónicos del vehículo.",
                "Un sistema de refrigeración funciona extrayendo el calor de un espacio o líquido y disipándolo a través de un sistema de tubos o un ventilador.",
                "Una impresora 3D funciona añadiendo capas sucesivas de material (como plástico o metal) en forma de filamento, hasta que se construye un objeto tridimensional.",
                "Un aire acondicionado funciona mediante un ciclo de refrigeración que extrae el calor del aire interior y lo reemplaza con aire más fresco mediante un gas refrigerante.",
                "La energía solar funciona captando la luz del sol con paneles solares y convirtiéndola en energía eléctrica o térmica mediante un proceso de conversión fotovoltaica o térmica.",
                "Una cámara de seguridad funciona grabando video de un área específica, que luego se almacena en un disco duro o en la nube para su monitoreo posterior.",
                "Un radar funciona emitiendo ondas de radio que rebotan en los objetos cercanos, y luego detecta el retorno de esas ondas para calcular la distancia y velocidad de los objetos.",
                "El blockchain funciona como un registro digital de transacciones que es descentralizado, seguro y público. Cada bloque de información se enlaza con el anterior de manera irreversible.",
                "Una cerradura digital funciona mediante un sistema electrónico que se activa al introducir un código, tarjeta o huella dactilar, desbloqueando una puerta sin necesidad de una llave tradicional.",
                "El sistema inmunológico funciona protegiendo al cuerpo de invasores como bacterias, virus y hongos, mediante una serie de células y procesos que detectan y destruyen estos agentes.",
                "La electricidad funciona como el flujo de electrones a través de un conductor, lo que permite el suministro de energía a dispositivos eléctricos.",
                "Un altavoz Bluetooth funciona transmitiendo señales de audio a través de ondas de radio, que son recibidas por el altavoz para reproducir el sonido.",
                "La criptomoneda funciona como una moneda digital que utiliza tecnología blockchain para registrar transacciones de forma descentralizada y segura.",
                "Una página web funciona a través de un servidor que aloja el contenido de la página y lo envía al navegador del usuario mediante el protocolo HTTP o HTTPS.",
                "Una batería recargable funciona almacenando energía en su interior, que luego puede ser liberada cuando sea necesario. Se recarga aplicando una corriente eléctrica.",
                "Un termostato inteligente funciona ajustando automáticamente la temperatura de un espacio mediante sensores y algoritmos basados en las preferencias del usuario.",
                "El correo postal funciona recogiendo cartas o paquetes, clasificándolos en centros de distribución y entregándolos a la dirección de destino a través de una red de transporte.",
                "Un tren funciona utilizando un motor para mover los vagones a lo largo de vías férreas, que son una estructura de rieles diseñados para guiar el tren a lo largo de su ruta.",
                "Un motor eléctrico funciona utilizando energía eléctrica para mover un rotor dentro de un campo magnético, generando movimiento que puede utilizarse en una variedad de dispositivos.",
                "La energía eólica funciona utilizando el viento para mover las aspas de un aerogenerador, que luego convierte la energía cinética en energía eléctrica.",
                "Un router funciona dirigiendo el tráfico de datos entre tu red local (LAN) y el internet, permitiendo la conexión de varios dispositivos a la misma red.",
                "El teletrabajo funciona mediante el uso de herramientas digitales como correo electrónico, videollamadas y plataformas de colaboración que permiten trabajar desde cualquier lugar.",
                "Un termómetro digital funciona detectando la temperatura a través de un sensor de temperatura que convierte el calor en una señal eléctrica que luego se muestra en una pantalla.",
                "Una impresora láser funciona utilizando un rayo láser para crear una imagen electrostática en un tambor, que luego se transfiere a una hoja de papel mediante tóner.",
                "Un micrófono funciona captando las ondas sonoras y convirtiéndolas en señales eléctricas que pueden ser procesadas por un sistema de sonido o grabación.",
                "Un GPS en el coche funciona utilizando señales de satélites para determinar la ubicación exacta del vehículo y luego muestra direcciones en tiempo real para guiar al conductor.",
                "Un calefactor funciona calentando el aire mediante una resistencia eléctrica o un sistema de combustión, y luego lo distribuye por el ambiente mediante un ventilador.",
                "Una bomba de aire funciona utilizando un motor para crear presión que impulsa el aire hacia fuera, lo que permite inflar objetos como neumáticos o pelotas.",
                "Una calculadora científica funciona utilizando circuitos electrónicos para realizar operaciones matemáticas complejas, como trigonometría, logaritmos y álgebra avanzada."
            ]
        },
        {
            "tag": "faq",
            "patterns": [
                "¿Cuáles son los horarios de atención?",
                "¿Cómo puedo cambiar mi contraseña?",
                "¿Cómo puedo contactar con soporte?",
                "¿Dónde está mi pedido?",
                "¿Cómo puedo hacer una devolución?",
                "¿Cuál es la política de privacidad?",
                "¿Cómo puedo realizar un pago?",
                "¿Cómo funciona el sistema de puntos?",
                "¿Puedo cancelar mi suscripción?",
                "¿Qué formas de pago aceptan?",
                "¿Cuál es la dirección de la tienda?",
                "¿Cómo puedo modificar mi dirección de envío?",
                "¿Cómo sé si mi pedido ha sido enviado?",
                "¿Cuánto tarda el envío?",
                "¿Puedo devolver un producto?",
                "¿Tienen garantía los productos?",
                "¿Cómo puedo obtener un reembolso?",
                "¿Cuál es el costo de envío?",
                "¿Ofrecen envío internacional?",
                "¿Cómo puedo crear una cuenta?",
                "¿Puedo cambiar mi dirección de facturación?",
                "¿Cómo puedo actualizar mi información personal?",
                "¿Cómo puedo restablecer mi contraseña?",
                "¿Hay descuentos o promociones disponibles?",
                "¿Puedo comprar desde otro país?",
                "¿Cómo puedo suscribirme a las actualizaciones?",
                "¿Puedo comprar sin registrarme?",
                "¿Dónde puedo ver las condiciones de uso?",
                "¿Puedo solicitar una factura?",
                "¿Cómo puedo cancelar un pedido?",
                "¿Qué hago si recibo un producto defectuoso?",
                "¿Cómo puedo rastrear mi pedido?",
                "¿Puedo cambiar el método de pago después de realizar un pedido?",
                "¿Cómo puedo contactar con el servicio al cliente?",
                "¿Cuál es el número de contacto de soporte?",
                "¿Cuáles son los requisitos para hacer un pedido?",
                "¿Cómo puedo saber si un artículo está disponible?",
                "¿Qué hago si tengo un problema con mi cuenta?",
                "¿Puedo comprar un regalo para otra persona?",
                "¿Cuánto tiempo tengo para devolver un producto?",
                "¿Cómo puedo obtener un código de descuento?",
                "¿Puedo agregar varios productos al carrito?",
                "¿Cómo sé si mi pedido fue confirmado?",
                "¿Puedo elegir una hora de entrega específica?",
                "¿Cómo puedo actualizar mi dirección de correo electrónico?",
                "¿Ofrecen envíos gratis?",
                "¿Qué hacer si no recibí un correo de confirmación?"
            ],
            "responses": [
                "Nuestro horario de atención es de lunes a viernes, de 9:00 AM a 6:00 PM.",
                "Para cambiar tu contraseña, ve a la sección 'Mi cuenta' y selecciona 'Cambiar contraseña'.",
                "Puedes contactar con nuestro soporte llamando al 123-456-7890 o enviando un correo a soporte@empresa.com.",
                "Para ver el estado de tu pedido, ingresa a tu cuenta y revisa la sección de 'Mis pedidos'.",
                "Para realizar una devolución, por favor visita la página de devoluciones en nuestra web.",
                "Puedes revisar nuestra política de privacidad en el pie de página de nuestra web.",
                "Puedes realizar un pago con tarjeta de crédito, débito, PayPal o transferencia bancaria.",
                "Nuestro sistema de puntos te permite acumular puntos por cada compra que realices. Estos puntos pueden canjearse por descuentos.",
                "Sí, puedes cancelar tu suscripción en cualquier momento desde tu cuenta en la sección de 'Suscripciones'.",
                "Aceptamos pagos con Visa, MasterCard, American Express y PayPal.",
                "Nuestra tienda está ubicada en la calle Ficticia 123, Ciudad Ejemplo.",
                "Para modificar tu dirección de envío, ve a tu cuenta y edita los datos de envío antes de realizar el pago.",
                "Una vez que tu pedido sea enviado, recibirás un correo con la información de seguimiento.",
                "El tiempo de envío depende de tu ubicación. Generalmente, los envíos nacionales tardan entre 3 y 5 días hábiles.",
                "Sí, puedes devolver un producto siempre y cuando esté en su estado original y dentro del plazo de devolución de 30 días.",
                "Todos nuestros productos tienen garantía de 12 meses contra defectos de fabricación.",
                "Para solicitar un reembolso, por favor comunícate con nuestro soporte al cliente con el número de pedido.",
                "El costo de envío depende del peso del paquete y la ubicación de entrega. Puedes calcularlo al hacer el pedido.",
                "Sí, ofrecemos envío internacional a la mayoría de los países. Las tarifas varían según el destino.",
                "Para crear una cuenta, haz clic en 'Registrarse' en la parte superior de nuestra página y sigue los pasos.",
                "Sí, puedes cambiar tu dirección de facturación en la sección de 'Mi cuenta' antes de realizar un pago.",
                "Para restablecer tu contraseña, haz clic en '¿Olvidaste tu contraseña?' en la pantalla de inicio de sesión.",
                "Sí, tenemos descuentos periódicos. Puedes suscribirte a nuestro boletín para recibir las últimas ofertas.",
                "Sí, puedes comprar desde cualquier país. Solo asegúrate de seleccionar el país de envío correcto.",
                "Para suscribirte a nuestras actualizaciones, ingresa tu correo electrónico en la sección de suscripción en nuestra página de inicio.",
                "No es necesario registrarse para comprar, pero registrarte te permitirá realizar un seguimiento de tus pedidos y guardar tus datos.",
                "Las condiciones de uso se encuentran en el enlace al pie de nuestra página web.",
                "Sí, si lo deseas, puedes solicitar una factura de tu compra a través de tu cuenta.",
                "Si deseas cancelar tu pedido, debes hacerlo antes de que se procese el envío. Ponte en contacto con nuestro soporte al cliente.",
                "Si recibes un producto defectuoso, por favor contacta con nuestro soporte para gestionar una devolución o cambio.",
                "Puedes rastrear tu pedido con el número de seguimiento proporcionado en el correo de confirmación de envío.",
                "Una vez que hayas realizado el pago, no podrás cambiar el método de pago, pero puedes ponerte en contacto con soporte si necesitas ayuda.",
                "Puedes contactar con nuestro servicio al cliente a través de correo electrónico o por teléfono. Encuentra los detalles en nuestra página de contacto.",
                "Nuestro número de soporte es 123-456-7890. Estamos disponibles durante el horario de atención.",
                "Los requisitos para hacer un pedido son tener una cuenta registrada y un método de pago válido.",
                "Puedes verificar la disponibilidad de un artículo en la página de producto. Si está agotado, podrás ver la opción para recibir notificaciones.",
                "Si tienes un problema con tu cuenta, por favor contáctanos para que podamos resolverlo lo más rápido posible.",
                "Sí, puedes comprar un regalo para otra persona y enviar el pedido directamente a su dirección.",
                "Tienes 30 días para devolver un producto. Asegúrate de que esté en su estado original para un reembolso completo.",
                "Puedes obtener un código de descuento suscribiéndote a nuestro boletín o participando en nuestras promociones especiales.",
                "Sí, puedes agregar múltiples productos a tu carrito y continuar comprando hasta que estés listo para realizar el pago.",
                "Recibirás un correo de confirmación una vez que tu pedido haya sido procesado y enviado.",
                "Lamentablemente, no ofrecemos la opción de elegir una hora de entrega específica, pero puedes hacer un seguimiento para saber cuándo llegará.",
                "Puedes actualizar tu dirección de correo electrónico en la sección de 'Mi cuenta' en cualquier momento.",
                "Sí, ofrecemos envío gratuito en pedidos superiores a $50.",
                "Si no recibes un correo de confirmación, revisa tu carpeta de spam o contacta con nuestro soporte."
            ]
        },
        {
            "tag": "faq2",
            "patterns": [
                "¿Cuáles son las formas de pago disponibles?",
                "¿Cómo puedo hacer un seguimiento de mi pedido?",
                "¿Qué hago si mi pedido está dañado?",
                "¿Cuánto tiempo tarda el envío?",
                "¿Puedo cambiar mi dirección de envío?",
                "¿Cómo puedo devolver un artículo?",
                "¿Ofrecen descuentos para estudiantes?",
                "¿Cómo puedo contactar con el servicio al cliente?",
                "¿Qué debo hacer si olvido mi contraseña?",
                "¿Puedo pagar con tarjeta de crédito?",
                "¿Hay opciones de pago contra reembolso?",
                "¿Tienen tienda física?",
                "¿Hacen envíos internacionales?",
                "¿Cómo puedo cancelar un pedido?",
                "¿Tienen garantía en sus productos?",
                "¿Cómo puedo actualizar mi dirección de correo electrónico?",
                "¿Es seguro comprar en su sitio web?",
                "¿Puedo agregar un cupón de descuento después de realizar un pedido?",
                "¿Cuánto cuesta el envío?",
                "¿Cómo puedo obtener un recibo de mi compra?",
                "¿Tienen alguna política de privacidad?",
                "¿Puedo hacer un pedido por teléfono?",
                "¿Puedo cambiar el tamaño de un producto después de comprarlo?",
                "¿Tienen aplicaciones móviles?",
                "¿Cuándo recibiré mi reembolso?",
                "¿Ofrecen opciones de pago en cuotas?",
                "¿Cómo me suscribo a su boletín?",
                "¿Cómo puedo modificar o cancelar una suscripción?",
                "¿Puedo comprar sin tener cuenta?",
                "¿Puedo ver el estado de mi pedido en línea?",
                "¿Hay algún cargo adicional por impuestos?",
                "¿Puedo modificar mi pedido después de haberlo realizado?",
                "¿Tienen opciones de pago con PayPal?",
                "¿Ofrecen soporte en varios idiomas?",
                "¿Cómo puedo realizar una compra como empresa?",
                "¿Tienen un programa de fidelidad?",
                "¿Puedo usar mi tarjeta de regalo en línea?",
                "¿Cómo me doy de baja de su newsletter?",
                "¿Tienen políticas de devolución fáciles?",
                "¿Ofrecen productos personalizados?",
                "¿Cómo puedo hacer una queja formal?",
                "¿Puedo comprar productos agotados?",
                "¿Dónde puedo encontrar las condiciones de servicio?",
                "¿Cuál es su política de devoluciones?",
                "¿Puedo recibir un reembolso por una compra en oferta?",
                "¿Cuáles son sus horarios de atención al cliente?",
                "¿Tienen opciones de envío exprés?",
                "¿Puedo agregar un comentario a mi pedido?",
                "¿Puedo cambiar un producto defectuoso en tienda?"
            ],
            "responses": [
                "Aceptamos pagos con tarjeta de crédito, débito, PayPal y otros métodos de pago electrónicos disponibles en nuestra plataforma.",
                "Puedes hacer un seguimiento de tu pedido utilizando el número de seguimiento que te enviamos por correo electrónico.",
                "Si tu pedido llega dañado, por favor contacta con nuestro servicio de atención al cliente para resolver el problema.",
                "El tiempo de envío varía según la ubicación, pero generalmente tarda entre 3 a 7 días hábiles.",
                "Si deseas cambiar la dirección de envío, por favor contáctanos lo antes posible antes de que se procese tu pedido.",
                "Si deseas devolver un artículo, asegúrate de que esté en su estado original y contacta con nuestro equipo de atención al cliente para obtener instrucciones.",
                "Sí, ofrecemos descuentos para estudiantes. Asegúrate de registrarte con tu correo electrónico institucional para recibirlos.",
                "Puedes contactar con nuestro servicio al cliente a través de correo electrónico, teléfono o chat en vivo en nuestra página web.",
                "Si has olvidado tu contraseña, puedes restablecerla fácilmente siguiendo el enlace '¿Olvidaste tu contraseña?' en la página de inicio de sesión.",
                "Sí, aceptamos pagos con tarjeta de crédito a través de un sistema de pago seguro en línea.",
                "Actualmente no ofrecemos pagos contra reembolso. Solo aceptamos pagos electrónicos por ahora.",
                "No contamos con tiendas físicas en este momento, solo operamos en línea.",
                "Sí, hacemos envíos internacionales. Consulta las tarifas y tiempos de envío en nuestra página de envíos internacionales.",
                "Si deseas cancelar un pedido, por favor contáctanos antes de que se procese el envío para evitar cargos adicionales.",
                "Sí, ofrecemos garantía en muchos de nuestros productos. Por favor consulta la garantía específica de cada artículo.",
                "Para actualizar tu dirección de correo electrónico, ingresa a tu cuenta y modifica los datos en la sección 'Mi perfil'.",
                "Sí, nuestra plataforma está protegida con medidas de seguridad para garantizar que tus datos estén seguros durante el proceso de compra.",
                "No, los cupones de descuento deben aplicarse al momento de la compra. No es posible agregarlos una vez realizado el pedido.",
                "El costo del envío depende de la ubicación y del tamaño del pedido. Puedes ver las tarifas exactas antes de finalizar tu compra.",
                "Puedes obtener un recibo de tu compra accediendo a la sección 'Mis pedidos' en tu cuenta o solicitándolo a través de nuestro servicio al cliente.",
                "Sí, tenemos una política de privacidad que puedes consultar en nuestra página web para conocer cómo protegemos tus datos.",
                "Actualmente no ofrecemos la opción de realizar pedidos por teléfono, solo en línea.",
                "No podemos cambiar el tamaño de un producto después de que el pedido ha sido confirmado, pero puedes devolverlo si no es adecuado.",
                "Sí, tenemos una aplicación móvil disponible para dispositivos iOS y Android, que puedes descargar desde las tiendas respectivas.",
                "El reembolso de un pedido generalmente toma entre 5 a 10 días hábiles, dependiendo del método de pago utilizado.",
                "Sí, ofrecemos opciones de pago en cuotas a través de determinados servicios de pago en línea.",
                "Para suscribirte a nuestro boletín, ingresa tu correo electrónico en la sección de suscripción en nuestro sitio web.",
                "Puedes modificar o cancelar tu suscripción desde el enlace que aparece al final de cada correo electrónico que recibas.",
                "Sí, puedes comprar como invitado sin necesidad de crear una cuenta.",
                "Sí, puedes ver el estado de tu pedido en línea mediante el número de seguimiento proporcionado.",
                "Los impuestos adicionales pueden aplicarse dependiendo de la región o el país al que se envíe el pedido.",
                "Una vez realizado el pedido, no puedes modificarlo, pero puedes cancelarlo si no ha sido procesado aún.",
                "Sí, ofrecemos opciones de pago con PayPal en nuestra plataforma de pago seguro.",
                "Sí, ofrecemos soporte en varios idiomas para ayudarte con cualquier pregunta que puedas tener.",
                "Para realizar una compra como empresa, puedes registrarte en nuestra plataforma con los datos de tu empresa.",
                "Sí, tenemos un programa de fidelidad que ofrece descuentos y promociones especiales a nuestros clientes frecuentes.",
                "Sí, puedes usar tu tarjeta de regalo en línea en nuestra tienda virtual durante el proceso de pago.",
                "Para darte de baja de nuestra newsletter, solo haz clic en el enlace 'Cancelar suscripción' en la parte inferior de cualquier correo.",
                "Sí, tenemos una política de devoluciones que te permite devolver productos dentro de un tiempo determinado tras la compra.",
                "Sí, ofrecemos productos personalizados. Consulta la sección de productos personalizados en nuestra tienda para más detalles.",
                "Si deseas presentar una queja formal, por favor contáctanos a través de nuestro formulario de contacto en línea o por correo electrónico.",
                "Si un producto está agotado, puedes registrarte para recibir una notificación cuando vuelva a estar disponible.",
                "Puedes encontrar las condiciones de servicio en la parte inferior de nuestra página web, en el enlace 'Términos y condiciones'.",
                "Nuestra política de devoluciones permite devolver productos en su estado original dentro de un plazo de 30 días después de la compra.",
                "No, no ofrecemos reembolsos por productos comprados en oferta, salvo que el producto esté defectuoso o dañado.",
                "Nuestro horario de atención al cliente es de lunes a viernes, de 9:00 a 18:00, hora local.",
                "Sí, ofrecemos opciones de envío exprés por un costo adicional, con tiempos de entrega más rápidos.",
                "No es posible agregar un comentario a tu pedido una vez realizado, pero puedes contactarnos para solicitudes especiales antes de que se procese.",
                "Si un producto está defectuoso, puedes cambiarlo en tienda si estás cerca de una de nuestras ubicaciones físicas."
            ]
        },
        {
            "tag": "gestionar_errores",
            "patterns": [
                "No entendí eso, ¿puedes repetirlo?",
                "Perdón, no entendí lo que dijiste.",
                "¿Puedes explicar eso de nuevo?",
                "Lo siento, no comprendo lo que estás diciendo.",
                "No estoy seguro de haber entendido correctamente.",
                "¿Qué quieres decir con eso?",
                "No estoy entendiendo, ¿puedes aclararlo?",
                "¿Podrías ser más claro?",
                "No sé a qué te refieres, ¿puedes explicarlo?",
                "Lo siento, pero no entiendo la pregunta.",
                "No entendí, ¿puedes ser más específico?",
                "¿Podrías reformular tu pregunta?",
                "Eso no me quedó claro, ¿puedes repetirlo?",
                "Lo siento, no comprendo esa parte.",
                "No sé si entendí bien, ¿puedes decirlo otra vez?",
                "No te entendí completamente, ¿puedes decirlo diferente?",
                "No entiendo, ¿puedes darme más detalles?",
                "No me quedó claro, ¿puedes explicarlo de otra manera?",
                "Perdón, pero no sé qué significa eso.",
                "No logro entender lo que dices, ¿puedes reformularlo?",
                "Disculpa, no estoy seguro de lo que quieres decir.",
                "Lo siento, no comprendo bien tu pregunta.",
                "¿Podrías repetirlo más despacio?",
                "Lo siento, no sé a qué te refieres.",
                "No me queda claro lo que estás pidiendo.",
                "No puedo entender lo que estás diciendo, ¿puedes explicar mejor?",
                "Perdón, no entendí la parte anterior.",
                "Lo siento, eso no lo entiendo.",
                "No pude entender tu solicitud, ¿puedes ser más claro?",
                "No entendí esa parte, ¿puedes explicarlo de nuevo?",
                "No estoy seguro de lo que necesitas, ¿puedes aclarar?",
                "¿Podrías explicarme eso de otra forma?",
                "No te entendí bien, ¿puedes volver a decirlo?",
                "No entiendo, ¿podrías hablar más claro?",
                "Lo siento, pero no puedo entender eso.",
                "No estoy seguro de lo que estás preguntando, ¿puedes ser más específico?",
                "No comprendí, ¿puedes darme más información?",
                "No sé si entendí bien, ¿puedes repetir?",
                "Lo siento, ¿puedes ser más detallado?",
                "¿Podrías hablar más despacio? No entendí bien.",
                "No entendí bien tu solicitud, ¿puedes explicarlo más?",
                "No estoy entendiendo lo que quieres decir, ¿puedes darme ejemplos?",
                "Lo siento, ¿podrías explicarlo de nuevo de otra forma?",
                "No me quedó claro, ¿puedes darme más detalles?",
                "¿Puedes explicarlo paso a paso?",
                "No entiendo completamente, ¿puedes aclarar lo que dijiste?",
                "Lo siento, eso no tiene sentido para mí.",
                "No estoy entendiendo lo que estás diciendo, ¿puedes reformular?",
                "Lo siento, necesito más información para entender.",
                "No sé a qué te refieres, ¿puedes explicarlo más?"
            ],
            "responses": [
                "Lo siento, no entendí lo que dijiste. ¿Puedes repetirlo?",
                "Perdón, no pude comprenderlo. ¿Podrías explicarlo de nuevo?",
                "No te entendí bien, ¿puedes ser más claro?",
                "Lo siento, no comprendí tu pregunta. ¿Podrías aclararlo?",
                "No estoy seguro de lo que necesitas, ¿puedes darme más detalles?",
                "Disculpa, no entiendo esa parte. ¿Puedes explicarlo diferente?",
                "Lo siento, no entendí completamente. ¿Puedes repetirlo?",
                "No comprendí lo que dices, ¿puedes explicar más?",
                "Lo siento, eso no me quedó claro. ¿Puedes ser más específico?",
                "No pude entender eso, ¿puedes decirlo de otra manera?",
                "Perdón, ¿podrías ser más detallado?",
                "No sé si entendí correctamente, ¿puedes repetirlo?",
                "Eso no me quedó claro, ¿puedes explicarlo mejor?",
                "Lo siento, no puedo entenderlo. ¿Puedes ser más preciso?",
                "No entiendo a qué te refieres, ¿puedes aclararlo?",
                "Lo siento, no estoy seguro de lo que quieres decir.",
                "Perdón, no comprendí la pregunta. ¿Puedes explicarla nuevamente?",
                "No te entendí bien, ¿puedes volver a decirlo?",
                "Lo siento, no pude comprender lo que dices. ¿Puedes aclararlo?",
                "No sé si entendí correctamente, ¿puedes darme más detalles?",
                "Lo siento, no estoy seguro de lo que pides. ¿Puedes aclararlo?",
                "Perdón, no comprendí bien lo que dijiste, ¿puedes repetirlo?",
                "Lo siento, eso no es claro para mí, ¿puedes explicar más?",
                "Disculpa, no puedo entenderlo, ¿puedes dar más detalles?",
                "No estoy entendiendo lo que dices, ¿puedes decirlo diferente?",
                "Lo siento, necesito más información para entender.",
                "No pude comprender eso, ¿puedes ser más preciso?",
                "Lo siento, no entendí esa parte. ¿Puedes darme más detalles?",
                "Perdón, no estoy seguro de lo que necesitas, ¿puedes explicarlo mejor?",
                "Lo siento, pero no entendí bien la pregunta. ¿Puedes decirlo nuevamente?",
                "No sé si lo entendí correctamente, ¿puedes decirlo de otra forma?",
                "Lo siento, ¿puedes explicar eso con más detalles?",
                "No entendí lo que dijiste, ¿puedes repetirlo más despacio?",
                "Perdón, no pude entenderlo. ¿Puedes ser más claro?",
                "Lo siento, no puedo entender lo que dices. ¿Puedes explicarlo mejor?",
                "Disculpa, no entendí. ¿Podrías darme más detalles?",
                "Lo siento, eso no tiene mucho sentido para mí, ¿puedes explicarlo mejor?",
                "No estoy entendiendo lo que dices, ¿puedes darme ejemplos?",
                "Perdón, no entendí completamente, ¿puedes explicarlo mejor?",
                "Lo siento, ¿puedes aclarar lo que dijiste?",
                "No estoy seguro de lo que preguntas, ¿puedes ser más claro?",
                "Lo siento, no comprendí tu solicitud. ¿Puedes explicarlo de otra manera?",
                "No estoy entendiendo lo que necesitas, ¿puedes ser más específico?",
                "Lo siento, no me quedó claro, ¿puedes decirlo nuevamente?",
                "No pude comprender lo que dijiste, ¿puedes repetirlo?",
                "Lo siento, no entiendo, ¿puedes explicar eso más despacio?"
            ]
        },
        {
            "tag": "chistes_bromas_adivinanzas",
            "patterns": [
                "Cuéntame un chiste",
                "¿Tienes un chiste?",
                "Dime una broma",
                "Hazme reír",
                "Cuéntame algo gracioso",
                "Tengo ganas de escuchar un chiste",
                "Cuéntame un chiste corto",
                "¿Sabes alguna adivinanza?",
                "Dime una adivinanza difícil",
                "Tengo curiosidad por escuchar una broma",
                "Cuéntame un chiste de animales",
                "¿Conoces algún chiste de niños?",
                "¿Tienes alguna adivinanza para mí?",
                "Hazme una broma",
                "Cuéntame una historia divertida",
                "¿Puedes contarme una adivinanza fácil?",
                "¿Qué tal un chiste de humor negro?",
                "Quiero escuchar algo gracioso",
                "¿Tienes un chiste para hoy?",
                "Dime un chiste divertido",
                "Cuéntame algo para reírme",
                "¿Sabes algún chiste de matemáticas?",
                "Cuéntame una adivinanza clásica",
                "¿Tienes alguna broma para alegrarme?",
                "¿Conoces chistes de la oficina?",
                "Hazme pensar con una adivinanza",
                "¿Puedes contarme un chiste de animales?",
                "Cuéntame un chiste corto y divertido",
                "Quiero escuchar un chiste de comida",
                "¿Sabes algún chiste sobre la escuela?",
                "Cuéntame una adivinanza de navidad",
                "¿Puedes contarme un chiste para niños?",
                "Dime un chiste sobre el trabajo",
                "Cuéntame un chiste de médicos",
                "¿Tienes un chiste sobre tecnología?",
                "Hazme reír con una adivinanza",
                "¿Tienes alguna broma de amigos?",
                "¿Me cuentas un chiste sobre profesores?",
                "¿Sabes alguna adivinanza de animales?",
                "Cuéntame un chiste de deportes",
                "Cuéntame una broma sobre el trabajo",
                "Hazme pensar con una adivinanza difícil",
                "¿Tienes alguna broma para contarme?",
                "Cuéntame un chiste para adultos",
                "¿Me cuentas una adivinanza divertida?",
                "Hazme reír con un chiste corto",
                "Cuéntame una adivinanza graciosa",
                "¿Tienes un chiste de navidad?",
                "Dime una broma ligera",
                "Cuéntame una broma de fiesta",
                "Dime un chiste de frutas",
                "Cuéntame una broma nueva",
                "¿Tienes una adivinanza graciosa?",
                "¿Sabes algún chiste de tecnología?",
                "Cuéntame un chiste de animales graciosos",
                "¿Conoces una adivinanza divertida?",
                "Quiero reír, ¿tienes un chiste?",
                "Dime una adivinanza con truco",
                "Cuéntame algo para reírme un rato",
                "Hazme reír con un chiste inteligente",
                "¿Tienes algún chiste malo pero gracioso?",
                "Dime una adivinanza que me sorprenda",
                "Cuéntame una broma tonta",
                "¿Sabes alguna adivinanza sobre comida?",
                "Dime un chiste corto y malo",
                "Cuéntame una broma para niños",
                "¿Conoces una adivinanza de lógica?",
                "Hazme pensar con una adivinanza original",
                "¿Tienes un chiste para romper el hielo?",
                "Cuéntame una historia breve y graciosa",
                "Dime un chiste de deportes",
                "¿Conoces una adivinanza sobre la naturaleza?",
                "Dime un chiste sobre científicos",
                "Cuéntame una adivinanza complicada",
                "Hazme una broma que me haga reír mucho",
                "Dime un chiste sobre la oficina",
                "¿Sabes una adivinanza para niños pequeños?",
                "Cuéntame un chiste de animales tontos",
                "Dime algo gracioso sobre comida",
                "¿Conoces un chiste sobre inventos?",
                "Dime un chiste de ingenieros",
                "Cuéntame una adivinanza sobre animales",
                "¿Sabes algún chiste corto pero gracioso?",
                "Dime una broma sobre matemáticas",
                "Hazme reír con algo inesperado",
                "Cuéntame un chiste de cumpleaños",
                "¿Tienes una adivinanza sobre objetos cotidianos?",
                "Dime un chiste clásico",
                "¿Sabes alguna adivinanza sobre el clima?",
                "Cuéntame algo divertido sobre deportes",
                "Hazme reír con un chiste de cocina",
                "¿Tienes un chiste para niños?",
                "Cuéntame una adivinanza que sea difícil",
                "Dime una broma de amigos",
                "¿Sabes un chiste sobre médicos?",
                "Dime una adivinanza para pensar",
                "Cuéntame un chiste de viajes",
                "¿Conoces algún chiste sobre animales raros?",
                "Dime una broma sobre la escuela",
                "Hazme una pregunta divertida",
                "Cuéntame un chiste sobre profesiones",
                "¿Sabes alguna adivinanza de lógica divertida?",
                "Dime un chiste que implique comida",
                "Cuéntame algo gracioso sobre la oficina",
                "Hazme reír con algo inesperado",
                "¿Conoces una adivinanza sobre cosas misteriosas?",
                "Dime un chiste relacionado con la naturaleza",
                "Cuéntame una adivinanza sobre el espacio",
                "Hazme una broma sobre la tecnología",
                "Dime un chiste sobre cosas de casa"
            ],
            "responses": [
                "¿Por qué el libro de matemáticas estaba triste? Porque tenía demasiados problemas.",
                "¿Cuál es el animal más antiguo? La cebra, porque está en blanco y negro.",
                "¿Por qué el pavo no puede jugar al fútbol? Porque siempre está en el banquillo.",
                "¿Qué le dice un gusano a otro gusano? ¡Voy a dar una vuelta a la manzana!",
                "¿Qué hace una abeja en el gimnasio? ¡Zum-ba!",
                "¿Por qué el elefante no usa ordenador? Porque le tiene miedo al ratón.",
                "¿Cuál es el colmo de un electricista? No encontrar su corriente de trabajo.",
                "¿Por qué los pájaros no usan Facebook? Porque ya tienen Twitter.",
                "¿Cómo se llama un boomerang que no vuelve? Un palo.",
                "¿Por qué los libros de historia son tan pesados? Porque están llenos de pasado.",
                "¿Qué le dice una impresora a otra? Esa página es mía.",
                "¿Cómo se llama un perro sin patas? No importa cómo lo llames, no va a venir.",
                "¿Por qué los peces no usan Facebook? Porque ya están en redes.",
                "¿Sabes cuál es la fruta más divertida? La naranja, porque siempre te hace sonreír.",
                "¿Qué hace un perro con un taladro? Taladrando.",
                "¿Cómo se llama un ratón que se convierte en estrella de rock? ¡Mick Ratson!",
                "¿Por qué las vacas no usan celulares? Porque ya tienen vaca-lidad.",
                "¿Sabes cuál es el colmo de un panadero? No tener masa.",
                "¿Cómo se llama un dinosaurio con un gran vocabulario? Un Thesaurus.",
                "¿Qué le dice una iguana a su hermana gemela? Somos iguanitas.",
                "¿Sabes cuál es el colmo de un jardinero? No saber dónde está la raíz del problema.",
                "¿Cuál es el café más peligroso? El ex-preso.",
                "¿Sabes cuál es el animal más inteligente? El delfín, porque siempre está en busca de respuestas.",
                "Adivina, adivinanza: Soy ligero como una pluma, pero ni el hombre más fuerte me puede sostener por mucho tiempo. ¿Qué soy?",
                "Tengo una adivinanza: Cuanto más le quitas, más grande se vuelve. ¿Qué es?",
                "Soy pequeño, redondo y no me gusta que me aplasten. ¿Qué soy?",
                "Adivina: Es tan alto como una casa, pero es tan ligero como una pluma. ¿Qué es?",
                "Tengo agujas pero no sé coser. ¿Qué soy?",
                "Soy invisible, pero me puedes sentir. No tengo forma, pero siempre estoy presente. ¿Qué soy?",
                "Adivina: ¿Qué tiene cabeza, pero no cuerpo?",
                "Adivina: Soy el principio de todo, pero nunca me verás. ¿Quién soy?",
                "Adivina: Tiene dientes pero nunca muerde. ¿Qué es?",
                "Soy pequeño, blanco y escurridizo. ¿Qué soy?",
                "Adivina: Es tuyo, pero lo usan más los demás que tú. ¿Qué es?",
                "Adivina: Tiene hojas pero no es un árbol. ¿Qué es?",
                "¿Por qué los zombis no comen carne vegetariana? Porque no pueden resistirse a la carne humana.",
                "Adivina: Tiene llaves pero no puede abrir puertas. ¿Qué es?",
                "¿Qué le dijo el uno al diez? Para ser como yo, tenés que ser sincero.",
                "Adivina: ¿Cuál es el colmo de un cartero? No tener buenas cartas.",
                "Adivina: ¿Quién tiene la clave para todo pero nunca se deja ver?",
                "Adivina: Si soy el rey de la selva, ¿qué soy?",
                "Soy algo que cuando lo compartes, lo tienes más. ¿Qué soy?",
                "Soy una caja, pero no guardo cosas. ¿Qué soy?",
                "Adivina: Tiene muchas partes pero no se puede mover. ¿Qué es?",
                "Adivina: Puede ir a todas partes, pero nunca se mueve. ¿Qué es?",
                "Soy una llave que no abre puertas. ¿Qué soy?",
                "Soy algo que no puedes ver pero te hace sentir. ¿Qué soy?",
                "Adivina: ¿Qué tiene cara pero no ojos?",
                "Soy algo que siempre cambia de forma pero no se mueve. ¿Qué soy?",
                "Tengo muchos dientes pero no muerdo. ¿Qué soy?",
                "¿Por qué las uvas nunca pelean? Porque siempre están en racimos.",
                "¿Qué hace un plátano en el gimnasio? ¡Se pone en forma!",
                "¿Por qué el ordenador fue al doctor? Porque tenía un virus.",
                "¿Qué le dijo la vaca al grillo? ¡Mu-ción!",
                "¿Cuál es el colmo de un caracol? Llegar tarde a su propia fiesta.",
                "Adivina: ¿Qué sube pero nunca baja? Tu edad.",
                "¿Por qué las escobas son buenas amigas? Porque siempre te barren los problemas.",
                "¿Qué le dice un tornillo a otro? ¡No me saques de mis casillas!",
                "¿Por qué el tomate no se ríe? Porque está en salsa.",
                "¿Qué hace un científico en la playa? ¡Experimenta con las olas!",
                "¿Por qué los relojes son tan puntuales? Porque siempre tienen tiempo.",
                "Adivina: ¿Qué es algo que camina pero no tiene piernas? Una sombra.",
                "¿Qué hace una silla hablando en público? ¡Da una conferencia!",
                "¿Por qué los árboles no usan sombreros? Porque tienen ramas para protegerse.",
                "¿Qué pasa si mezclas un científico y un comediante? ¡Un experimento hilarante!",
                "Adivina: Tengo ojos pero no veo, ¿qué soy? Una aguja.",
                "¿Qué hace un cocodrilo leyendo un libro? ¡Devora la historia!",
                "¿Por qué los atletas siempre están felices? Porque llevan una buena racha.",
                "Adivina: ¿Qué puedes atrapar pero nunca lanzar? Un resfriado.",
                "¿Qué le dice el pasto al jardinero? ¡Córtame con estilo!",
                "¿Por qué los músicos son buenos adivinadores? Porque siempre afinan.",
                "Adivina: Tiene patas pero no corre, ¿qué es? Una mesa.",
                "¿Por qué las estrellas no cuentan secretos? Porque siempre brillan.",
                "¿Qué hace un helado en una fiesta? ¡Se derrite de la emoción!",
                "Adivina: ¿Qué tiene dientes pero no come? Un peine.",
                "¿Qué hace un teléfono feliz? Tener buena cobertura.",
                "¿Por qué las computadoras no sueñan? Porque solo procesan datos.",
                "¿Qué hace una naranja cuando tiene calor? ¡Se exprime!",
                "¿Por qué las abejas siempre están ocupadas? Porque trabajan con miel.",
                "Adivina: ¿Qué tiene un ojo pero no ve? Una aguja.",
                "¿Por qué el libro de geometría siempre está feliz? ¡Porque tiene muchos ángulos positivos!",
                "¿Qué le dijo un perro a otro? ¡Guau, qué día!",
                "¿Por qué los números siempre tienen frío? Porque están en la recta.",
                "¿Qué le dijo un volcán a otro? ¡Te amo lava vez!",
                "¿Por qué el pan fue al médico? Porque se sentía desmigajado.",
                "Adivina: Tiene alas pero no vuela, ¿qué es? Un ventilador.",
                "¿Qué hace un pájaro cuando tiene miedo? ¡Pide auxilio a la red!",
                "¿Por qué los astronautas son malos para contar chistes? Porque siempre necesitan espacio.",
                "¿Qué hace un pez en la biblioteca? Nada.",
                "¿Por qué las bicicletas no pueden mantenerse de pie? ¡Porque están cansadas!",
                "¿Qué le dijo la computadora al teclado? ¡No me presiones tanto!",
                "¿Qué tiene plumas y escribe? ¡Un bolígrafo-pájaro!",
                "¿Por qué el melón se casó con la sandía? ¡Porque hicieron una gran pareja!",
                "Adivina: Tengo hojas pero no soy árbol, ¿qué soy? Un libro.",
                "¿Por qué los estudiantes aman los semáforos? Porque les dicen cuándo parar.",
                "¿Qué hace un pollo con una cámara? ¡Saca fotos de huevos-traordinarias!",
                "¿Por qué los relojes son tan sabios? Porque siempre tienen una buena hora.",
                "¿Qué dijo el lápiz al papel? ¡Estoy a tu servicio!",
                "Adivina: Soy algo que nunca se queda quieto y siempre está cambiando, ¿qué soy? El tiempo.",
                "¿Por qué las cebras no usan pijamas? Porque ya tienen rayas.",
                "¿Qué hace un tomate en una carrera? ¡Ketchup!",
                "¿Por qué el científico cruzó la calle? ¡Para encontrar otra hipótesis!",
                "¿Qué le dice el horno al pastel? ¡Estás en tu punto!",
                "¿Por qué los elefantes nunca olvidan? Porque tienen una memoria elefantástica.",
                "Adivina: Es redondo y a veces plano, pero siempre ilumina el cielo. ¿Qué es? La luna.",
                "¿Qué hace un cocodrilo con un auto? ¡Lo convierte en un descapotable!",
                "¿Por qué las ovejas no envían correos electrónicos? ¡Prefieren mensajes de lana!",
                "¿Qué hace una nube en la fiesta? ¡Trae rayos y truenos de emoción!",
                "¿Por qué los pingüinos nunca se pierden? ¡Porque siempre tienen frío polar!",
                "¿Qué hace una zanahoria en el concierto? ¡Raíces musicales!"
            ]
        },
        {
            "tag": "citas_inspiradoras",
            "patterns": [
                "Dame una cita inspiradora",
                "¿Tienes alguna cita motivacional?",
                "Cuéntame una cita que me inspire",
                "Quiero leer una frase que me motive",
                "¿Tienes alguna cita de superación personal?",
                "Dame una frase que me haga pensar",
                "Quiero una cita positiva",
                "Cuéntame algo que me dé esperanza",
                "¿Sabes alguna cita sobre el éxito?",
                "¿Puedes darme una frase que me inspire a seguir adelante?",
                "Dime una cita sobre la vida",
                "¿Tienes alguna frase que me ayude a ser más fuerte?",
                "Dame una cita que me haga sentir mejor",
                "¿Tienes una cita sobre la perseverancia?",
                "Cuéntame una cita que me motive a mejorar",
                "Quiero una frase de ánimo",
                "Dame una cita que me impulse a no rendirme",
                "¿Puedes darme una cita sobre el esfuerzo?",
                "Quiero escuchar una cita sobre el trabajo duro",
                "¿Sabes alguna cita que hable sobre la valentía?",
                "Cuéntame una cita sobre el coraje",
                "¿Tienes alguna cita sobre el cambio?",
                "Dame una cita de alguien famoso",
                "¿Puedes decirme una cita sobre la esperanza?",
                "Quiero leer una cita sobre el futuro",
                "¿Tienes alguna cita sobre la confianza?",
                "Dame una frase sobre la resiliencia",
                "¿Me puedes dar una cita sobre la motivación diaria?",
                "Quiero una frase sobre la vida y el amor",
                "Cuéntame una cita sobre la fortaleza",
                "Dame una cita que me ayude a seguir adelante",
                "¿Tienes alguna cita que inspire paz?",
                "Quiero una cita sobre el optimismo",
                "¿Sabes alguna cita sobre el éxito personal?",
                "Dame una cita que me haga reflexionar",
                "¿Puedes darme una frase que me inspire a ser mejor?",
                "Quiero escuchar una cita sobre la superación",
                "Dime una cita que me dé energía",
                "¿Tienes una cita sobre el crecimiento personal?",
                "Dame una cita sobre aprender de los errores",
                "Quiero una cita sobre alcanzar metas",
                "¿Sabes alguna cita sobre la paciencia?",
                "Dame una cita que me ayude a encontrar la paz interior",
                "Cuéntame una cita sobre la felicidad",
                "Dame una frase que me haga sentir inspirado",
                "¿Tienes una cita que hable sobre el valor de seguir luchando?"
            ],
            "responses": [
                "La vida no se mide por las veces que respiramos, sino por los momentos que nos dejan sin aliento. – George Carlin",
                "No te rindas, cada fracaso es una lección para llegar al éxito. – Albert Einstein",
                "Lo único imposible es aquello que no intentas. – Jeanette Coron",
                "La felicidad no es algo hecho. Viene de tus propias acciones. – Dalai Lama",
                "El futuro pertenece a aquellos que creen en la belleza de sus sueños. – Eleanor Roosevelt",
                "Lo que no te mata te hace más fuerte. – Friedrich Nietzsche",
                "Haz hoy lo que otros no quieren hacer, haz mañana lo que otros no pueden hacer. – Jerry Rice",
                "El único modo de hacer un gran trabajo es amar lo que haces. – Steve Jobs",
                "El éxito es la suma de pequeños esfuerzos repetidos día tras día. – Robert Collier",
                "No importa cuántas veces caigas, lo importante es cuántas veces te levantas. – Nelson Mandela",
                "La vida comienza donde termina tu zona de confort. – Neale Donald Walsch",
                "El único lugar donde el éxito viene antes que el trabajo es en el diccionario. – Vidal Sassoon",
                "Sé el cambio que deseas ver en el mundo. – Mahatma Gandhi",
                "Si puedes soñarlo, puedes hacerlo. – Walt Disney",
                "La mejor forma de predecir el futuro es crearlo. – Abraham Lincoln",
                "No hay camino hacia la felicidad, la felicidad es el camino. – Buddha",
                "La perseverancia es la clave del éxito. – Charlie Chaplin",
                "Cuando una puerta se cierra, otra se abre. – Alexander Graham Bell",
                "Todo lo que puedas imaginar es real. – Pablo Picasso",
                "La vida no es esperar a que pase la tormenta, es aprender a bailar bajo la lluvia. – Anónimo",
                "El único modo de hacer un gran trabajo es amar lo que haces. – Steve Jobs",
                "La diferencia entre lo que somos y lo que queremos ser, es lo que hacemos. – Anónimo",
                "El éxito no es la clave de la felicidad. La felicidad es la clave del éxito. – Albert Schweitzer",
                "El dolor es temporal, la gloria es para siempre. – Lance Armstrong",
                "La vida es como andar en bicicleta. Para mantener el equilibrio, debes seguir adelante. – Albert Einstein",
                "Nuestro mayor miedo no es que seamos inadecuados, nuestro mayor miedo es que somos poderosos más allá de toda medida. – Marianne Williamson",
                "El hombre que mueve montañas comienza cargando pequeñas piedras. – Confucio",
                "Es durante nuestros momentos más oscuros cuando debemos enfocarnos para ver la luz. – Aristóteles",
                "La clave del éxito es comenzar antes de estar listo. – Marie Forleo",
                "Todo lo que necesitas está dentro de ti. – Anónimo",
                "La mejor manera de predecir tu futuro es crearlo. – Abraham Lincoln",
                "La vida es 10% lo que nos sucede y 90% cómo reaccionamos ante ello. – Charles R. Swindoll",
                "El mayor error que puedes cometer es tener miedo de cometer errores. – Elbert Hubbard",
                "Solo aquellos que se atreven a tener grandes fracasos terminan logrando grandes éxitos. – Robert F. Kennedy",
                "El éxito es la habilidad de ir de fracaso en fracaso sin perder el entusiasmo. – Winston Churchill",
                "El único límite a nuestro logro de mañana está en nuestras dudas y vacilaciones de hoy. – Franklin D. Roosevelt",
                "Haz lo que puedas, con lo que tienes, donde estés. – Theodore Roosevelt",
                "El miedo es el enemigo de la acción. – Anónimo",
                "La vida es corta, no pierdas el tiempo viviendo la vida de otra persona. – Steve Jobs",
                "Si no te desafía, no te cambia. – Anónimo",
                "Recuerda que no conseguir lo que quieres es a veces un maravilloso golpe de suerte. – Dalai Lama",
                "La paz comienza con una sonrisa. – Madre Teresa",
                "Tu vida no mejora por casualidad, mejora por el cambio. – Jim Rohn",
                "Cada día es una nueva oportunidad para cambiar tu vida. – Anónimo",
                "La clave para alcanzar tus sueños es creer en ti mismo. – Anónimo",
                "Cree en ti mismo y todo será posible. – Anónimo",
                "Cuando dejas de perseguir las cosas equivocadas, dejas espacio para lo correcto. – Anónimo",
                "No mires el reloj; haz lo que hace, sigue adelante. – Sam Levenson",
                "La fuerza no proviene de la capacidad corporal, sino de la voluntad del alma. – Mahatma Gandhi",
                "Haz de tu vida un sueño, y de tu sueño una realidad. – Antoine de Saint-Exupéry"
            ]
        },
        {
            "tag": "recomendaciones",
            "patterns": [
                "¿Tienes alguna recomendación de libro?",
                "Recomiéndame una película",
                "¿Me puedes sugerir un libro para leer?",
                "Dame una recomendación de serie",
                "Recomiéndame una película para ver esta noche",
                "¿Tienes algún libro que me pueda interesar?",
                "¿Qué libro me recomiendas?",
                "¿Cuál es una buena película para ver?",
                "Sugiéreme una serie interesante",
                "¿Qué libro debería leer?",
                "Recomiéndame una película de acción",
                "¿Tienes alguna película que me pueda gustar?",
                "¿Me puedes recomendar algo para leer?",
                "Dame una recomendación de película de ciencia ficción",
                "¿Qué película me sugieres?",
                "Sugiéreme una novela de misterio",
                "Recomiéndame una serie de comedia",
                "¿Qué libro es ideal para una tarde tranquila?",
                "¿Puedes recomendarme una película de terror?",
                "¿Tienes alguna recomendación de ficción histórica?",
                "Recomiéndame un buen libro de no ficción",
                "¿Cuál es una buena película para un maratón?",
                "Dame una recomendación de libro de autoayuda",
                "¿Tienes alguna recomendación para ver en Netflix?",
                "Recomiéndame una película de drama",
                "¿Qué libro debería leer si me gusta el suspenso?",
                "Sugiéreme una serie de fantasía",
                "¿Puedes recomendarme algo para leer esta semana?",
                "¿Tienes alguna recomendación para un fin de semana relajado?",
                "Recomiéndame una película basada en hechos reales",
                "¿Cuál es un buen libro de aventuras?",
                "¿Tienes alguna recomendación de libro clásico?",
                "Recomiéndame una película de animación",
                "¿Qué libro me ayudará a mejorar mis habilidades?",
                "Recomiéndame una película de misterio",
                "¿Qué serie está de moda actualmente?",
                "Recomiéndame una película para un día lluvioso",
                "¿Tienes alguna recomendación de comedia?",
                "Recomiéndame un libro para alguien que ama la ciencia ficción",
                "Sugiéreme una película inspiradora",
                "¿Qué libro sobre crecimiento personal me recomendarías?",
                "Recomiéndame una serie para maratonear",
                "¿Qué película debería ver si me gusta la acción?",
                "Dame una recomendación de libro de aventuras y fantasía",
                "¿Tienes alguna recomendación de biografía?",
                "Recomiéndame una película para ver con amigos",
                "¿Qué libro de fantasía me recomendarías?"
            ],
            "responses": [
                "Si te gustan los libros de misterio, te recomiendo 'La chica del tren' de Paula Hawkins.",
                "Para una buena película de acción, te sugiero 'Mad Max: Fury Road'.",
                "Si estás buscando algo de ciencia ficción, 'Dune' de Frank Herbert es un clásico que no puedes perderte.",
                "Una gran recomendación de libro de no ficción es 'Sapiens: De animales a dioses' de Yuval Noah Harari.",
                "Si te gustan las comedias, te sugiero la película 'The Hangover'.",
                "Si te interesa la fantasía, 'El nombre del viento' de Patrick Rothfuss es una excelente opción.",
                "Para un thriller intrigante, 'La chica en la telaraña' de David Lagercrantz es una lectura imperdible.",
                "Si te gusta el terror psicológico, te recomiendo la película 'Hereditary'.",
                "Para una serie de suspenso, 'Breaking Bad' es una de las mejores de todos los tiempos.",
                "Si te gustan las novelas históricas, 'El médico' de Noah Gordon es una gran opción.",
                "Una película excelente para un maratón es 'The Lord of the Rings' (El Señor de los Anillos).",
                "Te recomiendo 'El poder del ahora' de Eckhart Tolle, un libro de autoayuda sobre vivir en el presente.",
                "Si te gustan las películas de superhéroes, 'Avengers: Endgame' es imperdible.",
                "Para una película emotiva, 'La teoría del todo' sobre la vida de Stephen Hawking es una excelente opción.",
                "Si te gusta la ciencia ficción, 'Fahrenheit 451' de Ray Bradbury es una excelente novela.",
                "Para un libro inspirador sobre el éxito, 'Piense y hágase rico' de Napoleon Hill es una gran opción.",
                "Si te gustan las películas de animación, 'Coco' de Disney es encantadora y emotiva.",
                "Si te interesa el crecimiento personal, te sugiero 'Los 7 hábitos de la gente altamente efectiva' de Stephen Covey.",
                "Si buscas una película para maratonear, 'Inception' es una excelente opción.",
                "Una buena serie de comedia es 'The Office'. Te hará reír mucho.",
                "Si te gusta el suspenso, 'La verdad sobre el caso Harry Quebert' de Joël Dicker es una gran elección.",
                "Si te interesa un libro sobre filosofía, te recomiendo 'Meditaciones' de Marco Aurelio.",
                "Si te gustan las películas de drama, 'The Shawshank Redemption' es una de las mejores de todos los tiempos.",
                "Una recomendación para los fanáticos de la literatura clásica es 'Orgullo y prejuicio' de Jane Austen.",
                "Si te gustan los libros de aventuras, 'El hobbit' de J.R.R. Tolkien es perfecto.",
                "Para una serie de ciencia ficción, 'Stranger Things' tiene mucha acción y misterio.",
                "Si buscas algo inspirador, 'The Pursuit of Happyness' (En busca de la felicidad) es una película que te motivará.",
                "Para un libro sobre liderazgo, 'Liderazgo' de John C. Maxwell es una excelente opción.",
                "Si buscas una película romántica, 'The Notebook' (El diario de Noah) es un clásico.",
                "Una gran recomendación para alguien que ama la ciencia ficción es 'Neuromancer' de William Gibson.",
                "Si te gustan las películas históricas basadas en hechos reales, '12 Years a Slave' es una excelente opción.",
                "Si quieres leer una biografía, 'Steve Jobs' de Walter Isaacson es muy inspiradora.",
                "Para una serie de fantasía, 'Game of Thrones' es épica.",
                "Si te gustan las películas de acción, te recomiendo 'John Wick' con Keanu Reeves.",
                "Si te interesan los libros de autoayuda, 'Los secretos de la mente millonaria' de T. Harv Eker es muy popular.",
                "Si buscas una película de terror psicológico, 'The Witch' es perfecta.",
                "Te sugiero 'El nombre del viento' de Patrick Rothfuss si te gustan las novelas de fantasía épica.",
                "Una excelente recomendación de libro es 'Cien años de soledad' de Gabriel García Márquez, un clásico de la literatura.",
                "Si te gustan las películas de suspenso y drama, 'Gone Girl' (Perdida) es una gran opción.",
                "Para una serie interesante, 'Black Mirror' tiene episodios que te harán reflexionar sobre la tecnología.",
                "Si buscas una recomendación de película romántica, 'La La Land' es un musical encantador.",
                "Para algo de aventura, te recomiendo 'La trilogía de El Señor de los Anillos'."
            ]
        },
        {
            "tag": "soluciones_problemas",
            "patterns": [
                "Tengo problemas con mi computadora, ¿cómo puedo solucionarlo?",
                "Mi teléfono no funciona bien, ¿qué debo hacer?",
                "¿Cómo puedo arreglar un error de conexión a Internet?",
                "Mi pantalla se ve borrosa, ¿cómo lo soluciono?",
                "Tengo problemas con el audio de mi computadora, ¿qué puedo hacer?",
                "¿Cómo puedo solucionar un problema de batería en mi móvil?",
                "No puedo acceder a mi cuenta, ¿cómo puedo recuperarla?",
                "Mi aplicación no se abre, ¿qué debo hacer?",
                "Mi Wi-Fi está lento, ¿cómo lo puedo mejorar?",
                "¿Cómo soluciono problemas con mi impresora?",
                "Mi computadora está muy lenta, ¿qué puedo hacer?",
                "¿Cómo arreglo un archivo corrupto?",
                "Tengo problemas con la actualización de software, ¿cómo lo resuelvo?",
                "No puedo enviar correos, ¿qué debo hacer?",
                "Mi dispositivo no reconoce el USB, ¿cómo lo soluciono?",
                "¿Qué hacer si mi smartphone se congela?",
                "¿Cómo puedo mejorar el rendimiento de mi computadora?",
                "No puedo conectarme a una red Wi-Fi, ¿cómo lo soluciono?",
                "Mi computadora está congelada, ¿qué debo hacer?",
                "¿Cómo solucionar un problema de sincronización en mi teléfono?",
                "Mi computadora se apaga sola, ¿qué puede ser?",
                "¿Cómo arreglo un problema de pantalla en mi teléfono?",
                "¿Qué hago si mi aplicación se cierra inesperadamente?",
                "Mi dispositivo se sobrecalienta, ¿cómo lo soluciono?",
                "Tengo problemas con la instalación de un programa, ¿qué debo hacer?",
                "¿Cómo puedo liberar espacio en mi computadora?",
                "Mi cámara web no funciona, ¿cómo la arreglo?",
                "No puedo acceder a Internet, ¿qué pasos debo seguir?",
                "Mi teléfono no carga, ¿qué puedo hacer?",
                "¿Cómo soluciono problemas de batería en mi laptop?",
                "No puedo encontrar un archivo, ¿qué hago?",
                "Mi software está fallando, ¿cómo lo soluciono?",
                "Tengo un error en mi sistema operativo, ¿qué debo hacer?",
                "¿Cómo solucionar problemas de conexión Bluetooth?",
                "Mi aplicación se bloquea constantemente, ¿cómo lo arreglo?",
                "No puedo imprimir, ¿cómo soluciono el problema?",
                "Mi teléfono se apaga de repente, ¿qué debo hacer?",
                "¿Cómo puedo mejorar la velocidad de mi conexión a Internet?",
                "Mi PC tiene virus, ¿cómo puedo eliminarlos?",
                "¿Qué hacer si mi computadora no enciende?",
                "Tengo problemas con la cámara de mi teléfono, ¿cómo lo arreglo?",
                "¿Cómo puedo restaurar mi dispositivo a su configuración de fábrica?",
                "Mi dispositivo no responde, ¿qué hago?",
                "Mi pantalla táctil no responde, ¿cómo la arreglo?",
                "¿Cómo soluciono un problema de compatibilidad con mi software?",
                "Tengo problemas con el almacenamiento en la nube, ¿cómo lo arreglo?",
                "Mi dispositivo no está reconociendo la tarjeta SD, ¿qué debo hacer?",
                "Mi aplicación se actualizó y ahora no funciona, ¿cómo lo soluciono?",
                "Tengo problemas con la sincronización de mis contactos, ¿qué puedo hacer?",
                "Mi dispositivo está más lento después de la actualización, ¿qué hago?"
            ],
            "responses": [
                "Si tu computadora está lenta, puedes intentar cerrar programas que no estés utilizando, eliminar archivos temporales y ejecutar un análisis de antivirus.",
                "Si tu teléfono no funciona bien, intenta reiniciarlo, actualizar el sistema operativo o restablecer la configuración de fábrica.",
                "Para resolver problemas de conexión a Internet, intenta reiniciar tu router, verificar las conexiones de cables y asegurarte de que tu dispositivo esté conectado correctamente.",
                "Si la pantalla de tu dispositivo se ve borrosa, asegúrate de que la resolución esté configurada correctamente o prueba reiniciar el dispositivo.",
                "Para problemas de audio en la computadora, verifica que el volumen no esté en silencio, asegúrate de que los controladores de audio estén actualizados y prueba con unos auriculares.",
                "Si tu teléfono tiene problemas de batería, intenta cerrar aplicaciones en segundo plano, reducir el brillo de la pantalla y verificar si alguna aplicación está consumiendo demasiada energía.",
                "Si no puedes acceder a tu cuenta, intenta restablecer la contraseña o verificar si tienes acceso a la dirección de correo electrónico asociada a la cuenta.",
                "Si una aplicación no se abre, prueba reiniciar tu dispositivo o desinstalar y volver a instalar la aplicación.",
                "Para mejorar la velocidad del Wi-Fi, intenta mover el router a una ubicación más central, cambiar el canal Wi-Fi o utilizar un amplificador de señal.",
                "Si tu impresora no funciona, asegúrate de que esté correctamente conectada, que no haya atascos de papel y que los controladores estén actualizados.",
                "Para solucionar problemas de rendimiento en tu computadora, elimina archivos innecesarios, desactiva programas de inicio y realiza un análisis de virus.",
                "Si tienes un archivo corrupto, intenta abrirlo en otro programa o utilizar una herramienta de reparación de archivos.",
                "Si tienes problemas con una actualización de software, asegúrate de que tienes suficiente espacio en el disco y que el dispositivo esté conectado a Internet.",
                "Si no puedes enviar correos, verifica tu conexión a Internet, revisa si el servidor de correo está funcionando y asegúrate de que la configuración de tu cuenta sea correcta.",
                "Si tu dispositivo no reconoce el USB, prueba con otro puerto USB o con otro cable, y asegúrate de que el dispositivo esté correctamente configurado.",
                "Si tu smartphone se congela, intenta reiniciarlo manteniendo presionado el botón de encendido o realizando un reinicio forzado.",
                "Para mejorar el rendimiento de tu computadora, elimina archivos temporales, desactiva programas innecesarios y asegúrate de tener suficiente espacio de almacenamiento.",
                "Si no puedes conectarte a una red Wi-Fi, verifica que la red esté disponible, que la contraseña sea correcta y que no haya problemas con tu router.",
                "Si tu computadora se congela, intenta cerrar las aplicaciones no esenciales o reiniciar el sistema en modo seguro.",
                "Para resolver problemas de sincronización en tu teléfono, asegúrate de que la sincronización esté habilitada y de que tengas una conexión estable a Internet.",
                "Si tu computadora se apaga sola, verifica si está sobrecalentada, asegúrate de que la fuente de alimentación esté funcionando correctamente y que no haya problemas con el sistema operativo.",
                "Si tu teléfono tiene un problema de pantalla, intenta reiniciarlo, ajustar la configuración de la pantalla o contactar con un servicio técnico.",
                "Si tu aplicación se cierra inesperadamente, intenta actualizarla o reinstalarla. Si el problema persiste, verifica si hay actualizaciones del sistema operativo.",
                "Si tu dispositivo se sobrecalienta, asegúrate de que el ventilador funcione correctamente, evita usarlo en superficies blandas y cierra las aplicaciones que consumen muchos recursos.",
                "Si tienes problemas con la instalación de un programa, asegúrate de que el sistema cumpla los requisitos del programa y que tengas los permisos necesarios para instalarlo.",
                "Para liberar espacio en tu computadora, elimina archivos temporales, desinstala programas que no uses y utiliza herramientas de limpieza del sistema.",
                "Si tu cámara web no funciona, asegúrate de que esté correctamente conectada, que los controladores estén actualizados y que no esté siendo utilizada por otra aplicación.",
                "Si no puedes acceder a Internet, verifica si hay problemas con tu router o proveedor de servicios, y asegúrate de que tu dispositivo esté conectado correctamente.",
                "Si tu teléfono no carga, prueba con otro cable o cargador, asegúrate de que el puerto de carga esté limpio y que la batería esté en buen estado.",
                "Si tu laptop tiene problemas de batería, verifica la configuración de ahorro de energía, actualiza los controladores y comprueba si la batería necesita ser reemplazada.",
                "Si no puedes encontrar un archivo, intenta buscarlo en diferentes ubicaciones, verifica la papelera de reciclaje o utiliza software de recuperación de archivos.",
                "Si tu software está fallando, asegúrate de que esté actualizado y que no haya conflictos con otros programas. Considera reinstalarlo si el problema persiste.",
                "Si tienes un error en tu sistema operativo, busca soluciones en línea, reinicia en modo seguro o intenta restaurar el sistema a un punto anterior.",
                "Para problemas de conexión Bluetooth, asegúrate de que el dispositivo esté en modo de emparejamiento, que el Bluetooth esté habilitado y que no haya interferencias.",
                "Si tu aplicación se bloquea constantemente, intenta desinstalarla y reinstalarla o verificar si hay actualizaciones disponibles.",
                "Si no puedes imprimir, asegúrate de que la impresora esté correctamente conectada, que haya papel y tinta, y que los controladores estén actualizados.",
                "Si tu teléfono se apaga de repente, verifica si la batería está agotada, si hay problemas con el sistema operativo o si el dispositivo necesita una actualización.",
                "Para mejorar la velocidad de tu conexión a Internet, asegúrate de que tu router esté actualizado, reduce la cantidad de dispositivos conectados y usa un cable Ethernet si es posible.",
                "Si tu PC tiene virus, utiliza un software antivirus confiable para escanear y eliminar los virus. Asegúrate de mantener tu sistema operativo actualizado.",
                "Si tu computadora no enciende, verifica que esté correctamente conectada a la fuente de energía y que el botón de encendido esté funcionando. Si el problema persiste, revisa la fuente de alimentación.",
                "Si tienes problemas con la cámara de tu teléfono, verifica que no haya aplicaciones que estén utilizando la cámara y que los controladores estén actualizados.",
                "Para restaurar tu dispositivo a su configuración de fábrica, dirígete a los ajustes del sistema y selecciona la opción de restauración o restablecimiento de fábrica.",
                "Si tu dispositivo no responde, intenta reiniciarlo o realizar un reinicio forzado manteniendo presionados los botones de encendido y volumen.",
                "Si tu pantalla táctil no responde, limpia la pantalla, asegúrate de que no haya aplicaciones que consuman muchos recursos y reinicia el dispositivo.",
                "Para solucionar problemas de compatibilidad con software, asegúrate de que el programa sea compatible con tu sistema operativo y considera actualizar o cambiar a una versión más reciente.",
                "Si tienes problemas con el almacenamiento en la nube, asegúrate de que tu conexión a Internet sea estable y verifica si hay suficiente espacio en tu cuenta de almacenamiento.",
                "Si tu dispositivo no está reconociendo la tarjeta SD, asegúrate de que esté correctamente insertada, verifica si hay un problema con la tarjeta o prueba en otro dispositivo.",
                "Si tu aplicación se actualizó y ahora no funciona, intenta reiniciar el dispositivo o desinstalar y volver a instalar la aplicación.",
                "Si tienes problemas con la sincronización de tus contactos, asegúrate de que la sincronización esté activada y de que tengas una conexión estable a Internet."
            ]
        },
        {
            "tag": "empatías",
            "patterns": [
                "Estoy pasando por un mal momento, ¿puedes ayudarme?",
                "Me siento triste, ¿qué puedo hacer?",
                "Hoy no es un buen día para mí.",
                "Estoy muy cansado/a, necesito un poco de apoyo.",
                "Me siento un poco perdido/a, ¿tienes algún consejo?",
                "Estoy preocupado/a por algo, ¿puedes escucharme?",
                "No sé cómo salir de esta situación, me siento atrapado/a.",
                "Me siento solo/a, ¿puedes decirme algo que me anime?",
                "Tengo miedo de enfrentar lo que viene, ¿puedes darme ánimos?",
                "Siento que no puedo más, ¿qué hago?",
                "¿Algún consejo para lidiar con el estrés?",
                "Hoy todo parece ir mal, ¿puedes decirme algo positivo?",
                "Me siento agotado/a emocionalmente, ¿qué puedo hacer?",
                "Me siento fuera de lugar, ¿puedes ayudarme a sentirme mejor?",
                "Todo me está afectando mucho, ¿cómo lo manejo?",
                "Estoy muy confundido/a, ¿qué opinas sobre esto?",
                "No sé cómo seguir adelante, ¿algún consejo?",
                "Siento que no tengo fuerzas para seguir, ¿me puedes ayudar?",
                "Hoy estoy muy desanimado/a, ¿puedes darme apoyo?",
                "Me siento abrumado/a por todo lo que está pasando.",
                "¿Cómo puedo lidiar con la ansiedad?",
                "Tengo miedo de que todo salga mal, ¿puedes darme alguna esperanza?",
                "Me siento derrotado/a, ¿puedes darme palabras de ánimo?",
                "Hoy no puedo dejar de pensar en lo que me preocupa.",
                "¿Cómo puedo recuperar mi motivación?",
                "Siento que todo está fuera de control, ¿qué hago?",
                "Estoy muy estresado/a, ¿algún consejo para calmarme?",
                "Me siento muy triste, ¿qué puedo hacer para sentirme mejor?",
                "Estoy luchando con mis pensamientos, ¿puedes ayudarme?",
                "Me siento perdido/a y no sé por dónde empezar.",
                "Estoy pasando por una etapa difícil, ¿cómo puedo seguir adelante?",
                "Siento que no soy suficiente, ¿puedes decirme algo positivo?",
                "Me siento solo/a, ¿tienes algo que me consuele?",
                "No sé cómo afrontar lo que está pasando, ¿qué hago?",
                "Me siento muy inseguro/a, ¿cómo puedo aumentar mi confianza?",
                "Estoy pasando por una crisis, ¿puedes darme algún consejo?",
                "Tengo mucho miedo, ¿qué puedo hacer para calmarme?",
                "Me siento muy mal, ¿puedes ayudarme a sentirme mejor?",
                "Me siento incapaz de seguir, ¿puedes darme apoyo?",
                "Estoy sintiendo mucha presión, ¿qué hago para aliviarlo?",
                "Estoy enfrentando una situación difícil, ¿puedes ayudarme?",
                "Me siento abrumado/a por las emociones, ¿cómo lo gestiono?",
                "¿Cómo puedo dejar de sentirme tan ansioso/a?",
                "Me siento frustrado/a, ¿tienes algún consejo?",
                "Estoy pasando por un momento difícil, ¿puedes escucharme?",
                "Me siento desconectado/a de todo, ¿cómo lo soluciono?",
                "No sé cómo seguir adelante, ¿puedes ayudarme a encontrar fuerzas?"
            ],
            "responses": [
                "Lamento mucho que estés pasando por un momento difícil, estoy aquí para ayudarte en lo que necesites.",
                "Es completamente normal sentirse así a veces. Tómate tu tiempo y busca hacer algo que te calme.",
                "Te entiendo, a veces todo parece demasiado abrumador. Recuerda que no estás solo/a, hay gente que te apoya.",
                "Estoy aquí para escucharte, si quieres hablar más sobre lo que te preocupa, puedes contar conmigo.",
                "Es difícil encontrar fuerzas cuando todo parece ir mal, pero lo más importante es que no te rindas. Siempre hay una luz al final del túnel.",
                "Entiendo que te sientas así. A veces, compartir tus pensamientos con alguien puede hacerte sentir un poco mejor.",
                "No es fácil atravesar momentos complicados, pero quiero que sepas que te comprendo y que este mal momento también pasará.",
                "Me siento triste por saber que te sientes solo/a. Recuerda que tus emociones son válidas, y que está bien pedir ayuda cuando lo necesites.",
                "Es comprensible sentir miedo. No te preocupes, todo estará bien. Puedes hacerlo, paso a paso.",
                "Siento mucho que estés pasando por esto, pero recuerda que tienes la fuerza dentro de ti para superar cualquier obstáculo.",
                "A veces, cuando todo parece tan difícil, lo más importante es respirar y dar pequeños pasos hacia la solución.",
                "La ansiedad es algo difícil de manejar, pero intenta hacer una pausa, respirar profundamente y pensar en el momento presente. Todo pasa.",
                "Recuerda que las dificultades son temporales. Lo que te está pasando no define tu valor. Eres más fuerte de lo que crees.",
                "Cuando te sientas agotado/a, trata de descansar y dar espacio a tu mente. A veces, un poco de descanso es todo lo que necesitamos.",
                "Es normal sentirse fuera de lugar en ocasiones. Todos tenemos esos momentos, y es parte de aprender y crecer. Estás haciendo lo mejor que puedes.",
                "Es totalmente comprensible sentirse abrumado/a por las circunstancias. No olvides que está bien pedir ayuda, no tienes que enfrentarlo todo solo/a.",
                "Si te sientes confundido/a, tómate un momento para reflexionar. A veces, dar un paso atrás ayuda a ver las cosas con más claridad.",
                "Es completamente válido sentir que no puedes seguir adelante. No te apresures, tómate tu tiempo y busca pequeñas metas que puedas lograr.",
                "En momentos difíciles, es importante recordar que siempre hay apoyo disponible, ya sea de un ser querido o de alguien a quien puedas acudir.",
                "Te entiendo, todos pasamos por momentos en los que nos sentimos abrumados. Lo importante es saber que no estás solo/a en este viaje.",
                "Está bien sentirse desanimado/a de vez en cuando. Sé amable contigo mismo/a y date tiempo para recuperarte. Todo mejorará.",
                "Cuando las preocupaciones nos invaden, es importante encontrar algo que nos calme. Ya sea dar un paseo o hablar con alguien cercano, es un buen paso.",
                "A veces, las palabras de aliento pueden hacer una gran diferencia. Recuerda que cada día es una nueva oportunidad para empezar de nuevo.",
                "Es normal tener días difíciles, y está bien no tener todas las respuestas. Lo importante es dar un paso a la vez.",
                "Recuerda que el estrés no define quién eres. Tómate un momento para relajarte y recuperar fuerzas.",
                "Si te sientes triste, es importante validar tus emociones. Permítete sentir lo que necesites y no te presiones por mejorar inmediatamente.",
                "Lidiar con la ansiedad no es fácil, pero a menudo pequeños momentos de calma, como respirar o relajarte, pueden marcar una gran diferencia.",
                "Es completamente válido sentir inseguridad. Todos pasamos por ello, y con el tiempo aprenderás a confiar más en ti mismo/a.",
                "En momentos de crisis, a veces lo mejor es hablar con alguien en quien confíes. Te ayudará a sentirte más ligero/a y comprendido/a.",
                "El miedo puede ser paralizante, pero recuerda que es solo una emoción, no una sentencia. Tienes la capacidad de afrontarlo.",
                "Siento mucho que te sientas mal. A veces es útil hablar sobre lo que estás sintiendo, y estoy aquí para escucharte.",
                "En momentos difíciles, siempre es bueno recordar que tienes el poder de superar cualquier obstáculo. Tómatelo un día a la vez.",
                "La presión puede ser muy difícil de manejar, pero recuerda que está bien pedir un respiro. El autocuidado es una prioridad.",
                "Si te sientes abrumado/a, puede ser útil dar pequeños pasos para organizarte. No tienes que hacerlo todo de una vez.",
                "Afrontar tus emociones de manera saludable es clave. Intenta hablar con alguien o realizar una actividad que te calme.",
                "Cuando la ansiedad se apodera de ti, intenta enfocarte en el presente y recordar que todo pasará. Está bien pedir ayuda.",
                "Es normal sentirse frustrado/a cuando las cosas no salen como esperabas. Recuerda que todo tiene una solución, y siempre hay un camino hacia adelante.",
                "Hablar de lo que sientes es un gran paso. Si necesitas más tiempo para procesarlo, está bien. No tienes que apresurarte.",
                "Todos tenemos días difíciles. Lo más importante es recordarte a ti mismo/a que está bien no sentirse bien siempre.",
                "Si te sientes desconectado/a, a veces compartir tus pensamientos con alguien puede ser un buen primer paso para recuperar tu sentido de conexión.",
                "Cuando no sabes qué hacer, la mejor opción es buscar ayuda o hablar con alguien. A veces, un poco de apoyo puede cambiar la perspectiva."
            ]
        },
        {
            "tag": "feedback",
            "patterns": [
                "¿Qué opinas de lo que hice?",
                "¿Puedes darme tu opinión sobre mi trabajo?",
                "¿Qué piensas sobre mi idea?",
                "¿Te parece bien lo que estoy haciendo?",
                "¿Tienes alguna sugerencia para mejorar?",
                "¿Cómo crees que puedo mejorar en esto?",
                "¿Qué tal lo hice?",
                "¿Te gustó lo que hice?",
                "¿Cómo puedo hacerlo mejor?",
                "¿Crees que puedo mejorar en esto?",
                "¿Te parece que estoy yendo por el camino correcto?",
                "¿Qué piensas de este proyecto?",
                "¿Tienes alguna crítica constructiva?",
                "¿Qué opinas de este enfoque?",
                "¿Te parece que esto es lo mejor que puedo hacer?",
                "¿Puedes darme tu punto de vista sobre esto?",
                "¿Hay algo que podría mejorar?",
                "¿Qué mejorarías en mi propuesta?",
                "¿Crees que esto puede funcionar?",
                "¿Cuál es tu impresión de lo que hice?",
                "¿Puedes darme tus comentarios sobre mi desempeño?",
                "¿Qué opinas de los resultados hasta ahora?",
                "¿Qué cambiarías de lo que estoy haciendo?",
                "¿Crees que esto es lo adecuado?",
                "¿Te gustaría ver algo diferente en mi trabajo?",
                "¿Qué te parece mi idea?",
                "¿Cómo puedo mejorar la calidad de mi trabajo?",
                "¿Qué puntos positivos ves en lo que hice?",
                "¿Qué puedo hacer para que mi trabajo sea más efectivo?",
                "¿Qué piensas sobre los cambios que propuse?",
                "¿Hay algo que te gustaría que cambiara?",
                "¿Estás satisfecho/a con el trabajo que he hecho?",
                "¿Cómo puedo seguir mejorando?",
                "¿Qué debo hacer para mejorar mi desempeño?",
                "¿Qué opinas de los resultados de mi proyecto?",
                "¿Puedo mejorar en algún aspecto de lo que estoy haciendo?",
                "¿Qué te parece mi enfoque de trabajo?",
                "¿Hay algo que podría hacer diferente?",
                "¿Crees que estoy alcanzando mis metas?",
                "¿Cómo puedo mejorar mis habilidades?",
                "¿Cuál es tu opinión sobre la dirección en la que voy?",
                "¿Qué piensas de mi propuesta de cambios?",
                "¿Estás contento/a con lo que he logrado hasta ahora?",
                "¿Qué opinas sobre mi actitud hacia el trabajo?",
                "¿Te parece que tengo áreas que mejorar?",
                "¿Tienes algún consejo para mejorar en lo que hago?",
                "¿Qué te parece mi progreso hasta ahora?"
            ],
            "responses": [
                "Gracias por pedirme mi opinión. Creo que vas por buen camino, pero podrías intentar mejorar en algunos detalles.",
                "Me gusta lo que has hecho, pero creo que podrías ajustar algunos aspectos para hacerlo aún mejor. ¿Has considerado hacer esto?",
                "Creo que estás haciendo un gran trabajo, pero tal vez podrías enfocarte un poco más en [detalle específico] para mejorar aún más.",
                "Tu idea tiene potencial. Sin embargo, me parece que podrías mejorar en [aspecto específico].",
                "Está bien hecho, pero no te olvides de [sugerencia]. Creo que eso puede marcar la diferencia.",
                "Tu trabajo es sólido, pero tal vez podrías optimizar [proceso o parte específica].",
                "Lo hiciste muy bien, pero hay una pequeña área en la que podrías mejorar. Intenta enfocarte en [sugerencia].",
                "Me gusta el enfoque, pero creo que podrías dedicar más tiempo a [detalle específico]. Eso podría hacer que tu trabajo sea aún mejor.",
                "Buen trabajo, solo creo que podrías mejorar en la forma de [sugerencia]. Esto puede llevarlo al siguiente nivel.",
                "Me parece que estás avanzando bien. Solo tal vez [sugerencia] podría mejorar aún más el resultado.",
                "Es un buen trabajo. Sin embargo, creo que podrías considerar [sugerencia] para hacer que sea más impactante.",
                "Has hecho un excelente esfuerzo, pero con un pequeño ajuste en [aspecto] puedes llevarlo a un nivel superior.",
                "Aprecio lo que has hecho hasta ahora. Sin embargo, creo que podrías mejorar la calidad de [detalles específicos].",
                "Creo que tienes una buena base. Si te concentras más en [proceso/área], podrías lograr resultados aún mejores.",
                "Es un buen comienzo, pero tal vez podrías darle más énfasis a [detalle]. Eso mejoraría mucho el resultado final.",
                "En general, vas por buen camino, solo recuerda [sugerencia]. Estás muy cerca de lograrlo.",
                "Tu enfoque es interesante. Si ajustas [detalle específico], podrías hacerlo aún más efectivo.",
                "Estoy impresionado/a por lo que has logrado hasta ahora. Quizás podrías mejorar en [aspecto] para hacerlo aún mejor.",
                "Me gusta cómo estás enfocando esto. Pero tal vez un pequeño ajuste en [sugerencia] podría hacer una gran diferencia.",
                "Tu trabajo es muy sólido, solo creo que podrías mejorar la manera en que [sugerencia]. Eso hará que todo encaje mejor.",
                "Te felicito por el esfuerzo. Solo tienes que poner más atención a [detalle] para lograr un resultado más pulido.",
                "Lo estás haciendo bien, pero a veces la clave está en ajustar [elemento]. Puede marcar la diferencia en el impacto final.",
                "Tu proyecto tiene mucho potencial. Si te enfocas más en [sugerencia], creo que puede mejorar bastante.",
                "Hay buenos elementos en tu trabajo, pero creo que podrías mejorar la organización en [área].",
                "Me gusta lo que has hecho, solo te recomendaría darle un poco más de enfoque a [detalle]. Esto te ayudará a obtener mejores resultados.",
                "Creo que estás haciendo un buen trabajo, pero podrías probar con [sugerencia] para mejorar el impacto de tu proyecto.",
                "Lo que has hecho hasta ahora es impresionante. Si mejoras en [sugerencia], creo que será aún mejor.",
                "Tu desempeño es excelente, solo creo que podrías perfeccionar [proceso/área].",
                "Me parece que has hecho un gran trabajo. Una recomendación sería [sugerencia] para hacerlo aún más eficaz.",
                "Estás haciendo progresos, pero podría ser útil concentrarte un poco más en [aspecto]. Esto realmente podría mejorar los resultados finales.",
                "Vas bien encaminado, pero creo que [detalle] podría ayudarte a mejorar aún más el proyecto.",
                "Tu trabajo es bastante bueno, pero creo que podrías mejorar en [área]. Me gustaría ver más énfasis en eso.",
                "Estás haciendo un gran trabajo, pero con un poco más de atención en [sugerencia], creo que todo quedará perfecto.",
                "Tu enfoque es bueno, solo me gustaría que te centrases un poco más en [detalle]. Eso sería de gran ayuda.",
                "Lo que has hecho es excelente. Sin embargo, creo que podrías agregar más de [elemento específico] para que se vea aún mejor.",
                "Buen trabajo, pero asegúrate de no pasar por alto [detalle específico]. Creo que eso es lo que podría mejorar el resultado.",
                "Está bien hecho, pero si ajustas un poco [área específica], podrías lograr resultados aún más sobresalientes.",
                "Creo que estás casi ahí. Si mejoras [aspecto], el proyecto será aún mejor.",
                "Tu trabajo tiene una gran base. Para mejorar aún más, podrías considerar hacer [sugerencia].",
                "Has hecho un gran trabajo, solo creo que podrías pulir un poco más [proceso/área].",
                "Vas por buen camino, pero sería útil si te concentraras un poco más en [sugerencia]. Eso podría ser la clave para lograr mejores resultados.",
                "Te felicito por lo que has logrado hasta ahora. Tal vez puedas hacer más énfasis en [aspecto] para lograr un impacto aún mayor.",
                "Creo que tienes mucho potencial. Si mejoras [aspecto], tu proyecto podría ser aún más impactante.",
                "Es un buen trabajo, solo asegúrate de que [detalle específico] esté completamente claro para que el resultado final sea aún más efectivo.",
                "Lo que has hecho es impresionante. Mi sugerencia sería centrarte más en [sugerencia] para mejorar aún más."
            ]
        },
        {
            "tag": "ayuda en programación",
            "patterns": [
                "¿Cómo puedo solucionar un error en mi código?",
                "No sé cómo empezar con mi proyecto de programación.",
                "¿Cómo puedo optimizar este algoritmo?",
                "Tengo problemas para entender cómo funcionan las variables.",
                "¿Cómo puedo declarar una función en Python?",
                "¿Qué significa este error en mi código?",
                "¿Por qué mi código no está funcionando?",
                "¿Cómo puedo depurar mi código?",
                "¿Cómo puedo evitar errores de sintaxis?",
                "¿Cómo hago que mi aplicación sea más eficiente?",
                "¿Qué hago si me sale un error de tipo en mi código?",
                "¿Cómo puedo leer un archivo en Python?",
                "¿Cómo se usan las estructuras de datos como listas y diccionarios?",
                "¿Qué es un puntero en C?",
                "¿Cómo se hace un bucle for en JavaScript?",
                "Tengo un problema con mi base de datos, ¿me puedes ayudar?",
                "No entiendo el concepto de herencia en programación orientada a objetos.",
                "¿Qué es una variable global y cómo se utiliza?",
                "¿Cómo puedo conectar mi aplicación con una API?",
                "¿Cómo hago para manejar excepciones en Python?",
                "Estoy aprendiendo Java, ¿cómo puedo hacer una clase?",
                "¿Cómo puedo pasar parámetros a una función en C++?",
                "Tengo un error de sintaxis, ¿puedes ayudarme a encontrarlo?",
                "¿Cómo puedo mejorar el rendimiento de mi código?",
                "Estoy aprendiendo SQL, ¿cómo puedo hacer una consulta?",
                "¿Cómo puedo hacer que mi código sea más legible?",
                "¿Cómo implemento un algoritmo de búsqueda binaria?",
                "¿Cómo hago para compilar y ejecutar un programa en C?",
                "¿Cómo puedo corregir un bucle infinito?",
                "¿Qué es la recursión y cómo puedo usarla?",
                "¿Cómo puedo usar las clases en Java?",
                "¿Cómo gestiono los errores en una aplicación de Node.js?",
                "¿Qué es el ciclo de vida de un componente en React?",
                "Estoy aprendiendo sobre hilos en programación, ¿qué es un hilo?",
                "¿Cómo puedo hacer un seguimiento de las variables en mi código?",
                "¿Cómo implemento un árbol binario en Python?",
                "¿Cómo soluciono un problema de concurrencia en mi aplicación?",
                "¿Qué es un IDE y cómo me ayuda a programar?",
                "¿Cómo puedo instalar un paquete en Python?",
                "¿Qué son los patrones de diseño en programación?",
                "¿Cómo utilizo el control de versiones con Git?",
                "Tengo problemas con la manipulación de cadenas en Java, ¿me puedes ayudar?",
                "¿Cómo puedo optimizar una consulta SQL?",
                "¿Cómo puedo crear una interfaz gráfica en Java?",
                "¿Qué es una API RESTful y cómo la utilizo?",
                "Estoy confundido con las diferencias entre clases y objetos, ¿puedes explicarlo?",
                "¿Cómo puedo mejorar la seguridad en mi aplicación?",
                "¿Qué significa la palabra clave 'this' en JavaScript?",
                "¿Cómo manejo las solicitudes HTTP en Python?",
                "¿Cómo puedo escribir un script en Bash?",
                "¿Cómo configuro un entorno de desarrollo en Python?",
                "¿Qué es un compilador y cómo funciona?",
                "¿Qué es un contenedor Docker y para qué se usa?",
                "Estoy trabajando con Angular, ¿cómo puedo crear un componente?",
                "¿Cómo implemento autenticación en una aplicación web?"
            ],
            "responses": [
                "Para solucionar un error en tu código, primero revisa el mensaje de error que aparece, ya que suele indicarte la causa. Si no puedes encontrar la solución, intenta buscar en la documentación o en foros como StackOverflow.",
                "Lo primero que te recomendaría es dividir el proyecto en tareas pequeñas y manejables. Luego, trabaja en cada una de ellas por separado antes de unirlas.",
                "Para optimizar tu algoritmo, intenta reducir la complejidad del mismo. Puedes hacerlo buscando una solución que no requiera tantas operaciones. Usar estructuras de datos eficientes también puede ayudar.",
                "Las variables son espacios de almacenamiento que se usan para guardar datos. Asegúrate de asignar un valor inicial a tus variables antes de usarlas en tu código.",
                "En Python, puedes declarar una función utilizando la palabra clave `def`, seguido del nombre de la función y los parámetros entre paréntesis. Por ejemplo: `def mi_funcion():`.",
                "El error podría estar relacionado con una mala sintaxis o con el uso incorrecto de una función. Revisa bien los mensajes de error y asegúrate de que la sintaxis sea la correcta.",
                "Revisa paso a paso tu código para encontrar la línea que está causando el problema. Usa herramientas de depuración o imprime valores de variables para rastrear el flujo del programa.",
                "Para depurar tu código, puedes usar herramientas como el depurador integrado de tu IDE o agregar declaraciones de impresión para ver el valor de las variables en diferentes puntos del código.",
                "Para evitar errores de sintaxis, asegúrate de que todos los paréntesis, llaves y corchetes estén balanceados, y que cada línea termine correctamente (por ejemplo, con un punto y coma en C/C++).",
                "Para mejorar la eficiencia de tu aplicación, considera usar algoritmos más rápidos, evitar operaciones innecesarias y utilizar estructuras de datos más adecuadas.",
                "Un error de tipo puede ocurrir cuando intentas operar sobre datos de tipos incompatibles. Verifica los tipos de las variables involucradas en la operación y realiza conversiones si es necesario.",
                "Para leer un archivo en Python, puedes usar la función `open()` seguida del método `read()`. Ejemplo: `with open('archivo.txt', 'r') as f: contenido = f.read()`.",
                "Las listas y los diccionarios son estructuras de datos muy útiles. Las listas se usan para almacenar elementos ordenados y las claves de un diccionario se usan para acceder a los valores correspondientes.",
                "En C, un puntero es una variable que almacena la dirección de memoria de otro valor. Se utiliza para trabajar con direcciones de memoria y manipular valores de manera indirecta.",
                "En JavaScript, un bucle `for` tiene la siguiente estructura: `for (let i = 0; i < n; i++) { /* código a ejecutar */ }`.",
                "Si tienes problemas con la base de datos, asegúrate de que las conexiones sean correctas, que las consultas sean válidas y que la estructura de la base de datos sea la esperada.",
                "La herencia es un concepto en la programación orientada a objetos donde una clase puede heredar propiedades y métodos de otra. Te ayuda a reutilizar código y a crear relaciones entre clases.",
                "Una variable global es aquella que se define fuera de cualquier función y está disponible en todo el programa. Asegúrate de no modificar variables globales de manera inesperada.",
                "Para conectar tu aplicación con una API, primero asegúrate de que la API tenga un endpoint adecuado. Luego, utiliza métodos como `fetch` en JavaScript o `requests` en Python para hacer solicitudes HTTP.",
                "En Python, puedes manejar excepciones usando bloques `try...except`. Ejemplo: `try: /* código que puede fallar */ except Exception as e: /* manejar el error */`.",
                "En Java, una clase se define con la palabra clave `class`, seguida del nombre de la clase y un bloque de código. Ejemplo: `class MiClase { /* código */ }`.",
                "En C++, los parámetros se pasan a las funciones como valores o por referencia. Para pasarlos por referencia, usa el operador `&` en la declaración de la función.",
                "Para encontrar un error de sintaxis, revisa cuidadosamente la estructura de tu código. Puedes usar un editor de texto con resaltado de sintaxis para ayudarte.",
                "Mejorar el rendimiento de tu código puede incluir el uso de algoritmos más rápidos, la reducción de la complejidad, la optimización de las consultas y el uso de mejores estructuras de datos.",
                "Para hacer una consulta SQL, usa el comando `SELECT` seguido de las columnas que deseas extraer y la tabla de la que quieres obtener los datos. Ejemplo: `SELECT nombre, edad FROM personas;`.",
                "Para mejorar la legibilidad de tu código, usa nombres descriptivos para las variables y funciones, agrega comentarios donde sea necesario y sigue las convenciones de estilo del lenguaje.",
                "Un algoritmo de búsqueda binaria se aplica en listas ordenadas. Se divide la lista en mitades y se compara el valor buscado con el valor medio. Si no coincide, la búsqueda continúa en la mitad correspondiente.",
                "Para compilar y ejecutar un programa en C, usa el comando `gcc` para compilar y luego ejecuta el archivo compilado. Ejemplo: `gcc mi_programa.c -o mi_programa` y luego `./mi_programa`.",
                "Un bucle infinito ocurre cuando la condición de un bucle nunca se vuelve falsa. Asegúrate de que el ciclo tenga una condición de salida válida.",
                "La recursión es cuando una función se llama a sí misma para resolver un problema en partes más pequeñas. Es útil en problemas como la búsqueda en árboles o la resolución de problemas complejos.",
                "Las clases en Java se definen con la palabra clave `class`. Los objetos se crean a partir de estas clases. Puedes agregar métodos y atributos dentro de una clase.",
                "En Node.js, puedes gestionar errores usando bloques `try...catch` o escuchando eventos de error en objetos como flujos de lectura.",
                "El ciclo de vida de un componente en React incluye fases como la inicialización, montaje, actualización y desmontaje. Puedes controlar cada fase usando métodos del ciclo de vida o hooks.",
                "Un hilo es una unidad de ejecución dentro de un proceso. Los hilos permiten ejecutar varias tareas al mismo tiempo. Puedes usar hilos para mejorar el rendimiento en programas concurrentes.",
                "Para hacer un seguimiento de las variables, puedes utilizar herramientas de depuración que te permitan ver los valores de las variables en tiempo real mientras el programa se ejecuta.",
                "Para implementar un árbol binario en Python, puedes crear una clase `Nodo` que contenga un valor y dos referencias a los nodos hijos izquierdo y derecho.",
                "Los problemas de concurrencia ocurren cuando múltiples hilos intentan acceder a los mismos recursos al mismo tiempo. Puedes solucionarlo usando mecanismos de sincronización como semáforos o mutexes.",
                "Un IDE (entorno de desarrollo integrado) es una herramienta que facilita la programación al integrar funciones como la edición de código, la depuración y la compilación.",
                "Para instalar un paquete en Python, puedes usar el gestor de paquetes `pip` desde la terminal. Ejemplo: `pip install nombre_paquete`.",
                "Los patrones de diseño son soluciones reutilizables a problemas comunes en programación. Algunos ejemplos son el patrón Singleton, Factory y Observer.",
                "Git es una herramienta de control de versiones que te permite gestionar cambios en tu código. Usa comandos como `git commit`, `git push` y `git pull` para gestionar tus repositorios.",
                "Para manipular cadenas en Java, puedes usar la clase `String`. Por ejemplo, para concatenar cadenas, usa `+` o el método `concat()`. También puedes usar métodos como `substring()`, `toLowerCase()`, etc."
            ]
        },
        {
            "tag": "operaciones de matemáticas",
            "patterns": [
                "¿Cuánto es 5 más 3?",
                "¿Cuál es el resultado de 12 menos 7?",
                "¿Cuánto es 6 por 8?",
                "¿Cómo se resuelve una división entre 9 y 3?",
                "¿Qué es 15 dividido entre 5?",
                "¿Cuánto es 25 multiplicado por 4?",
                "¿Cómo se calcula la raíz cuadrada de 16?",
                "¿Qué es 100 dividido entre 25?",
                "¿Cuánto es 3 elevado a la 4?",
                "¿Cuál es el valor de 8 más 4 por 2?",
                "¿Qué es 7 por 9?",
                "Si tengo 10 y le sumo 5, ¿cuánto tengo?",
                "¿Cómo se hace una fracción equivalente a 1/2?",
                "¿Qué es 36 dividido por 6?",
                "¿Cuánto es 2 al cubo?",
                "¿Cómo resuelvo una operación de 4 + 5 * 3?",
                "Si tengo 20 y lo divido entre 4, ¿cuánto es?",
                "¿Cómo se realiza una operación con números negativos?",
                "¿Qué es 9 más 3 multiplicado por 2?",
                "¿Cuál es el resultado de 25 menos 5 más 10?",
                "¿Qué es 45 dividido entre 9?",
                "Si tengo 3 y le restas 1, ¿qué obtienes?",
                "¿Cómo calculo el área de un círculo?",
                "¿Cómo hago una operación con exponentes?",
                "¿Qué es 7 más 3 por 5?",
                "¿Cómo se resuelve una ecuación simple de 2x + 3 = 7?",
                "Si tengo 100 y lo divido entre 10, ¿cuál es el resultado?",
                "¿Cómo se suma fracciones con denominadores diferentes?",
                "¿Qué es 18 multiplicado por 2?",
                "¿Cómo se encuentra el valor de X en una ecuación de la forma 3X = 12?",
                "¿Cómo se calcula la media de 10, 20 y 30?",
                "¿Qué es 9 menos 4 más 6?",
                "¿Cómo se simplifica una fracción?",
                "¿Qué es 6 al cuadrado?",
                "¿Cuál es el resultado de 50 dividido entre 10?",
                "¿Cómo se suman números negativos?",
                "¿Cómo resuelvo 5 más 3 por 2?",
                "Si tengo 20 y lo multiplicas por 2, ¿cuánto obtienes?",
                "¿Cómo resuelvo una raíz cuadrada?",
                "¿Qué es 12 más 6 dividido entre 3?",
                "¿Cuál es el valor de 10 menos 7 más 2?",
                "¿Cómo se calcula el perímetro de un rectángulo?",
                "¿Cómo resuelvo una división de fracciones?",
                "¿Qué es 4 por 3 más 2?",
                "¿Cuánto es 50 más 25?",
                "¿Cómo se hace la operación 7 menos 3 por 2?",
                "¿Qué es 100 dividido entre 5?",
                "¿Cómo resuelvo una operación con decimales?",
                "¿Qué es 8 más 12?",
                "Si tengo 30 y le restas 15, ¿cuánto es?",
                "¿Qué es 5 por 5?",
                "¿Cómo resuelvo una ecuación cuadrática?",
                "¿Qué es 30 menos 12?",
                "¿Cómo resuelvo una operación con paréntesis?",
                "¿Cuánto es 3 al cuadrado?",
                "¿Qué es 50 menos 20?"
            ],
            "responses": [
                "5 más 3 es igual a 8.",
                "12 menos 7 es igual a 5.",
                "6 por 8 es igual a 48.",
                "9 dividido entre 3 es igual a 3.",
                "100 dividido entre 25 es igual a 4.",
                "25 multiplicado por 4 es igual a 100.",
                "La raíz cuadrada de 16 es 4.",
                "100 dividido entre 25 es igual a 4.",
                "2 elevado a la 4 es igual a 16.",
                "8 más 4 por 2 es igual a 16.",
                "7 por 9 es igual a 63.",
                "10 más 5 es igual a 15.",
                "Una fracción equivalente a 1/2 puede ser 2/4 o 3/6.",
                "36 dividido entre 6 es igual a 6.",
                "2 al cubo es igual a 8.",
                "4 + 5 * 3 se resuelve como 4 + 15, lo que da 19.",
                "20 dividido entre 4 es igual a 5.",
                "Las operaciones con números negativos siguen las mismas reglas de suma, resta, multiplicación y división.",
                "9 más 3 multiplicado por 2 es igual a 15.",
                "25 menos 5 más 10 es igual a 30.",
                "45 dividido entre 9 es igual a 5.",
                "3 menos 1 es igual a 2.",
                "El área de un círculo se calcula como pi por el radio al cuadrado.",
                "Las operaciones con exponentes implican multiplicar el número por sí mismo varias veces, dependiendo del exponente.",
                "7 más 3 por 5 es igual a 22.",
                "Para resolver 2x + 3 = 7, primero restamos 3 de ambos lados y luego dividimos entre 2. x = 2.",
                "100 dividido entre 10 es igual a 10.",
                "Para sumar fracciones con denominadores diferentes, debes hacer que los denominadores sean iguales antes de sumarlas.",
                "18 multiplicado por 2 es igual a 36.",
                "Para encontrar el valor de X en 3X = 12, divides ambos lados entre 3, lo que da X = 4.",
                "La media de 10, 20 y 30 es (10 + 20 + 30) / 3 = 20.",
                "9 menos 4 más 6 es igual a 11.",
                "Para simplificar una fracción, divides el numerador y el denominador por su mayor divisor común.",
                "6 al cuadrado es igual a 36.",
                "50 dividido entre 10 es igual a 5.",
                "Para sumar números negativos, sumas los valores absolutos y el signo será el mismo que el de los números con mayor valor absoluto.",
                "5 más 3 por 2 es igual a 11.",
                "20 multiplicado por 2 es igual a 40.",
                "Para resolver una raíz cuadrada, buscas el número que, multiplicado por sí mismo, te da el valor original.",
                "12 más 6 dividido entre 3 es igual a 14.",
                "10 menos 7 más 2 es igual a 5.",
                "El perímetro de un rectángulo se calcula como 2 por (largo + ancho).",
                "Para dividir fracciones, multiplicas la primera fracción por el inverso de la segunda.",
                "4 por 3 más 2 es igual a 14.",
                "50 más 25 es igual a 75.",
                "7 menos 3 por 2 es igual a 1.",
                "100 dividido entre 5 es igual a 20.",
                "Para resolver operaciones con decimales, sigues las mismas reglas de suma, resta, multiplicación y división, alineando los decimales correctamente.",
                "8 más 12 es igual a 20.",
                "30 menos 15 es igual a 15.",
                "5 por 5 es igual a 25.",
                "Para resolver una ecuación cuadrática, puedes usar la fórmula cuadrática o factorizar la ecuación.",
                "30 menos 12 es igual a 18.",
                "Para resolver una operación con paréntesis, primero debes hacer los cálculos dentro de los paréntesis.",
                "3 al cuadrado es igual a 9.",
                "50 menos 20 es igual a 30."
            ]
        },
        {
            "tag": "data_query",
            "patterns": [
                "¿Cómo puedo consultar todos los datos de una tabla en SQL?",
                "¿Cómo obtengo los datos de un archivo JSON?",
                "¿Cómo hago una consulta SQL para filtrar registros?",
                "¿Cómo puedo ordenar los resultados de una base de datos SQL?",
                "¿Cómo agrupo datos en una consulta SQL?",
                "¿Cómo se consulta un archivo CSV en Python?",
                "¿Qué comando utilizo para obtener solo ciertas columnas en una base de datos?",
                "¿Cómo obtengo datos de una base de datos que estén dentro de un rango de fechas?",
                "¿Cómo hago una consulta en MongoDB para filtrar por valor?",
                "¿Cómo puedo extraer información específica de un JSON?",
                "¿Cómo hago una consulta con JOIN en SQL?",
                "¿Cómo uso la función COUNT en una consulta SQL?",
                "¿Cómo filtraría registros en una base de datos SQL por una columna de texto?",
                "¿Qué es un índice en una base de datos y cómo mejora las consultas?",
                "¿Cómo actualizo los datos de una tabla con una consulta SQL?",
                "¿Cómo elimino registros de una base de datos?",
                "¿Cómo se consulta información de una API estructurada en JSON?",
                "¿Cómo agrupar registros en una base de datos según una fecha?",
                "¿Cómo hacer una consulta en SQL con múltiples condiciones?",
                "¿Cómo hago una consulta en SQL que se limite a los primeros 10 registros?",
                "¿Cómo se filtran registros por un valor numérico en SQL?",
                "¿Qué tipo de índices existen en bases de datos y cuándo se usan?",
                "¿Cómo obtengo todos los registros de una tabla ordenados por fecha?",
                "¿Cómo puedo consultar datos en una base de datos sin repetir resultados?",
                "¿Cómo se usa el operador LIKE en una consulta SQL?",
                "¿Cómo hago una consulta con condiciones OR en SQL?",
                "¿Cómo consulto los datos más recientes de una base de datos?",
                "¿Cómo puedo realizar una consulta SQL con parámetros dinámicos?",
                "¿Cómo puedo consultar datos de múltiples tablas en SQL?",
                "¿Cómo hacer un filtro de registros con fechas específicas en SQL?",
                "¿Cómo selecciono un registro específico en un archivo CSV?",
                "¿Cómo puedo consultar los valores más altos de una columna en SQL?",
                "¿Cómo se realiza una consulta SQL con una condición IN?",
                "¿Cómo puedo combinar múltiples condiciones en una consulta SQL?",
                "¿Qué es un JOIN en SQL y cómo se usa?",
                "¿Cómo filtro los resultados de una consulta SQL por estado?",
                "¿Cómo consulto todos los datos de una tabla y los ordeno por una columna?",
                "¿Cómo puedo realizar una consulta SQL para mostrar datos únicos?",
                "¿Qué es una consulta agregada en SQL?",
                "¿Cómo actualizo un campo específico de una base de datos?",
                "¿Cómo elimino una tabla en SQL?",
                "¿Cómo calculo el promedio de una columna con SQL?",
                "¿Cómo hago una consulta SQL para filtrar datos por valor nulo?",
                "¿Cómo puedo hacer una consulta en una base de datos MongoDB?",
                "¿Cómo convierto un archivo JSON a una tabla en SQL?",
                "¿Cómo puedo consultar datos en una tabla de SQL sin importar mayúsculas?",
                "¿Cómo realizo una consulta para ver los registros con un valor mayor a X?",
                "¿Cómo hago una consulta SQL con varias condiciones de fecha?",
                "¿Cómo puedo filtrar datos de una API JSON en Python?",
                "¿Cómo puedo realizar un INNER JOIN entre dos tablas?",
                "¿Cómo uso la función SUM en una consulta SQL?",
                "¿Cómo calculo la diferencia de fechas en SQL?"
            ],
            "responses": [
                "Para consultar todos los datos de una tabla en SQL, puedes usar el comando: `SELECT * FROM nombre_tabla;`.",
                "Para obtener los datos de un archivo JSON, puedes usar un lector JSON como `json.loads()` en Python.",
                "Para filtrar registros en SQL, usa el comando `SELECT * FROM nombre_tabla WHERE columna = 'valor';`.",
                "Para ordenar los resultados en SQL, utiliza `SELECT * FROM nombre_tabla ORDER BY columna ASC|DESC;`.",
                "Para agrupar datos en SQL, usa la cláusula `GROUP BY`. Ejemplo: `SELECT columna, COUNT(*) FROM nombre_tabla GROUP BY columna;`.",
                "Para consultar un archivo CSV en Python, puedes usar la biblioteca `pandas`, con `pd.read_csv('archivo.csv')`.",
                "Para obtener solo ciertas columnas en SQL, usa `SELECT columna1, columna2 FROM nombre_tabla;`.",
                "Para obtener datos en un rango de fechas en SQL, utiliza `SELECT * FROM nombre_tabla WHERE fecha BETWEEN 'fecha_inicial' AND 'fecha_final';`.",
                "Para filtrar por valor en MongoDB, puedes usar la función `find()` como `db.coleccion.find({ 'campo': 'valor' })`.",
                "Para extraer información de un JSON, puedes usar `json.loads()` en Python para convertir el JSON en un diccionario.",
                "Para hacer un JOIN en SQL, puedes usar el siguiente formato: `SELECT * FROM tabla1 INNER JOIN tabla2 ON tabla1.id = tabla2.id;`.",
                "Para contar registros en SQL, usa `SELECT COUNT(*) FROM nombre_tabla;`.",
                "Para filtrar registros por texto en SQL, puedes usar `SELECT * FROM nombre_tabla WHERE columna LIKE '%valor%';`.",
                "Los índices en bases de datos mejoran el rendimiento de las consultas. Pueden ser índices en columnas de búsqueda o de ordenación.",
                "Para actualizar datos en SQL, usa el comando `UPDATE nombre_tabla SET columna = 'nuevo_valor' WHERE columna = 'valor_existente';`.",
                "Para eliminar registros en SQL, usa `DELETE FROM nombre_tabla WHERE condición;`.",
                "Para consultar datos de una API estructurada en JSON, puedes usar bibliotecas como `requests` en Python para hacer solicitudes HTTP.",
                "Para agrupar registros por fecha, puedes usar `SELECT fecha, COUNT(*) FROM nombre_tabla GROUP BY fecha;`.",
                "Para hacer una consulta con múltiples condiciones en SQL, puedes usar `SELECT * FROM nombre_tabla WHERE condición1 AND condición2;`.",
                "Para limitar los resultados a los primeros 10 registros, usa `SELECT * FROM nombre_tabla LIMIT 10;`.",
                "Para filtrar registros numéricos en SQL, puedes usar `SELECT * FROM nombre_tabla WHERE columna > valor;`.",
                "Existen varios tipos de índices en bases de datos, como índices simples, compuestos, y de texto completo. Se usan dependiendo de las consultas.",
                "Para obtener registros ordenados por fecha, usa `SELECT * FROM nombre_tabla ORDER BY fecha DESC;`.",
                "Para evitar resultados duplicados, puedes usar `SELECT DISTINCT columna FROM nombre_tabla;`.",
                "El operador `LIKE` en SQL se usa para buscar patrones en datos de texto, como `SELECT * FROM nombre_tabla WHERE columna LIKE '%valor%';`.",
                "Para usar múltiples condiciones OR en SQL, puedes escribir `SELECT * FROM nombre_tabla WHERE condición1 OR condición2;`.",
                "Para consultar los datos más recientes, puedes ordenar por fecha con `ORDER BY fecha DESC`.",
                "Para realizar consultas SQL con parámetros dinámicos, utiliza placeholders como `?` o variables según el lenguaje.",
                "Para consultar datos de varias tablas, puedes usar `JOIN` o subconsultas. Ejemplo: `SELECT * FROM tabla1 INNER JOIN tabla2 ON tabla1.id = tabla2.id;`.",
                "Para hacer filtros por fechas específicas, usa `WHERE fecha BETWEEN 'fecha_inicial' AND 'fecha_final'`.",
                "Para seleccionar un registro en un archivo CSV, puedes usar `pandas` para leer el archivo y aplicar filtros como `df[df['columna'] == 'valor']`.",
                "Para obtener los valores más altos de una columna en SQL, usa `SELECT MAX(columna) FROM nombre_tabla;`.",
                "Para usar el operador `IN` en SQL, escribe `SELECT * FROM nombre_tabla WHERE columna IN ('valor1', 'valor2');`.",
                "Para combinar múltiples condiciones en SQL, usa operadores lógicos como `AND`, `OR`, y `NOT`.",
                "Un `JOIN` en SQL se usa para combinar filas de dos o más tablas basadas en una columna común.",
                "Para filtrar por estado en SQL, puedes usar `SELECT * FROM nombre_tabla WHERE estado = 'valor';`.",
                "Para ordenar los datos por una columna, usa `ORDER BY columna ASC|DESC`.",
                "Para realizar una consulta sin repetir resultados, utiliza `SELECT DISTINCT columna FROM nombre_tabla;`.",
                "Una consulta agregada en SQL se usa para realizar operaciones de agregación, como `COUNT()`, `SUM()`, `AVG()`, etc.",
                "Para actualizar un campo específico en una base de datos, usa `UPDATE nombre_tabla SET columna = 'nuevo_valor' WHERE condición;`.",
                "Para eliminar una tabla, usa `DROP TABLE nombre_tabla;`.",
                "Para calcular el promedio de una columna, usa `SELECT AVG(columna) FROM nombre_tabla;`.",
                "Para filtrar por valores nulos, usa `SELECT * FROM nombre_tabla WHERE columna IS NULL;`.",
                "Para hacer una consulta en MongoDB, puedes usar `db.colección.find()` para obtener documentos.",
                "Para convertir un archivo JSON a una tabla en SQL, primero debes cargar el JSON y luego insertar los datos en una tabla SQL.",
                "Para hacer una consulta sin importar mayúsculas en SQL, puedes usar `LOWER(columna) = 'valor'`.",
                "Para filtrar registros mayores a un valor, usa `SELECT * FROM nombre_tabla WHERE columna > valor;`.",
                "Para filtrar por varias condiciones de fecha, puedes usar `WHERE fecha BETWEEN 'fecha_inicial' AND 'fecha_final' AND otra_condición;`.",
                "Para filtrar datos de una API JSON en Python, puedes usar `requests.get()` para obtener los datos y luego aplicar filtros.",
                "Para realizar un `INNER JOIN` entre dos tablas, usa `SELECT * FROM tabla1 INNER JOIN tabla2 ON tabla1.id = tabla2.id;`.",
                "Para usar la función `SUM()` en SQL, escribe `SELECT SUM(columna) FROM nombre_tabla;`.",
                "Para calcular la diferencia de fechas en SQL, puedes restar las columnas de fecha como `SELECT DATEDIFF(fecha1, fecha2) FROM nombre_tabla;`."
            ]
        },
        {
            "tag": "set_preferences",
            "patterns": [
                "¿Cómo ajusto las configuraciones de mi cuenta?",
                "¿Cómo cambio la configuración de notificaciones?",
                "Quiero modificar mis preferencias de privacidad.",
                "¿Puedo cambiar el idioma de la aplicación?",
                "Necesito ajustar la configuración de mi perfil.",
                "¿Cómo personalizo las alertas en la app?",
                "¿Cómo configuro las preferencias de notificación?",
                "Quiero cambiar el tema de la interfaz.",
                "¿Cómo actualizar las preferencias de seguridad?",
                "¿Cómo ajustar los parámetros de la cuenta?",
                "¿Dónde cambio mi configuración de privacidad?",
                "¿Puedo seleccionar qué datos quiero compartir?",
                "¿Cómo puedo cambiar la frecuencia de las notificaciones?",
                "Quiero establecer mis preferencias de contenido.",
                "¿Cómo personalizo los ajustes de notificación?",
                "¿Cómo ajusto las preferencias de privacidad de mi cuenta?",
                "¿Dónde configuro la visibilidad de mi perfil?",
                "Quiero cambiar las opciones de idioma.",
                "¿Cómo configuro las notificaciones push?",
                "¿Cómo modifico la frecuencia de actualizaciones?",
                "Quiero cambiar mis preferencias de red social.",
                "¿Cómo personalizo la visualización de los resultados?",
                "Quiero activar o desactivar las notificaciones por correo.",
                "¿Cómo ajusto el nivel de privacidad de mi cuenta?",
                "¿Puedo elegir qué contenido quiero ver?",
                "Quiero cambiar la forma en que recibo alertas.",
                "¿Cómo ajusto mis preferencias para los temas de la aplicación?",
                "¿Dónde configuro las alertas de la aplicación?",
                "Quiero seleccionar mis preferencias de notificación.",
                "¿Cómo modifico las configuraciones de alertas en la app?",
                "¿Puedo cambiar la configuración de mi cuenta en la web?",
                "¿Cómo ajusto las preferencias de contenido recomendado?",
                "Quiero configurar las opciones de seguridad de mi cuenta.",
                "¿Cómo cambio la visualización de la aplicación?",
                "¿Cómo personalizo la manera en que recibo correos electrónicos?",
                "Quiero ajustar mis preferencias de búsqueda.",
                "¿Cómo cambio los ajustes de privacidad en mi perfil?",
                "¿Dónde configuro las preferencias de red social?",
                "Quiero cambiar la forma en que recibo mensajes.",
                "¿Cómo configuro mis alertas para la cuenta?",
                "¿Puedo personalizar las notificaciones para cada aplicación?",
                "¿Cómo configuro las opciones de protección de datos?",
                "Quiero modificar mis ajustes de contenido en mi perfil.",
                "¿Dónde están mis opciones de personalización de perfil?",
                "¿Cómo ajusto la configuración de mis mensajes privados?",
                "¿Cómo cambio las preferencias de mi cuenta personal?",
                "¿Dónde configuro las preferencias de visualización?",
                "Quiero ajustar las configuraciones de mis notificaciones móviles."
            ],
            "responses": [
                "Puedes ajustar las configuraciones de tu cuenta accediendo al menú de configuración dentro de tu perfil.",
                "Para cambiar la configuración de notificaciones, ve a la sección de notificaciones en la configuración de tu cuenta.",
                "Puedes modificar la configuración de privacidad en la sección de privacidad de tu perfil o cuenta.",
                "Sí, puedes cambiar el idioma de la aplicación desde la sección de ajustes en el menú de configuración.",
                "Para personalizar tu perfil, dirígete a la sección de ajustes del perfil y allí podrás modificar tus preferencias.",
                "Para ajustar las alertas de la app, ve a la sección de notificaciones en el menú de configuraciones.",
                "Para configurar las preferencias de notificación, abre la opción de notificaciones en la configuración de tu cuenta.",
                "Puedes cambiar el tema de la interfaz en el menú de configuración, generalmente bajo la opción 'Apariencia'.",
                "Puedes actualizar tus preferencias de seguridad desde la sección de seguridad en los ajustes de tu cuenta.",
                "Las preferencias de tu cuenta se pueden ajustar desde la configuración de cuenta o perfil.",
                "Para modificar la configuración de privacidad, dirígete a la sección de privacidad en la configuración.",
                "Sí, puedes seleccionar qué datos compartir desde las opciones de privacidad en tu perfil.",
                "Para cambiar la frecuencia de las notificaciones, ve a la configuración de notificaciones y ajusta la opción de frecuencia.",
                "Las preferencias de contenido se pueden ajustar desde la sección de personalización de contenido en tu cuenta.",
                "Puedes personalizar los ajustes de notificación en la sección de notificaciones dentro del menú de configuración.",
                "Puedes ajustar tus preferencias de privacidad desde la opción de privacidad en los ajustes de tu cuenta.",
                "La visibilidad de tu perfil se puede configurar desde la sección de privacidad en tu perfil.",
                "Para cambiar el idioma, puedes hacerlo desde la opción de idioma en los ajustes de la aplicación.",
                "Puedes configurar las notificaciones push desde la sección de notificaciones en tu configuración.",
                "La frecuencia de actualizaciones se puede ajustar desde el menú de configuración, en la sección de actualizaciones o notificaciones.",
                "Puedes cambiar las preferencias de red social en la sección de conexiones sociales en los ajustes de tu cuenta.",
                "Puedes personalizar los resultados de la aplicación desde la configuración de personalización de resultados o contenido.",
                "Puedes activar o desactivar las notificaciones por correo en la configuración de notificaciones.",
                "La configuración de privacidad de tu cuenta puede ajustarse en la sección de privacidad dentro de los ajustes de tu perfil.",
                "Sí, puedes elegir qué contenido deseas ver desde las opciones de personalización en tu cuenta.",
                "Puedes cambiar la forma en que recibes alertas desde la configuración de notificaciones en tu perfil.",
                "Para ajustar los temas de la aplicación, dirígete a la sección de apariencia dentro de los ajustes.",
                "Las alertas de la aplicación se pueden configurar en la sección de notificaciones de tu cuenta.",
                "Puedes seleccionar tus preferencias de notificación en la sección de configuración de notificaciones.",
                "Las configuraciones de alertas en la app se pueden modificar desde el menú de notificaciones en los ajustes.",
                "Sí, puedes cambiar la configuración de tu cuenta desde la web en la sección de configuración.",
                "Para ajustar las preferencias de contenido recomendado, visita la opción de personalización de contenido en tu cuenta.",
                "Puedes configurar las opciones de seguridad de tu cuenta desde la sección de seguridad en los ajustes.",
                "Para cambiar la visualización de la aplicación, accede a la opción de apariencia en los ajustes.",
                "Puedes personalizar la forma en que recibes correos electrónicos desde la configuración de notificaciones por correo.",
                "Puedes ajustar tus preferencias de búsqueda desde la sección de búsqueda en la configuración.",
                "La configuración de privacidad en tu perfil se puede ajustar en el menú de privacidad.",
                "Puedes cambiar las preferencias de red social desde la sección de configuraciones sociales en tu cuenta.",
                "Para cambiar la forma en que recibes mensajes, ve a la configuración de mensajes en tu cuenta.",
                "Las alertas para tu cuenta se pueden configurar en la sección de notificaciones dentro de los ajustes.",
                "Sí, puedes personalizar las notificaciones para cada aplicación desde la configuración de notificaciones.",
                "Puedes configurar las opciones de protección de datos desde la sección de privacidad o seguridad en los ajustes.",
                "Para modificar los ajustes de contenido en tu perfil, ve a la sección de personalización de contenido en tu cuenta.",
                "Las opciones de personalización de perfil se encuentran en los ajustes del perfil.",
                "La configuración de tus mensajes privados se puede ajustar desde la opción de mensajes en la configuración.",
                "Puedes cambiar las preferencias de tu cuenta personal desde el menú de configuración.",
                "La configuración de visualización se puede ajustar en la sección de apariencia dentro de los ajustes.",
                "Puedes ajustar las configuraciones de notificaciones móviles en la sección de notificaciones en la configuración."
            ]
        },
        {
            "tag": "profile_info",
            "patterns": [
                "¿Cuál es mi nombre?",
                "¿Qué información tengo registrada?",
                "¿Puedo ver mis detalles de cuenta?",
                "¿Qué datos tengo en mi perfil?",
                "¿Cómo puedo ver mi información personal?",
                "¿Qué datos tengo en mi perfil de usuario?",
                "¿Cuál es mi dirección de correo electrónico registrada?",
                "¿Cómo actualizo mi información en el perfil?",
                "¿Puedo cambiar mi nombre de usuario?",
                "¿Cómo puedo modificar mis datos personales?",
                "¿Qué información está vinculada a mi cuenta?",
                "¿Cómo ver mi historial de compras?",
                "¿Puedo ver mis detalles de pago?",
                "¿Cuáles son mis preferencias guardadas?",
                "¿Dónde puedo encontrar mi número de teléfono registrado?",
                "¿Cómo veo mis ajustes de privacidad?",
                "¿Puedo actualizar mi foto de perfil?",
                "¿Dónde puedo ver mis dispositivos conectados?",
                "¿Qué opciones tengo para cambiar mi contraseña?",
                "¿Cuáles son las configuraciones de mi cuenta?",
                "¿Cómo puedo ver mi historial de actividades?",
                "¿Puedo ver la actividad reciente en mi cuenta?",
                "¿Cómo actualizo mi dirección de correo electrónico?",
                "¿Puedo cambiar mi dirección de envío?",
                "¿Cómo accedo a mi historial de transacciones?",
                "¿Dónde puedo ver mis preferencias de notificación?",
                "¿Puedo eliminar mi cuenta?",
                "¿Cuándo fue la última vez que actualicé mi perfil?",
                "¿Qué datos tengo vinculados con mis redes sociales?",
                "¿Cómo puedo revisar mi configuración de seguridad?",
                "¿Puedo actualizar mi número de teléfono en mi cuenta?",
                "¿Dónde puedo ver mis dispositivos conectados?",
                "¿Cómo cambio mi foto de perfil?",
                "¿Puedo ver mis suscripciones activas?",
                "¿Dónde están mis datos bancarios registrados?",
                "¿Cómo puedo revisar mis datos de pago?",
                "¿Puedo ver mi historial de compras anteriores?",
                "¿Cómo cambio mi contraseña?",
                "¿Dónde puedo ver mis aplicaciones vinculadas?",
                "¿Cuáles son mis ajustes de privacidad?",
                "¿Puedo cambiar mi dirección de correo electrónico?",
                "¿Cómo puedo cambiar mis preferencias de idioma?",
                "¿Puedo ver mis detalles de pago y facturación?",
                "¿Cómo veo mis registros de actividad en mi cuenta?",
                "¿Puedo actualizar mi dirección de residencia?"
            ],
            "responses": [
                "Tu nombre registrado es Bootcito.",
                "Puedes ver la información registrada en tu perfil desde la sección de configuración o perfil.",
                "Sí, puedes ver tus detalles de cuenta accediendo a tu perfil y seleccionando la opción de información personal.",
                "Tu perfil contiene tu nombre, dirección de correo electrónico y otros detalles personales.",
                "Para ver tu información personal, dirígete a la sección de perfil o ajustes de cuenta.",
                "En tu perfil encontrarás datos como tu nombre, correo electrónico y preferencias guardadas.",
                "Tu dirección de correo electrónico registrada es [correo@dominio.com].",
                "Puedes actualizar tu información accediendo a la sección de ajustes de perfil.",
                "Sí, puedes cambiar tu nombre de usuario desde los ajustes de tu cuenta.",
                "Tu información personal se puede modificar desde la sección de datos personales en tu perfil.",
                "Tu cuenta contiene datos como tu nombre, dirección de correo electrónico y tus preferencias de notificación.",
                "Para ver tu historial de compras, dirígete a la sección de historial de pedidos o compras en tu cuenta.",
                "Sí, puedes ver tus detalles de pago en la sección de pago o facturación de tu perfil.",
                "Tus preferencias guardadas se encuentran en la sección de configuraciones personalizadas.",
                "Tu número de teléfono registrado está disponible en la sección de información personal de tu perfil.",
                "Puedes revisar tus ajustes de privacidad desde la opción de privacidad en tu cuenta.",
                "Puedes cambiar tu foto de perfil desde la sección de perfil en los ajustes de tu cuenta.",
                "Tus dispositivos conectados se encuentran en la sección de seguridad o dispositivos de tu perfil.",
                "Puedes cambiar tu contraseña desde la sección de seguridad en los ajustes de tu cuenta.",
                "Puedes ver las configuraciones de tu cuenta en la sección de 'Configuración' de tu perfil.",
                "Tu historial de actividades está disponible en la sección de actividades o historial dentro de tu cuenta.",
                "Sí, puedes ver tu actividad reciente en la sección de actividades de tu cuenta.",
                "Puedes actualizar tu dirección de correo electrónico en los ajustes de tu cuenta, en la sección de correo.",
                "Puedes cambiar tu dirección de envío desde la opción de direcciones en la configuración de tu cuenta.",
                "Tu historial de transacciones está disponible en la sección de pagos o historial financiero de tu cuenta.",
                "Tus preferencias de notificación se encuentran en la sección de notificaciones en los ajustes de tu perfil.",
                "Sí, puedes eliminar tu cuenta desde la opción de configuración o privacidad en tu perfil.",
                "Puedes revisar la fecha de la última actualización en tu perfil, generalmente en la sección de ajustes.",
                "Los datos vinculados con tus redes sociales están disponibles en la sección de cuentas conectadas.",
                "Tu configuración de seguridad se puede revisar y modificar en la sección de seguridad de tu perfil.",
                "Puedes actualizar tu número de teléfono en la sección de contacto en los ajustes de tu cuenta.",
                "Tus dispositivos conectados a tu cuenta se pueden ver en la sección de dispositivos en tu perfil.",
                "Puedes cambiar tu foto de perfil accediendo a la sección de perfil en los ajustes.",
                "Tus suscripciones activas están disponibles en la sección de suscripciones o servicios en tu cuenta.",
                "Tu información bancaria está disponible en la sección de pago o facturación de tu perfil.",
                "Puedes revisar tus datos de pago desde la sección de pagos o facturación en tu perfil.",
                "Tu historial de compras anteriores está disponible en la sección de historial de compras o pedidos.",
                "Puedes cambiar tu contraseña desde la opción de seguridad en los ajustes de tu cuenta.",
                "Las aplicaciones vinculadas se pueden ver en la sección de aplicaciones o servicios conectados en tu perfil.",
                "Tus ajustes de privacidad están disponibles en la sección de privacidad en los ajustes de tu cuenta.",
                "Puedes cambiar tu dirección de correo electrónico desde los ajustes de perfil en tu cuenta.",
                "Puedes cambiar tus preferencias de idioma desde la opción de idioma en los ajustes de tu cuenta.",
                "Tus detalles de pago y facturación se encuentran en la sección de pagos o facturación de tu perfil.",
                "Tu registro de actividad en tu cuenta está disponible en la sección de actividad o historial.",
                "Tu dirección de residencia se puede actualizar en la sección de direcciones de tu cuenta."
            ]
        },
        {
            "tag": "privacy",
            "patterns": [
                "¿Cuál es la política de privacidad?",
                "¿Cómo manejan mis datos personales?",
                "¿Qué información recopilan de mí?",
                "¿Comparten mis datos con terceros?",
                "¿Cómo protegen mi información personal?",
                "¿Qué hacen con mis datos después de que los recopilan?",
                "¿Cómo puedo eliminar mis datos de su sistema?",
                "¿Cuánto tiempo conservan mis datos?",
                "¿Puedo acceder a los datos que tienen sobre mí?",
                "¿Cómo actualizan su política de privacidad?",
                "¿Mis datos están seguros?",
                "¿Qué hago si quiero cambiar la configuración de privacidad?",
                "¿Puedo optar por no compartir ciertos datos?",
                "¿Cómo me notifican sobre cambios en la política de privacidad?",
                "¿Cuáles son sus prácticas de privacidad?",
                "¿Puedo solicitar la eliminación de mi información personal?",
                "¿Cómo me protegen de filtraciones de datos?",
                "¿Recopilan datos de menores de edad?",
                "¿Mi información se comparte con anunciantes?",
                "¿Cómo gestionan las cookies en su sitio web?",
                "¿Qué debo hacer si sospecho que mis datos han sido comprometidos?",
                "¿Cómo utilizan mis datos para fines publicitarios?",
                "¿Cuáles son mis derechos en relación con mi información personal?",
                "¿Cómo puedo controlar qué datos comparto?",
                "¿Qué sucede si elimino mi cuenta?",
                "¿Cómo manejan la información de pago?",
                "¿Puedo ver qué datos tienen sobre mí?",
                "¿Cómo garantizan que mis datos no se filtren?",
                "¿Qué hacer si quiero presentar una queja sobre la privacidad?",
                "¿Cómo puedo ponerme en contacto con ustedes para cuestiones de privacidad?",
                "¿Dónde puedo encontrar su política de privacidad?",
                "¿Recopilan información de mis dispositivos?",
                "¿Mis datos se almacenan en un servidor seguro?",
                "¿Quién tiene acceso a mi información personal?",
                "¿Cómo gestionan las transferencias internacionales de datos?",
                "¿Qué tipo de información recogen cuando me suscribo a un servicio?",
                "¿Cuáles son las medidas de seguridad que toman para proteger mis datos?",
                "¿Qué información guardan de mis interacciones con su servicio?",
                "¿Puedo eliminar mi cuenta y todos mis datos de su sistema?",
                "¿Cuáles son los fines para los que utilizan mis datos?",
                "¿Tienen algún mecanismo para proteger mi información financiera?",
                "¿Puedo pedir que mis datos no sean compartidos con socios comerciales?",
                "¿Qué sucede si no estoy de acuerdo con su política de privacidad?",
                "¿Puedo optar por no recibir comunicaciones de marketing?",
                "¿Sus políticas de privacidad son aplicables a otras plataformas?"
            ],
            "responses": [
                "Nuestra política de privacidad detalla cómo recopilamos, usamos y protegemos tus datos. Puedes leerla completa en la sección de privacidad de nuestro sitio web.",
                "Recopilamos datos personales para mejorar tu experiencia y ofrecer servicios personalizados. Consulta nuestra política de privacidad para más detalles.",
                "Recopilamos información básica como nombre, correo electrónico y datos de uso, según lo explicado en nuestra política de privacidad.",
                "No compartimos tus datos con terceros sin tu consentimiento, salvo en los casos especificados en nuestra política de privacidad.",
                "Tomamos medidas de seguridad razonables para proteger tu información personal de accesos no autorizados, según lo detallado en nuestra política de privacidad.",
                "Una vez recopilados, tus datos se utilizan para los fines indicados en nuestra política de privacidad y no se conservan más allá de lo necesario.",
                "Puedes eliminar tus datos poniéndote en contacto con nosotros o solicitándolo a través de la sección de privacidad en tu cuenta.",
                "Conservamos tus datos durante el tiempo necesario para cumplir con los fines establecidos en nuestra política de privacidad.",
                "Tienes derecho a acceder a los datos que tenemos sobre ti. Puedes solicitarlo desde la sección de privacidad en tu cuenta.",
                "Nuestra política de privacidad se actualiza periódicamente. Te notificaremos cualquier cambio significativo a través de los canales de contacto proporcionados.",
                "Sí, tomamos medidas de seguridad avanzadas para proteger tu información. Consulta nuestra política de privacidad para más detalles sobre la protección de datos.",
                "Puedes gestionar tu configuración de privacidad en la sección correspondiente dentro de tu cuenta.",
                "Sí, puedes optar por no compartir ciertos datos ajustando tus preferencias en la configuración de privacidad de tu cuenta.",
                "Te notificamos sobre cambios en nuestra política de privacidad por correo electrónico o a través de notificaciones en la plataforma.",
                "Nuestras prácticas de privacidad incluyen la recopilación mínima de datos necesarios para ofrecerte un servicio de calidad.",
                "Puedes solicitar la eliminación de tu información personal poniéndote en contacto con nosotros o siguiendo los pasos en nuestra sección de privacidad.",
                "Implementamos medidas de seguridad avanzadas para proteger tus datos de filtraciones. Más detalles en nuestra política de privacidad.",
                "No recopilamos datos de menores de edad sin el consentimiento de los padres o tutores. Consulta nuestra política de privacidad para más detalles.",
                "No compartimos tus datos con anunciantes, salvo que se indique explícitamente en nuestra política de privacidad.",
                "Nuestra política de cookies describe cómo usamos las cookies y cómo puedes gestionarlas desde tu navegador.",
                "Si sospechas que tus datos han sido comprometidos, por favor contacta con nuestro equipo de soporte inmediatamente.",
                "Utilizamos tus datos para personalizar tu experiencia y ofrecerte publicidad relevante, pero siempre respetando tu privacidad.",
                "Tienes derecho a acceder, corregir o eliminar la información personal que tenemos sobre ti. Consulta nuestra política para más detalles.",
                "Puedes controlar qué datos compartes con nosotros ajustando la configuración de privacidad en tu cuenta.",
                "Si eliminas tu cuenta, se eliminarán tus datos personales, salvo aquellos que debamos conservar por motivos legales.",
                "Manejamos la información de pago de forma segura y conforme a las normativas de privacidad y seguridad.",
                "Puedes ver los datos que tenemos sobre ti accediendo a tu perfil o solicitándolo a través de los canales de soporte.",
                "Tomamos medidas de seguridad para garantizar que tus datos estén protegidos, incluyendo el cifrado y el almacenamiento seguro.",
                "Solo los empleados autorizados y los proveedores de servicios necesarios tienen acceso a tu información personal.",
                "Garantizamos que las transferencias internacionales de datos se realizan de acuerdo con las leyes de protección de datos aplicables.",
                "Recopilamos información de contacto, preferencias y otros detalles necesarios para procesar tu suscripción o servicio.",
                "Utilizamos medidas de seguridad como el cifrado para proteger tus datos y evitar accesos no autorizados.",
                "Recopilamos información de tu uso de nuestros servicios para ofrecerte una experiencia personalizada y mejorar nuestros productos.",
                "Puedes eliminar tu cuenta y todos tus datos poniéndote en contacto con nosotros o utilizando la opción disponible en la configuración.",
                "Tus datos se utilizan para ofrecerte un servicio personalizado, procesar pagos, enviarte comunicaciones y otros fines relacionados.",
                "Implementamos medidas de seguridad adicionales para proteger tu información financiera, como la encriptación y el almacenamiento seguro.",
                "Tienes derecho a pedir que tus datos no sean compartidos con socios comerciales. Consulta nuestra política de privacidad para más detalles.",
                "Si no estás de acuerdo con nuestra política de privacidad, puedes optar por dejar de usar nuestros servicios.",
                "Puedes optar por no recibir comunicaciones de marketing ajustando tus preferencias de notificación en la configuración de tu cuenta.",
                "Nuestra política de privacidad se aplica solo a nuestros servicios, pero te recomendamos leer las políticas de privacidad de las plataformas vinculadas."
            ]
        },
        {
            "tag": "security",
            "patterns": [
                "¿Cómo puedo proteger mi cuenta?",
                "¿Qué puedo hacer para mejorar la seguridad de mi cuenta?",
                "¿Cómo proteger mi contraseña?",
                "¿Cuáles son las mejores prácticas de seguridad en línea?",
                "¿Qué debo hacer si creo que mi cuenta ha sido hackeada?",
                "¿Cómo puedo evitar que me roben la contraseña?",
                "¿Es seguro usar la misma contraseña para varios sitios?",
                "¿Cómo puedo verificar si mi cuenta está segura?",
                "¿Qué es la autenticación de dos factores y cómo la activo?",
                "¿Debo usar una VPN para proteger mi privacidad?",
                "¿Cómo evito caer en estafas en línea?",
                "¿Es seguro usar Wi-Fi público?",
                "¿Cómo sé si un correo electrónico es phishing?",
                "¿Qué debo hacer si pierdo mi teléfono con acceso a mis cuentas?",
                "¿Cómo puedo saber si mi cuenta fue comprometida?",
                "¿Cómo proteger mis datos personales en redes sociales?",
                "¿Es seguro hacer compras en línea?",
                "¿Cómo hago que mi contraseña sea más segura?",
                "¿Qué debo hacer si alguien me hackea mi cuenta?",
                "¿Cómo evitar el robo de identidad en línea?",
                "¿Qué debo hacer si veo actividad sospechosa en mi cuenta?",
                "¿Por qué es importante cambiar mis contraseñas regularmente?",
                "¿Cómo aseguro mis cuentas de redes sociales?",
                "¿Debo activar la autenticación en dos pasos?",
                "¿Cómo proteger mis dispositivos de virus y malware?",
                "¿Qué debo hacer si me llega un mensaje sospechoso de un amigo?",
                "¿Es seguro compartir información personal por correo electrónico?",
                "¿Cómo puedo asegurar mi información en mi teléfono móvil?",
                "¿Qué hago si sospecho que mis cuentas están siendo espiadas?",
                "¿Cómo evitar que mis dispositivos sean hackeados?",
                "¿Cómo puedo proteger mis archivos personales?",
                "¿Qué debo hacer si tengo una contraseña débil?",
                "¿Es seguro usar contraseñas guardadas en mi navegador?",
                "¿Cómo protejo mis contraseñas con un gestor de contraseñas?",
                "¿Por qué debo tener cuidado con las redes Wi-Fi abiertas?",
                "¿Es seguro usar mi tarjeta de crédito en línea?",
                "¿Cómo sé si un sitio web es seguro para realizar compras?",
                "¿Qué debo hacer si encuentro un virus en mi dispositivo?",
                "¿Cómo proteger mis archivos en la nube?",
                "¿Cómo evitar el robo de datos mientras navego en línea?",
                "¿Es seguro usar aplicaciones de terceros en mi teléfono?",
                "¿Cómo activar las notificaciones de seguridad en mi cuenta?",
                "¿Cómo puedo protegerme de los ataques de ransomware?",
                "¿Qué debo hacer si recibo un enlace sospechoso por mensaje?",
                "¿Por qué no debo usar contraseñas fáciles de adivinar?",
                "¿Cómo evitar que me roben mi información de tarjeta de crédito?",
                "¿Cómo puedo protegerme de los ataques de ingeniería social?",
                "¿Es seguro compartir contraseñas con amigos o familiares?",
                "¿Qué debo hacer si sospecho de una brecha de seguridad en una empresa?"
            ],
            "responses": [
                "Para proteger tu cuenta, asegúrate de usar contraseñas fuertes y únicas, y activa la autenticación en dos factores cuando esté disponible.",
                "Usa contraseñas largas y complejas, activa la autenticación en dos factores y mantén tus dispositivos actualizados para mejorar la seguridad de tu cuenta.",
                "Nunca uses contraseñas fáciles de adivinar. Usa una combinación de letras, números y símbolos, y cambia tus contraseñas regularmente.",
                "Las mejores prácticas de seguridad incluyen usar contraseñas fuertes, habilitar la autenticación en dos factores, y evitar compartir tus contraseñas.",
                "Si sospechas que tu cuenta ha sido hackeada, cambia tu contraseña inmediatamente y revisa las configuraciones de seguridad de tu cuenta.",
                "Para evitar el robo de tu contraseña, usa contraseñas fuertes, no las compartas y activa la autenticación en dos factores cuando sea posible.",
                "No es recomendable usar la misma contraseña para varios sitios. Si uno de los sitios se ve comprometido, todas tus cuentas estarán en riesgo.",
                "Verifica la seguridad de tu cuenta revisando la actividad reciente y activando las opciones de notificación de seguridad, como la autenticación en dos pasos.",
                "La autenticación de dos factores agrega una capa extra de seguridad. Puedes activarla en la configuración de tu cuenta para proteger tus datos.",
                "Sí, usar una VPN en redes públicas ayuda a proteger tu privacidad al cifrar tu conexión a internet y hacerla más segura.",
                "Evita hacer clic en enlaces sospechosos y asegúrate de verificar la autenticidad de los correos antes de proporcionar cualquier información personal.",
                "No es seguro usar Wi-Fi público para actividades sensibles como hacer compras o acceder a cuentas bancarias. Usa una VPN si necesitas hacerlo.",
                "Los correos electrónicos de phishing suelen tener errores ortográficos o de formato. Si tienes dudas, no hagas clic en enlaces ni descargues archivos adjuntos.",
                "Si pierdes tu teléfono, cambia las contraseñas de tus cuentas importantes y activa la opción de localización de dispositivos si está disponible.",
                "Si sospechas que tu cuenta ha sido comprometida, cambia tu contraseña de inmediato y revisa los registros de actividad en busca de acciones sospechosas.",
                "En las redes sociales, limita la cantidad de información personal que compartes y ajusta las configuraciones de privacidad para proteger tus datos.",
                "Es importante usar sitios web seguros y comprobar que la URL comienza con 'https://' antes de ingresar tus datos para hacer compras en línea.",
                "Asegúrate de que tu contraseña sea larga, use una combinación de caracteres y evita palabras comunes. También puedes usar un gestor de contraseñas.",
                "Si tu cuenta ha sido hackeada, cambia tu contraseña, contacta con el soporte de la plataforma y revisa los registros de actividad.",
                "Evita compartir información sensible como tu número de tarjeta de crédito o contraseñas en correos electrónicos o mensajes de texto no seguros.",
                "Instala un antivirus y asegúrate de que tu teléfono esté actualizado para protegerlo de posibles amenazas y vulnerabilidades.",
                "Si sospechas que alguien está espiando tu cuenta, cambia tu contraseña y verifica las opciones de seguridad y privacidad de tu cuenta.",
                "Mantén tus dispositivos actualizados y utiliza software de seguridad confiable para protegerte contra el malware y otras amenazas.",
                "Protege tus archivos personales usando contraseñas seguras y almacenamiento encriptado. Utiliza un gestor de contraseñas para mayor seguridad.",
                "Si tienes una contraseña débil, cámbiala por una más compleja que incluya una mezcla de letras, números y símbolos.",
                "Aunque es conveniente guardar contraseñas en el navegador, es más seguro usar un gestor de contraseñas especializado.",
                "Usar un gestor de contraseñas te ayuda a almacenar y generar contraseñas seguras, lo que mejora la protección de tus cuentas.",
                "Evita usar redes Wi-Fi públicas para realizar actividades sensibles como acceder a tus cuentas bancarias. Usa siempre una VPN si es posible.",
                "Al realizar compras en línea, asegúrate de que el sitio sea confiable, tenga protocolos de seguridad como 'https://' y lee las reseñas de otros usuarios.",
                "Si encuentras un virus en tu dispositivo, realiza un análisis completo con un software antivirus y sigue las recomendaciones para eliminarlo.",
                "Asegura tus archivos en la nube utilizando contraseñas fuertes y habilitando la autenticación en dos factores en las plataformas que lo permitan.",
                "Para evitar el robo de datos mientras navegas, usa un navegador seguro y revisa los permisos de las aplicaciones que instalas.",
                "Solo instala aplicaciones de fuentes confiables y revisa los permisos que solicitan antes de aceptarlos.",
                "Las notificaciones de seguridad te alertan sobre cualquier actividad sospechosa en tu cuenta. Asegúrate de activarlas para mayor protección.",
                "La protección contra ransomware incluye tener copias de seguridad de tus archivos y no hacer clic en enlaces o archivos adjuntos sospechosos.",
                "Si recibes un enlace sospechoso, no hagas clic en él ni proporciones información personal. Verifica siempre la fuente del mensaje.",
                "Evita usar contraseñas simples como '123456' o 'contraseña'. Usa combinaciones únicas y complejas que sean difíciles de adivinar.",
                "Para proteger tus datos de tarjeta de crédito, asegúrate de usar sitios web seguros y métodos de pago confiables como PayPal.",
                "Para protegerte de los ataques de ingeniería social, nunca compartas tus contraseñas o información personal con extraños.",
                "Es mejor no compartir contraseñas con amigos o familiares. Si es necesario, utiliza un gestor de contraseñas compartidas de manera segura.",
                "Si sospechas de una brecha de seguridad en una empresa, notifícalo de inmediato y sigue las instrucciones para proteger tu cuenta."
            ]
        },
        {
            "tag": "saludo",
            "patterns": [
                "Hola",
                "¡Hola! ¿Qué tal?",
                "¡Buenos días!",
                "¡Buenas tardes!",
                "¡Buenas noches!",
                "¡Hey!",
                "¡Qué tal!",
                "¿Qué pasa?",
                "¡Qué onda!",
                "¿Cómo estás?",
                "¿Cómo te va?",
                "¡Qué hay de nuevo!",
                "¡Hola, buen día!",
                "¿Cómo va todo?",
                "¡Qué tal todo!",
                "¡Saludos!",
                "¡Ey! ¿Cómo andas?",
                "¡Qué pasa contigo!",
                "¿Cómo va la vida?",
                "¡Qué tal por ahí?",
                "¿Todo bien?",
                "¡Qué tal todo por tu lado?",
                "¿Cómo estás pasando el día?",
                "¡Hola! ¿Qué tal la familia?",
                "¡Hola, ¿cómo te va?",
                "¡Qué tal la semana?",
                "¡Qué tal! ¿Cómo te encuentras?",
                "¿Qué tal el día?",
                "¡Hola, buen día! ¿Cómo estás?",
                "¿Todo bien por ahí?",
                "¡Qué tal! ¿Cómo te encuentras?",
                "¡Hola, todo chévere?",
                "¡Qué tal todo por allá?",
                "¡Qué onda! ¿Todo bien?",
                "¿Qué tal tu día?",
                "¡Hola, cómo va todo?",
                "¡Qué tal tu semana?",
                "¡Qué tal todo por ahí?",
                "¡Qué tal la vida?",
                "¿Cómo vas?",
                "¡Hola! ¿Cómo va el día?",
                "¡Qué onda! ¿Todo bien?",
                "¿Todo tranquilo?",
                "¡Qué pasa! ¿Cómo te va?",
                "¡Hola! ¿Cómo te sientes?",
                "¡Hola, qué bueno verte!",
                "¡Hola! ¿Qué tal todo en tu mundo?",
                "¡Ey! ¿Cómo vas?",
                "¡Qué tal todo en tu mundo?",
                "¡Hola! ¿Todo bien?",
                "¿Cómo te encuentras hoy?",
                "¿Cómo vas por allá?",
                "¡Qué tal el día de hoy?",
                "¡Hola! ¿Todo bien por ahí?",
                "¡Saludos! ¿Cómo estás?",
                "¡Qué tal por ahí?",
                "¿Todo bien por allá?",
                "¡Qué tal la jornada?",
                "¡Hola! ¿Cómo te encuentras?",
                "¡Hola, qué bueno verte!",
                "¡Qué tal, cómo te va?",
                "¡Ey! ¿Cómo va todo?",
                "¿Qué tal el fin de semana?",
                "¡Qué tal por allá?",
                "¡Hola! ¿Cómo va la vida?",
                "¡Qué tal todo por aquí?",
                "¡Nos vemos, cómo estás?",
                "¡Qué tal la vida hoy?",
                "¡Qué tal todo el día?",
                "¿Qué tal todo? ¿Todo bien?",
                "¡Hola! ¿Cómo estás pasando el día?",
                "¡Hola! ¿Qué tal todo por aquí?",
                "¡Hola! ¿Cómo andas?",
                "¿Cómo te va el día?",
                "¡Qué tal todo, todo bien?",
                "¡Qué pasa! ¿Cómo va todo?",
                "¡Hola! ¿Qué tal todo por tu lado?",
                "¡Qué tal todo! ¿Todo bien?",
                "¡Qué tal la familia?",
                "¡Hola! ¿Qué novedades?",
                "¡Qué tal! ¿Cómo va todo?",
                "¡Hola! ¿Cómo estás pasando el día?",
                "¿Cómo va el día hoy?",
                "¡Hola! ¿Todo tranquilo por ahí?",
                "¡Qué tal! ¿Cómo te va?",
                "¿Qué tal el fin de semana? ¿Todo bien?",
                "¡Qué tal! ¿Todo bien por ahí?",
                "¡Hola! ¿Todo chévere?",
                "¡Hola! ¿Qué tal todo hoy?",
                "¡Qué tal el día hoy?",
                "¡Hola! ¿Todo bien por aquí?",
                "¡Ey! ¿Todo bien por ahí?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Hola! ¿Todo en orden?",
                "¡Qué tal la mañana?",
                "¡Hola! ¿Todo bien por tu lado?",
                "¡Hola! ¿Todo bien por allá?",
                "¡Hola! ¿Cómo te sientes hoy?",
                "¿Cómo te encuentras ahora?",
                "¡Hola! ¿Cómo te va hoy?",
                "¡Hola! ¿Cómo te va con todo?",
                "¡Qué tal todo por ahí?",
                "¡Hola! ¿Cómo va todo por tu lado?",
                "¡Qué tal! ¿Todo en orden?",
                "¡Hola! ¿Cómo va todo hoy?",
                "¿Todo bien por ahí?",
                "¡Hola! ¿Cómo va todo?",
                "¡Qué tal! ¿Cómo va tu día?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Qué tal! ¿Todo bien?",
                "¡Qué tal! ¿Cómo te va?",
                "¡Hola! ¿Qué tal el día?",
                "¡Qué tal! ¿Cómo va tu jornada?",
                "¡Hola! ¿Qué tal todo?",
                "¡Hola! ¿Cómo va la vida por tu lado?",
                "¡Hola! ¿Cómo va todo por allá?",
                "¿Qué tal tu día?",
                "¡Hola! ¿Qué tal todo por allá?",
                "¡Hola! ¿Cómo te va?",
                "¡Hola! ¿Todo bien?",
                "¡Qué tal! ¿Cómo va todo?",
                "¡Hola! ¿Todo bien por aquí?",
                "¡Qué tal la jornada?",
                "¡Hola! ¿Cómo te sientes hoy?",
                "¡Hola! ¿Cómo va todo por tu lado?",
                "¡Hola! ¿Todo en orden?",
                "¡Qué tal! ¿Cómo estás?",
                "¡Hola! ¿Qué tal todo?",
                "¡Hola! ¿Todo bien por aquí?",
                "¡Hola! ¿Qué tal todo por aquí?",
                "¡Qué tal! ¿Cómo te encuentras?",
                "¡Hola! ¿Qué tal tu día?",
                "¡Hola! ¿Cómo vas?",
                "¡Qué tal! ¿Todo bien por tu lado?",
                "¡Hola! ¿Cómo te va?",
                "¡Qué tal! ¿Todo bien hoy?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Qué pasa! ¿Cómo estás?",
                "¡Hola! ¿Cómo te va el día?",
                "¡Qué tal! ¿Cómo va todo por allá?",
                "¡Hola! ¿Cómo estás hoy?",
                "¡Hola! ¿Todo bien por aquí?",
                "¡Hola! ¿Qué tal el día?",
                "¡Hola! ¿Qué tal por allá?",
                "¡Hola! ¿Cómo te encuentras?",
                "¡Hola! ¿Todo bien? ¡Qué tal!",
                "¡Hola! ¿Cómo va todo?",
                "¡Qué tal! ¿Todo tranquilo?",
                "¡Hola! ¿Cómo va todo?",
                "¡Hola! ¿Qué tal por ahí?",
                "¡Hola! ¿Cómo va todo?",
                "¡Qué tal todo?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Qué tal todo?",
                "¡Hola! ¿Qué tal todo?",
                "¡Hola! ¿Qué tal todo hoy?",
                "¡Hola! ¿Cómo va el día?",
                "¡Hola! ¿Cómo va todo por allá?",
                "¡Hola! ¿Cómo va la vida?",
                "¡Hola! ¿Todo tranquilo?"
            ],
            "responses": [
                "¡Hola! ¿En qué puedo ayudarte?",
                "¡Hola! ¿Cómo estás?",
                "¡Buenas! ¿En qué te puedo ayudar?",
                "¡Hola, un gusto saludarte!",
                "¡Qué bueno verte por aquí!",
                "¡Bienvenido! ¿En qué te puedo asistir?",
                "¡Hola, cómo te va?",
                "¡Qué tal! ¿En qué te ayudo?",
                "¡Hola! ¿Todo bien?",
                "¡Saludos! ¿Cómo te puedo ayudar?",
                "¡Hola! ¿Qué tal todo?",
                "¡Qué bueno verte! ¿En qué te ayudo?",
                "¡Qué tal! ¿Todo bien?",
                "¡Buenas! ¿Cómo te va?",
                "¡Hola! ¿Cómo va todo?",
                "¡Hola! ¿Qué tal el día?",
                "¡Qué tal! ¿Todo bien por ahí?",
                "¡Hey! ¿En qué te ayudo?",
                "¡Qué tal! ¿Cómo te va hoy?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Buenas! ¿En qué te puedo asistir?",
                "¡Hola! ¿Qué tal tu día?",
                "¡Qué onda! ¿Cómo va todo?",
                "¡Hola, todo bien?",
                "¡Buenas tardes! ¿Cómo te encuentras?",
                "¡Qué tal! ¿En qué te ayudo?",
                "¡Hola! ¿Qué tal las cosas?",
                "¡Qué tal todo? ¿Necesitas algo?",
                "¡Hola! ¿Cómo te sientes?",
                "¡Hola! ¿En qué puedo asistirte hoy?",
                "¡Qué tal todo, todo bien?",
                "¡Hola! ¿Te puedo ayudar con algo?",
                "¡Qué pasa! ¿Te ayudo en algo?",
                "¡Hola! ¿Todo tranquilo por aquí?",
                "¡Qué tal! ¿Todo en orden?",
                "¡Qué onda! ¿Cómo va tu día?",
                "¡Hola! ¿Cómo te va hoy?",
                "¡Hola! ¿Todo bien por aquí?",
                "¡Hola! ¿Te ayudo con algo?",
                "¡Buenas! ¿Cómo vas?",
                "¡Hola! ¿En qué puedo ayudarte ahora?",
                "¡Qué tal todo! ¿Todo bien?",
                "¡Hola! ¿Cómo va todo por tu lado?",
                "¡Hola! ¿Te ayudo con algo más?",
                "¡Qué tal todo! ¿En qué te ayudo?",
                "¡Qué pasa! ¿Te ayudo con algo?",
                "¡Hola! ¿Todo en orden?",
                "¡Qué tal! ¿En qué puedo ayudarte?",
                "¡Qué onda! ¿Todo bien?",
                "¡Hola! ¿En qué te puedo asistir?",
                "¡Hola! ¿Todo bien por ahí?",
                "¡Qué tal! ¿Cómo te va?",
                "¡Hola! ¿Te puedo ayudar?",
                "¡Saludos! ¿En qué te ayudo?",
                "¡Hola! ¿Cómo te sientes hoy?",
                "¡Qué tal! ¿En qué te ayudo?",
                "¡Hola! ¿Todo bien por allá?",
                "¡Hola! ¿Qué tal la vida?",
                "¡Qué onda! ¿Todo en orden?",
                "¡Qué tal! ¿Cómo estás hoy?",
                "¡Hola! ¿Qué tal todo por tu lado?",
                "¡Buenas! ¿Cómo te va?",
                "¡Hola! ¿Todo bien?",
                "¡Qué pasa! ¿Cómo va tu día?",
                "¡Qué tal! ¿En qué te puedo ayudar?",
                "¡Hola! ¿Qué tal tu semana?",
                "¡Hola! ¿Cómo te encuentras?",
                "¡Qué onda! ¿Cómo va todo?",
                "¡Hola! ¿Te puedo ayudar con algo más?",
                "¡Saludos! ¿Cómo va todo?",
                "¡Hola! ¿Todo en orden?",
                "¡Qué tal! ¿Cómo va tu día?",
                "¡Buenas! ¿En qué puedo asistirte?",
                "¡Qué tal! ¿Todo tranquilo?",
                "¡Hola! ¿Todo bien por ahí?",
                "¡Hola! ¿Te puedo asistir?",
                "¡Hola! ¿Todo bien?",
                "¡Hola! ¿Cómo te va?",
                "¡Hola! ¿Todo bien?",
                "¡Qué pasa! ¿Todo bien?",
                "¡Hola! ¿Te puedo ayudar?",
                "¡Hola! ¿Cómo va tu día?",
                "¡Qué tal! ¿Todo bien por aquí?",
                "¡Qué tal! ¿Cómo va todo?",
                "¡Hola! ¿Te ayudo con algo?",
                "¡Hola! ¿Todo bien por allá?",
                "¡Hola! ¿Cómo va todo hoy?",
                "¡Qué tal! ¿Todo en orden?",
                "¡Hola! ¿Cómo te encuentras?",
                "¡Hola! ¿Qué tal todo por ahí?",
                "¡Hola! ¿Qué tal el día?",
                "¡Buenas! ¿En qué puedo ayudarte?",
                "¡Qué pasa! ¿Todo bien por aquí?",
                "¡Hola! ¿Cómo va todo?",
                "¡Hola! ¿Te ayudo con algo más?",
                "¡Hola! ¿Todo bien?",
                "¡Qué tal! ¿Cómo te va?",
                "¡Hola! ¿Todo tranquilo?",
                "¡Hola! ¿Te ayudo con algo?",
                "¡Hola! ¿Cómo estás?"
            ]
        },
        {
            "tag": "despedida",
            "patterns": [
                "Adiós",
                "Hasta luego",
                "Nos vemos",
                "Chao",
                "¡Cuídate!",
                "Hasta pronto",
                "Hasta la vista",
                "Nos vemos luego",
                "Adiós, que tengas buen día",
                "¡Nos vemos!",
                "¡Hasta la próxima!",
                "Hasta la próxima vez",
                "¡Que tengas un buen día!",
                "¡Hasta luego, cuídate!",
                "¡Hasta la próxima oportunidad!",
                "Nos vemos en otro momento",
                "¡Adiós! Que te vaya bien",
                "¡Nos vemos pronto, amigo!",
                "¡Quédate bien!",
                "¡Cuídate mucho!",
                "¡Nos vemos! Que te vaya bien",
                "Adiós, ¡que tengas un buen viaje!",
                "Nos vemos más tarde",
                "¡Hasta luego, que descanses!",
                "¡Hasta el próximo encuentro!",
                "¡Nos vemos mañana!",
                "¡Hasta luego, nos vemos pronto!",
                "¡Cuídate mucho, amigo!",
                "¡Hasta pronto, que te vaya bien!",
                "¡Adiós! Te mando un abrazo",
                "¡Nos vemos, cuídate mucho!",
                "¡Hasta pronto, amigo!",
                "¡Nos vemos después!",
                "¡Nos vemos, cuídate!",
                "¡Nos vemos en otra ocasión!",
                "¡Hasta siempre!",
                "¡Quédate bien, adiós!",
                "¡Nos vemos muy pronto!",
                "¡Que tengas buen día!",
                "¡Adiós! Nos vemos pronto",
                "¡Adiós, que todo te salga bien!",
                "Nos vemos luego, cuídate",
                "¡Hasta luego, que todo te vaya bien!",
                "¡Nos vemos pronto, cuídate mucho!",
                "¡Hasta luego, cuídate mucho!",
                "¡Chao, que te vaya bien!",
                "¡Adiós, que descanses!",
                "¡Adiós, que tengas una excelente jornada!",
                "¡Hasta pronto, nos vemos luego!",
                "¡Nos vemos, cuídate!",
                "¡Adiós, que todo te salga excelente!",
                "¡Nos vemos pronto, que te vaya bien!",
                "¡Cuídate mucho!",
                "¡Nos vemos, buen día!",
                "¡Nos vemos pronto, cuídate!",
                "¡Nos vemos, un abrazo!",
                "¡Hasta la próxima! Cuídate",
                "¡Hasta pronto, cuídate mucho!",
                "Nos vemos pronto, adiós",
                "¡Hasta luego! Nos vemos después",
                "¡Cuídate! Hasta luego",
                "Nos vemos más tarde, cuídate",
                "¡Nos vemos, que descanses!",
                "¡Nos vemos pronto, que estés bien!",
                "¡Nos vemos! Cuídate",
                "¡Nos vemos! Te deseo lo mejor",
                "¡Hasta la vista! Nos vemos",
                "¡Hasta pronto, que todo te salga bien!",
                "¡Nos vemos después! Cuídate mucho",
                "¡Hasta pronto, que tengas un gran día!",
                "¡Adiós, que todo te vaya bien!",
                "¡Hasta luego, que todo te salga bien!",
                "¡Nos vemos pronto! Cuídate mucho",
                "¡Nos vemos después de un rato!",
                "¡Nos vemos, hasta pronto!",
                "¡Hasta luego! Te deseo lo mejor",
                "¡Hasta pronto! Cuídate mucho",
                "¡Nos vemos pronto, que estés bien!",
                "¡Hasta luego! Que todo te salga bien",
                "¡Nos vemos pronto! Cuídate",
                "¡Hasta pronto! Nos vemos",
                "Nos vemos pronto, cuídate mucho",
                "¡Hasta pronto! Te mando un abrazo",
                "¡Nos vemos luego!",
                "¡Adiós, que tengas buen día!",
                "¡Hasta luego! Que descanses",
                "¡Nos vemos pronto! Hasta la próxima",
                "¡Hasta luego! Que todo salga bien",
                "¡Nos vemos! Cuídate mucho",
                "¡Hasta la próxima!",
                "¡Nos vemos! Te deseo lo mejor",
                "¡Nos vemos pronto! Cuídate",
                "¡Hasta luego, que te vaya bien!",
                "Nos vemos más tarde, ¡cuídate!",
                "¡Nos vemos después! Que te vaya bien",
                "¡Hasta luego, cuídate mucho!",
                "Nos vemos luego, cuídate mucho",
                "¡Hasta pronto, cuídate!",
                "¡Hasta luego, que todo te salga bien!",
                "¡Nos vemos después! Que te vaya bien",
                "¡Hasta pronto, cuídate mucho!",
                "¡Nos vemos, que descanses!",
                "¡Nos vemos! Cuídate mucho",
                "Nos vemos pronto, ¡cuídate mucho!",
                "¡Hasta luego, que te vaya bien!",
                "¡Hasta la próxima vez!",
                "¡Nos vemos! Que te vaya bien",
                "¡Adiós, que todo te salga bien!",
                "¡Hasta pronto! Nos vemos más tarde",
                "¡Nos vemos pronto, que descanses!",
                "¡Nos vemos después!",
                "Nos vemos, cuídate mucho",
                "¡Nos vemos! Cuídate mucho",
                "¡Hasta luego, que todo te vaya bien!",
                "¡Nos vemos, que descanses!",
                "¡Hasta pronto, nos vemos más tarde!",
                "¡Nos vemos, cuídate mucho!",
                "¡Hasta luego! Que todo te vaya bien",
                "Nos vemos más tarde",
                "¡Nos vemos, que todo salga bien!",
                "¡Hasta luego, nos vemos pronto!",
                "¡Nos vemos, cuídate mucho!",
                "¡Nos vemos más tarde!",
                "¡Nos vemos luego, que descanses!",
                "¡Hasta luego, que descanses!",
                "¡Nos vemos después!",
                "¡Nos vemos pronto! Cuídate",
                "¡Nos vemos, hasta la próxima!",
                "¡Hasta luego, que todo te salga bien!",
                "¡Nos vemos! Que te vaya bien",
                "¡Nos vemos después de un rato!",
                "¡Nos vemos! Cuídate mucho",
                "¡Nos vemos, que todo te salga excelente!",
                "¡Hasta pronto! Nos vemos pronto",
                "¡Nos vemos! Cuídate",
                "Nos vemos más tarde, que todo salga bien",
                "¡Nos vemos! Hasta luego",
                "¡Nos vemos, que todo te vaya bien!",
                "¡Nos vemos pronto, que descanses!",
                "¡Hasta luego, cuídate!",
                "¡Nos vemos después de un rato!",
                "¡Nos vemos, cuídate mucho!",
                "¡Hasta luego, que descanses!",
                "¡Nos vemos después, que te vaya bien!",
                "¡Nos vemos pronto, hasta la próxima!",
                "¡Nos vemos! Cuídate",
                "¡Nos vemos! Te mando un abrazo",
                "¡Nos vemos pronto, que descanses!",
                "¡Nos vemos! Cuídate mucho",
                "¡Nos vemos pronto!"
            ],
            "responses": [
                "¡Hasta pronto!",
                "¡Que tengas un buen día!",
                "¡Nos vemos pronto!",
                "¡Cuídate!",
                "¡Hasta luego!",
                "¡Nos vemos!",
                "¡Hasta la próxima!",
                "¡Chao! Cuídate",
                "¡Nos vemos pronto!",
                "¡Hasta la vista!",
                "¡Adiós, que tengas buen día!"
            ]
        },
        {
            "tag": "pregunta_tiempo",
            "patterns": [
                "¿Qué hora es?",
                "¿Cómo está el clima?",
                "¿Qué día es hoy?",
                "¿Qué tiempo hace?",
                "¿Cómo está el clima en este momento?",
                "¿Qué hora tienes?",
                "¿Me puedes decir la hora?",
                "¿Está lloviendo?",
                "¿Hace calor hoy?",
                "¿Qué hora es en este momento?",
                "¿Cuál es la temperatura?",
                "¿Cómo está el clima hoy?",
                "¿Está soleado?",
                "¿Está nevando?",
                "¿Qué hora es en este lugar?",
                "¿Hace frío hoy?",
                "¿Qué temperatura hace?",
                "¿Qué día es hoy?",
                "¿Cómo está el día?",
                "¿Está nublado?",
                "¿Qué temperatura tenemos hoy?",
                "¿A qué hora es?",
                "¿Qué hora es en España?",
                "¿Está soleado o nublado?",
                "¿Hace buen tiempo?",
                "¿Está lloviendo ahora?",
                "¿A qué hora amanece?",
                "¿Cuándo será el atardecer?",
                "¿Cómo va el clima hoy?",
                "¿Está nublado hoy?",
                "¿Cuál es la hora?",
                "¿Hace frío por la mañana?",
                "¿Qué clima tenemos?",
                "¿Hace calor o frío?",
                "¿Qué hora es en Nueva York?",
                "¿A qué hora empieza a oscurecer?",
                "¿Hace buen clima hoy?",
                "¿Qué hora es en Londres?",
                "¿Qué tiempo hará mañana?",
                "¿Está fresco el día de hoy?",
                "¿Va a llover mañana?",
                "¿Cómo está la temperatura?",
                "¿Qué hora es en Argentina?",
                "¿Qué hora es en mi zona?",
                "¿Hace calor en la ciudad?",
                "¿Qué tiempo tenemos hoy?",
                "¿Hace frío en la mañana?",
                "¿Cómo se ve el clima para hoy?",
                "¿Qué temperatura hay ahora?",
                "¿Cuántos grados hace?",
                "¿A qué hora empieza el día?",
                "¿Va a llover más tarde?",
                "¿Qué temperatura habrá mañana?",
                "¿Hace calor por la tarde?",
                "¿Qué hora es en la tarde?",
                "¿Cuál es la hora en Japón?",
                "¿Cómo va el clima para mañana?",
                "¿Está despejado hoy?",
                "¿Qué tiempo habrá en la tarde?",
                "¿Qué clima habrá esta noche?",
                "¿A qué hora oscurece?",
                "¿Cuál es el pronóstico del tiempo?",
                "¿Hace mucho frío?",
                "¿Cómo está el tiempo en la playa?",
                "¿A qué hora va a llover?",
                "¿Qué hora es en Berlín?",
                "¿Hace calor a mediodía?",
                "¿Está lloviendo esta mañana?",
                "¿Cómo está el clima en la tarde?",
                "¿Cómo está el clima ahora?",
                "¿Qué hora será?",
                "¿Cuánto falta para el amanecer?",
                "¿Hace mucho calor hoy?",
                "¿Está oscuro ya?",
                "¿Qué tiempo va a hacer esta noche?",
                "¿Hace frío por la tarde?",
                "¿Cuántos grados hay ahora?",
                "¿A qué hora empieza a lloviznar?",
                "¿Qué temperatura hace ahora?",
                "¿Hace buen tiempo para salir?",
                "¿A qué hora sale el sol?",
                "¿Qué hora será en Buenos Aires?",
                "¿Cuál es la temperatura ahora?",
                "¿Hace calor o frío esta noche?",
                "¿A qué hora amanece mañana?",
                "¿Hace calor en la tarde?",
                "¿Va a llover esta semana?",
                "¿Hace buen tiempo para hacer ejercicio?",
                "¿Cómo va el clima para mañana?",
                "¿Qué hora es en el otro lado del mundo?",
                "¿Va a nevar mañana?",
                "¿Cómo está el tiempo en la tarde?",
                "¿Cuántos grados hay?",
                "¿Cómo está el clima esta tarde?",
                "¿Hace frío por la noche?",
                "¿A qué hora se pone el sol?",
                "¿Qué temperatura tiene el día?",
                "¿Hace calor esta tarde?",
                "¿Qué clima habrá en las montañas?",
                "¿Cómo está el día en la ciudad?",
                "¿Qué tiempo hace en la noche?",
                "¿Cómo estará el tiempo?",
                "¿Está nublado o soleado?",
                "¿Qué hora es en el centro del país?",
                "¿Qué temperatura estará mañana?",
                "¿Cómo está el tiempo esta mañana?",
                "¿Va a hacer frío por la mañana?",
                "¿Qué tiempo hará hoy en la tarde?",
                "¿Cuál es el clima en el campo?",
                "¿Qué hora es en este momento?",
                "¿Está soleado en la ciudad?",
                "¿Hace frío hoy por la tarde?",
                "¿Va a llover en las próximas horas?",
                "¿Está despejado esta noche?",
                "¿Hace frío o calor por la noche?",
                "¿Qué tiempo hará en la zona costera?",
                "¿Cómo está el clima esta mañana?",
                "¿Hace calor en la mañana?",
                "¿Qué hora es en este país?",
                "¿Hace buen tiempo por la mañana?",
                "¿Qué clima habrá en la playa?",
                "¿Cuántos grados hay por la tarde?",
                "¿A qué hora amanece mañana?",
                "¿Está lluvioso por la tarde?",
                "¿Hace mucho calor por la noche?",
                "¿Qué tiempo hace esta mañana?",
                "¿Qué hora es en México?",
                "¿Hace buen clima esta mañana?",
                "¿Está cálido o frío?",
                "¿Cómo va el clima para hoy?",
                "¿Cómo está el clima en la ciudad?",
                "¿Hace calor por la mañana?",
                "¿Va a nevar hoy?",
                "¿Qué hora es en Argentina?",
                "¿Está nublado en la ciudad?",
                "¿Cuántos grados hay por la mañana?",
                "¿Hace frío por la tarde?",
                "¿Qué hora es en Miami?",
                "¿Hace calor en la ciudad?",
                "¿Está fresco hoy?",
                "¿Va a llover el próximo día?",
                "¿Hace frío en la tarde?",
                "¿A qué hora se hace de noche?",
                "¿Hace calor en la zona costera?",
                "¿Cuál es la hora exacta?",
                "¿Va a llover este fin de semana?",
                "¿Hace buen tiempo por la tarde?",
                "¿Está soleado por la tarde?",
                "¿Qué hora es en Madrid?",
                "¿Hace frío o calor?",
                "¿Cuántos grados hace en la playa?",
                "¿Está nublado por la mañana?",
                "¿Cómo estará el clima?",
                "¿Va a llover hoy?",
                "¿A qué hora amanece?",
                "¿Qué hora será más tarde?",
                "¿Hace calor en la playa?",
                "¿Está despejado en la tarde?",
                "¿Qué hora será en Italia?",
                "¿Está lloviendo a esta hora?",
                "¿Hace mucho calor en la playa?",
                "¿Está frío en la noche?",
                "¿Qué hora es en la tarde?",
                "¿Qué temperatura hará mañana?",
                "¿Hace frío por la mañana?",
                "¿Va a llover mañana por la tarde?",
                "¿Qué tiempo hay por la noche?",
                "¿Va a llover esta tarde?",
                "¿Cuántos grados hay por la mañana?",
                "¿Hace buen tiempo por allá?",
                "¿Va a nevar mañana por la tarde?",
                "¿Cómo está el clima por allá?",
                "¿Qué temperatura hará hoy?",
                "¿Está nublado por allá?",
                "¿Hace frío o calor esta tarde?",
                "¿Cómo estará el clima mañana?",
                "¿Qué hora es en el mediodía?",
                "¿Cómo va el clima?",
                "¿Cuántos grados hace en la tarde?",
                "¿Va a llover esta semana?",
                "¿Cómo estará el tiempo el día de mañana?",
                "¿Qué hora será hoy?",
                "¿A qué hora anochece?",
                "¿Cómo se ve el clima?",
                "¿Cómo está el día en el campo?",
                "¿Va a llover esta noche?",
                "¿Cómo está el tiempo para mañana?",
                "¿Está despejado ahora?",
                "¿Qué hora es en Brasil?",
                "¿Cómo se ve el clima para hoy?",
                "¿Cuántos grados hace en este lugar?",
                "¿Cómo está el tiempo en la ciudad?",
                "¿Hace frío o calor esta mañana?",
                "¿Va a nevar hoy?",
                "¿Cómo está el tiempo por allá?",
                "¿Qué hora es en Chile?",
                "¿Qué hora es en Japón?",
                "¿Está lloviendo en la ciudad?",
                "¿Va a hacer frío por la tarde?",
                "¿Cómo estará el clima para hoy?"
            ],
            "responses": [
                "Lo siento, no tengo acceso al clima ahora mismo.",
                "No sé la hora, pero ¡siempre es buen momento para charlar!",
                "No tengo acceso al clima, pero ¡espero que tengas un buen día!",
                "Lo siento, no tengo información sobre el clima.",
                "¡Lo siento! No tengo acceso al clima ahora mismo. Pero siempre hace buen tiempo para hablar contigo."
            ]
        },
        {
            "tag": "agradecimiento",
            "patterns": [
                "Gracias",
                "Muchas gracias",
                "Te lo agradezco",
                "Gracias por tu ayuda",
                "Mil gracias",
                "Te agradezco mucho",
                "Te doy las gracias",
                "Muchas gracias por todo",
                "Te estoy muy agradecido",
                "Gracias de todo corazón",
                "Gracias por todo lo que has hecho",
                "Estoy muy agradecido",
                "Te lo agradezco mucho",
                "Gracias por tu tiempo",
                "Agradezco mucho tu ayuda",
                "Te estoy infinitamente agradecido",
                "Te agradezco enormemente",
                "No sé cómo agradecerte",
                "Te agradezco de corazón",
                "Gracias por todo lo que has hecho por mí",
                "Gracias por el apoyo",
                "Gracias por estar ahí",
                "Te doy las gracias por tu ayuda",
                "Gracias por tu paciencia",
                "Gracias por tu generosidad",
                "Te agradezco sinceramente",
                "Te agradezco mucho tu apoyo",
                "Muchísimas gracias",
                "Te agradezco profundamente",
                "Gracias por tu comprensión",
                "Te agradezco que me hayas ayudado",
                "Gracias por todo lo que haces",
                "Te agradezco por ser tan amable",
                "Gracias por tu solidaridad",
                "Gracias por la ayuda brindada",
                "Muchísimas gracias por tu apoyo",
                "Te agradezco que me hayas escuchado",
                "Gracias por ser tan comprensivo",
                "Gracias por el consejo",
                "Gracias por todo tu esfuerzo",
                "Te agradezco mucho por ser tan paciente",
                "Gracias por acompañarme en esto",
                "Te agradezco todo lo que haces",
                "Gracias por tu colaboración",
                "Gracias por tu amabilidad",
                "Te agradezco mucho tu tiempo",
                "Gracias por ofrecerme tu ayuda",
                "Gracias por ser tan generoso",
                "Te doy las gracias por tu apoyo incondicional",
                "Te agradezco por tu sinceridad",
                "Gracias por siempre estar ahí",
                "Muchas gracias por tu esfuerzo",
                "Gracias por tu dedicación",
                "Gracias por tu compromiso",
                "Te agradezco por ser tan atento",
                "Gracias por tu contribución",
                "Gracias por tu entrega",
                "Te agradezco por tu esfuerzo y dedicación",
                "Muchas gracias por todo lo que has hecho por mí",
                "Gracias por tu generosidad y apoyo",
                "Te agradezco por confiar en mí",
                "Te agradezco de todo corazón por tu ayuda",
                "Gracias por ser tan amable y considerado",
                "Te agradezco por tu compasión",
                "Gracias por tu tiempo y paciencia",
                "Gracias por todo lo que me has enseñado",
                "Te doy las gracias por estar a mi lado",
                "Gracias por tu trabajo y esfuerzo",
                "Te agradezco profundamente por todo lo que has hecho",
                "Te agradezco por estar siempre dispuesto a ayudar",
                "Gracias por tu orientación",
                "Gracias por tu amabilidad y paciencia",
                "Te agradezco mucho por tu apoyo constante",
                "Te agradezco por tu ayuda incansable",
                "Gracias por tu comprensión y paciencia",
                "Te agradezco por tu apoyo durante este tiempo",
                "Gracias por estar ahí cuando más te necesité",
                "Gracias por todo lo que has hecho por mí",
                "Te agradezco por no rendirte conmigo",
                "Gracias por todo tu esfuerzo y dedicación",
                "Te agradezco de todo corazón por estar a mi lado",
                "Gracias por ayudarme a mejorar",
                "Te agradezco por tu apoyo constante y sincero",
                "Gracias por darme la oportunidad de aprender",
                "Te agradezco mucho por tu comprensión",
                "Gracias por tu atención",
                "Te agradezco por tu tiempo y paciencia",
                "Gracias por ser tan generoso conmigo",
                "Te agradezco por todo lo que has hecho por nosotros",
                "Gracias por apoyarme en todo momento",
                "Te agradezco mucho por tu ayuda",
                "Gracias por tus sabias palabras",
                "Te agradezco por tu compañía",
                "Gracias por darme tu tiempo",
                "Te agradezco por tu disposición",
                "Gracias por siempre estar ahí para mí",
                "Te agradezco mucho por todo lo que has hecho",
                "Te doy las gracias por ser tan comprensivo",
                "Gracias por tu amabilidad y paciencia",
                "Te agradezco por ser tan generoso con tu tiempo",
                "Te agradezco por tu apoyo constante",
                "Gracias por hacer esto posible",
                "Te agradezco mucho por el esfuerzo",
                "Gracias por tu compromiso y dedicación",
                "Te agradezco por tu trabajo",
                "Te agradezco de corazón por tu apoyo",
                "Gracias por tu tiempo y esfuerzo",
                "Te agradezco mucho por todo",
                "Gracias por hacer todo esto por mí",
                "Gracias por tu buen corazón",
                "Te agradezco por todo lo que has hecho por nosotros",
                "Te doy las gracias por ser tan solidario",
                "Gracias por tu generosidad y apoyo",
                "Te agradezco por ser tan considerado",
                "Gracias por todo lo que me has enseñado",
                "Te agradezco por tu amabilidad y por todo lo que haces",
                "Te agradezco mucho por estar aquí",
                "Gracias por tu paciencia y apoyo",
                "Te agradezco mucho por todo lo que me has brindado",
                "Gracias por tu dedicación y esfuerzo",
                "Te agradezco por ser tan constante",
                "Gracias por darme tu ayuda en todo momento",
                "Te agradezco por todo lo que has aportado",
                "Gracias por tu apoyo continuo",
                "Te agradezco mucho por lo que haces por mí",
                "Te agradezco sinceramente por tu dedicación",
                "Gracias por tu apoyo incondicional",
                "Te agradezco por compartir tu tiempo",
                "Gracias por tu comprensión y apoyo",
                "Te agradezco por cada paso que has dado por mí",
                "Te agradezco profundamente por todo tu esfuerzo",
                "Gracias por todo lo que haces para que las cosas salgan bien",
                "Te agradezco de corazón",
                "Te agradezco mucho por tu tiempo y por ser tan generoso",
                "Gracias por tu generosidad y paciencia",
                "Te agradezco por no rendirte",
                "Gracias por ser tan generoso",
                "Te agradezco por ser tan amable",
                "Gracias por todo el esfuerzo que has puesto",
                "Te agradezco por tus sabias palabras",
                "Gracias por tu amor y apoyo",
                "Te agradezco por cada oportunidad",
                "Gracias por ser un gran apoyo para mí",
                "Te agradezco mucho por todo",
                "Gracias por ser tan atento",
                "Te agradezco por ser tan comprensivo",
                "Gracias por darme tu apoyo",
                "Te agradezco por ser tan dedicado",
                "Gracias por tu confianza y apoyo",
                "Te agradezco por siempre estar disponible",
                "Gracias por tu amistad",
                "Te agradezco por ser mi mentor",
                "Gracias por ayudarme a crecer",
                "Te agradezco por tu ayuda sincera",
                "Gracias por estar siempre dispuesto a ayudar",
                "Te agradezco por tu apoyo moral",
                "Gracias por tu esfuerzo",
                "Te agradezco por ayudarme en todo",
                "Gracias por tu disposición",
                "Te agradezco por tus buenos consejos",
                "Gracias por estar a mi lado siempre",
                "Te agradezco por tu bondad",
                "Gracias por darme la oportunidad de aprender",
                "Te agradezco mucho por todo tu trabajo",
                "Gracias por compartir tu tiempo conmigo",
                "Te agradezco por tu actitud positiva",
                "Gracias por estar siempre ahí para apoyarme",
                "Te agradezco mucho por ser tan amable",
                "Gracias por todo lo que haces por mí y por otros",
                "Te agradezco por tu apoyo sin igual",
                "Gracias por brindarme tu ayuda incondicional",
                "Te agradezco por compartir tus conocimientos",
                "Gracias por tu apoyo emocional",
                "Te agradezco por estar disponible cuando te necesité",
                "Gracias por tu sinceridad",
                "Te agradezco por darme el tiempo que necesitaba",
                "Gracias por el cariño",
                "Te agradezco por tu empatía",
                "Gracias por tu buen juicio",
                "Te agradezco por tu paciencia y por siempre estar disponible",
                "Gracias por ser siempre tan confiable",
                "Te agradezco por ser una fuente constante de apoyo"
            ],
            "responses": [
                "¡Con gusto!",
                "¡De nada!",
                "¡Es un placer ayudarte!",
                "¡Encantado de poder ayudarte!",
                "¡Es un placer!",
                "¡Con mucho gusto!",
                "¡De nada! ¡Siempre estoy aquí para ayudar!",
                "¡Me alegra haber podido ayudarte!",
                "¡Con mucho gusto! Cualquier otra cosa, no dudes en preguntar."
            ]
        },
        {
            "tag": "no_reconocido",
            "patterns": [
                "helado",
                "perro",
                "fútbol",
                "cualquier palabra no entrenada",
                "banana",
                "zapato",
                "teclado",
                "playa",
                "vacaciones",
                "película",
                "música",
                "cohete",
                "avión",
                "dinosaurio",
                "libro",
                "pelota",
                "camión",
                "automóvil",
                "televisión",
                "piedra",
                "luna",
                "sol",
                "árbol",
                "gato",
                "feliz",
                "oscuro",
                "rayo",
                "cielo",
                "tiempo",
                "mujer",
                "hombre",
                "familia",
                "computadora",
                "mesa",
                "silla",
                "lavadora",
                "carro",
                "peluche",
                "ventilador",
                "reloj",
                "espejo",
                "televisor",
                "gafas",
                "luz",
                "camisa",
                "pantalón",
                "chaqueta",
                "luna",
                "agua",
                "película",
                "deporte",
                "fútbol",
                "guitarra",
                "pintura",
                "código",
                "python"
            ],
            "responses": [
                "Lo siento, no te entendí",
                "No sé cómo responder a eso",
                "¿Podrías reformular la pregunta?",
                "No tengo una respuesta para eso",
                "Lo siento, no sé de qué hablas",
                "No sé de qué estás hablando",
                "Lo siento, esa palabra no está registrada en mis datos",
                "No tengo respuesta para esa palabra"
            ]
        },
        {
            "tag": "ayuda",
            "patterns": [
                "¿Me puedes ayudar?",
                "Necesito ayuda",
                "¿Cómo puedo hacer esto?",
                "¿Qué puedes hacer por mí?",
                "Ayúdame por favor",
                "¿Puedes ayudarme?",
                "¿Qué debo hacer ahora?",
                "¿Cómo puedo solucionarlo?",
                "Tengo un problema, ayúdame",
                "No sé qué hacer, ayúdame",
                "¿Me puedes asistir?",
                "Necesito tu ayuda",
                "¿Puedo contar contigo para esto?",
                "¿Qué debo hacer?",
                "¿Cómo puedo solucionar esto?",
                "¿Tienes alguna sugerencia?",
                "¿Me das una mano con esto?",
                "¿Tienes algún consejo?",
                "Ayúdame con esto",
                "No sé por dónde empezar, ayúdame",
                "¿Cómo puedo mejorar esto?",
                "¿Qué debo hacer para avanzar?",
                "¿Me puedes orientar?",
                "No entiendo bien, ¿me ayudas?",
                "¿Puedes explicarme cómo hacerlo?",
                "¿Cómo puedo lograrlo?",
                "Necesito una solución rápida",
                "¿Tienes alguna recomendación?",
                "Ayuda por favor",
                "¿Me puedes dar una recomendación?",
                "¿Qué hago ahora?",
                "No sé qué hacer, ¿puedes ayudarme?",
                "No entiendo, ¿me lo puedes explicar?",
                "¿Puedes explicarme mejor?",
                "¿Tienes alguna guía?",
                "¿Cómo empiezo?",
                "No sé qué pasos seguir, ¿me ayudas?",
                "Ayúdame con esto, por favor",
                "Tengo una duda, ¿me ayudas?",
                "¿Cómo puedo solucionar este problema?",
                "¿Qué pasos debo seguir?",
                "Tengo una pregunta, ¿puedes ayudarme?",
                "¿Cómo puedo mejorar esta situación?",
                "¿Tienes algún consejo para mí?",
                "Necesito que me guíes",
                "¿Qué más puedo hacer?",
                "¿Qué puedo intentar?",
                "¿Cómo me ayudas con esto?",
                "¿Qué opciones tengo?",
                "¿Qué puedo hacer a continuación?",
                "¿Tienes alguna idea?",
                "¿Me puedes decir cómo proceder?",
                "¿Qué opciones tengo para resolver esto?",
                "¿Cómo empiezo con esto?",
                "¿Me ayudas a entender esto?",
                "¿Me puedes orientar sobre lo que tengo que hacer?",
                "No sé cómo hacerlo, ¿me ayudas?",
                "No estoy seguro, ¿me puedes guiar?",
                "¿Puedes indicarme los pasos?",
                "¿Qué pasos debo seguir para solucionarlo?",
                "No tengo claro lo que debo hacer, ¿me ayudas?",
                "Tengo muchas dudas, ¿me puedes ayudar?",
                "¿Cómo se hace esto?",
                "¿Cómo puedo hacerlo más fácilmente?",
                "¿Qué debo hacer primero?",
                "¿Hay alguna forma fácil de hacerlo?",
                "¿Tienes alguna sugerencia para mí?",
                "Ayuda, no sé cómo hacerlo",
                "No entiendo nada, ¿me ayudas?",
                "¿Cómo puedo hacerlo paso a paso?",
                "¿Tienes alguna instrucción para esto?",
                "¿Cómo puedo hacer esto de manera más eficiente?",
                "Necesito un poco de ayuda con esto",
                "Tengo dudas sobre esto, ¿puedes ayudarme?",
                "¿Cómo resuelvo este problema?",
                "¿Qué puedo hacer para mejorar?",
                "Ayúdame a entender esto",
                "¿Puedes explicarme los pasos?",
                "No sé por dónde empezar, ¿me puedes guiar?",
                "¿Cómo se hace este proceso?",
                "Tengo dudas, ¿puedes ayudarme a resolverlas?",
                "¿Qué debería hacer a continuación?",
                "No sé qué hacer después, ¿me puedes ayudar?",
                "¿Me puedes ayudar con este proceso?",
                "No estoy seguro de qué hacer, ¿me ayudas?",
                "No entiendo, ¿me puedes explicar de nuevo?",
                "Tengo muchas preguntas, ¿me ayudas?",
                "Ayúdame a resolver esto, por favor",
                "¿Me ayudas con los pasos?",
                "No sé si esto está bien, ¿me ayudas?",
                "No sé si lo estoy haciendo bien, ¿puedes ayudarme?",
                "¿Cómo puedo hacerlo correctamente?",
                "¿Me puedes indicar qué hacer?",
                "Ayúdame a saber qué hacer",
                "¿Cómo puedo comenzar?"
            ],
            "responses": [
                "Claro, ¿cómo puedo ayudarte?",
                "Estoy aquí para ayudarte, ¿qué necesitas?",
                "Por supuesto, ¿en qué te ayudo?",
                "¡Estoy listo para ayudarte! ¿Qué necesitas?",
                "Claro, dime qué problema tienes y te ayudo",
                "Estoy aquí para lo que necesites, ¿cómo te ayudo?",
                "¡Por supuesto! ¿Cómo te ayudo con eso?",
                "Claro, dime cómo te ayudo",
                "No hay problema, ¿qué necesitas?",
                "Te ayudaré con eso, ¿en qué puedo asistirte?",
                "¡Con gusto! ¿Cómo puedo ayudarte?",
                "Estoy listo para ayudarte, ¿qué necesitas?",
                "Claro, ¿qué dudas tienes?",
                "¿Qué problema tienes? Estoy aquí para ayudarte",
                "No te preocupes, te ayudo con eso",
                "Estoy aquí para lo que necesites",
                "Déjame ayudarte con eso, ¿qué necesitas?",
                "¡Con gusto! Dime cómo puedo ayudarte",
                "¿Cómo puedo ayudarte a resolver esto?",
                "Estoy aquí para hacer las cosas más fáciles para ti",
                "Te ayudaré, no te preocupes",
                "Dime qué necesitas y te ayudo",
                "Déjame saber cómo puedo ayudarte",
                "¡Estoy a tu disposición!",
                "Cuenta conmigo, ¿en qué te ayudo?",
                "Claro, puedo guiarte con eso",
                "No te preocupes, lo resolveremos juntos",
                "¡Vamos a hacerlo juntos! ¿Cómo te ayudo?",
                "Dime los detalles y te ayudo a solucionarlo",
                "Puedo ayudarte con eso, solo dime cómo",
                "Con gusto, ¿qué necesitas hacer?",
                "Te explico todo paso a paso, solo dime qué necesitas",
                "Te ayudo con eso, ¿en qué puedo asistirte?",
                "No te preocupes, ¡te lo explico!",
                "Estoy aquí para guiarte",
                "Te ayudaré a entender cómo hacerlo",
                "¡Vamos paso a paso! ¿Qué necesitas?",
                "Dime cómo te ayudo, ¡estoy listo!",
                "Claro, solo tienes que seguir estos pasos",
                "Te guiaré por el proceso",
                "No te preocupes, te lo explico con gusto",
                "Aquí estoy para ayudarte en lo que necesites",
                "Lo resolveremos, dime qué necesitas hacer",
                "Te explico cómo hacerlo",
                "Solo dime lo que necesitas, ¡te ayudo!",
                "¡Aquí estoy para apoyarte con todo!",
                "Estoy para lo que necesites, solo dime cómo te ayudo",
                "No te preocupes, estaré contigo en todo el proceso",
                "Estoy aquí para resolver tus dudas",
                "Dime cómo te ayudo, ¡te guiaré paso a paso!"
            ]
        },
        {
            "tag": "informacion_general_bot",
            "patterns": [
                "¿Quién eres?",
                "¿Qué eres?",
                "¿Qué puedes hacer?",
                "¿Cómo te llamas?",
                "¿Quién está hablando conmigo?",
                "¿Cómo me puedes ayudar?",
                "¿Qué puedes hacer por mí?",
                "¿Cómo funciona esto?",
                "¿Qué sabes hacer?",
                "¿Para qué sirves?",
                "¿Qué servicios ofreces?",
                "¿Puedes ayudarme?",
                "¿Qué tareas puedes realizar?",
                "¿Tienes algún propósito?",
                "¿Cómo me puedes asistir?",
                "¿En qué puedes ayudarme?",
                "¿Por qué debería hablar contigo?",
                "¿Cuáles son tus funciones?",
                "¿De qué trata este chat?",
                "¿Cómo puedo interactuar contigo?",
                "¿Puedes hacer algo por mí?",
                "¿Qué objetivo tienes?",
                "¿Qué servicios brindas?",
                "¿Puedes responderme?",
                "¿Eres un bot?",
                "¿Eres una inteligencia artificial?",
                "¿Cómo me ayudas?",
                "¿Para qué estás diseñado?",
                "¿Tienes nombre?",
                "¿Quién me está respondiendo?",
                "¿Qué tan inteligente eres?",
                "¿Cómo me puedes ayudar en mi problema?",
                "¿Qué tan útil eres?",
                "¿Puedes ayudarme con cualquier cosa?",
                "¿Cómo funciona este chatbot?",
                "¿Cuál es tu propósito?",
                "¿Puedes conversar conmigo?",
                "¿En qué me puedes asistir?",
                "¿Quién está detrás de ti?",
                "¿Qué sabes hacer exactamente?",
                "¿Tienes alguna función?",
                "¿Qué tipo de cosas sabes hacer?",
                "¿Por qué puedo confiar en ti?",
                "¿En qué tareas puedes ayudarme?",
                "¿Qué tareas realizas?",
                "¿Cómo puedes facilitarme la vida?",
                "¿En qué te especializas?",
                "¿Cuáles son tus habilidades?",
                "¿Puedes hacer alguna acción por mí?",
                "¿Qué tipo de preguntas puedes responder?",
                "¿Puedes hacer cosas por mí?",
                "¿Qué tanto sabes?",
                "¿Cómo puedes ayudarme a resolver problemas?",
                "¿Eres capaz de hacer todo?",
                "¿Qué puedes hacer exactamente?",
                "¿Puedes ayudarme en todo?",
                "¿Cuáles son tus capacidades?",
                "¿Cómo interactúas con las personas?",
                "¿En qué tipo de cosas puedes ayudarme?",
                "¿Me puedes ayudar a entender algo?",
                "¿Cuál es tu función principal?",
                "¿Qué tal puedes ayudarme?",
                "¿Qué tipo de respuestas puedes dar?",
                "¿Puedes hacer búsquedas?",
                "¿Sabes ayudarme con mis dudas?",
                "¿Puedes hacer tareas simples?",
                "¿Puedes explicarme algo?",
                "¿Cómo me puedes ayudar en mi día a día?",
                "¿Qué habilidades tienes?",
                "¿Eres solo un asistente virtual?",
                "¿Qué tan útil eres en situaciones específicas?",
                "¿Qué puedes hacer con mis datos?",
                "¿Puedes aprender cosas nuevas?",
                "¿Tienes un propósito en particular?",
                "¿Cómo puedo interactuar contigo?",
                "¿Estás capacitado para todo?",
                "¿Sabes todo lo que necesito?",
                "¿Qué temas puedes abordar?",
                "¿Qué tal eres para resolver dudas?",
                "¿Sabes responder preguntas complejas?",
                "¿Cómo puedo obtener más ayuda de ti?",
                "¿Estás programado para todo tipo de preguntas?",
                "¿Puedo pedirte cualquier cosa?",
                "¿Tienes algún límite?",
                "¿Cuáles son los temas que dominas?",
                "¿Tienes conocimiento en todos los temas?",
                "¿Qué pasa si no sabes algo?",
                "¿Puedes hacer tareas más difíciles?",
                "¿Me puedes guiar en el uso de algo?",
                "¿Cómo me asistes?",
                "¿Qué tan rápido puedes ayudarme?",
                "¿Qué tan preciso eres?",
                "¿Eres útil para preguntas generales?",
                "¿Tienes alguna especialidad?",
                "¿Puedes aprender de mis preguntas?",
                "¿Qué diferencias hay entre un chatbot y tú?",
                "¿Puedo confiar en lo que dices?",
                "¿Por qué debería hablar contigo?",
                "¿Qué puedes hacer con información que te doy?",
                "¿Cómo me puedes ayudar en mis tareas?",
                "¿Qué sabes hacer por mí?",
                "¿Me puedes ayudar a organizar mis cosas?",
                "¿Tienes alguna relación con Google?",
                "¿Qué tal eres para ayudarme a resolver problemas?",
                "¿Cuánto tiempo puedo hablar contigo?",
                "¿Sabes gestionar mis tareas?",
                "¿Puedes hacer llamadas o algo parecido?",
                "¿Cuál es tu objetivo principal?",
                "¿En qué te diferencias de otros bots?",
                "¿Qué tan útil es tu ayuda?",
                "¿Cómo puedo aprovechar tus respuestas?",
                "¿Puedo pedirte consejos?",
                "¿Me puedes dar recomendaciones?",
                "¿Cómo me puedes guiar?",
                "¿Qué habilidades tienes para ayudarme?",
                "¿Puedes entender todo lo que te digo?",
                "¿Sabes resolver dudas técnicas?",
                "¿Puedes guiarme en mis estudios?",
                "¿En qué te especializas?",
                "¿Puedo hablar contigo sobre cualquier cosa?",
                "¿Qué puedes hacer cuando no sabes la respuesta?",
                "¿Estás preparado para responder preguntas difíciles?",
                "¿Cómo me ayudas con temas complejos?",
                "¿Sabes todo lo que necesitas para ayudarme?",
                "¿Cuáles son tus mejores capacidades?",
                "¿Te puedes adaptar a lo que te pido?",
                "¿Sabes cómo resolver problemas técnicos?",
                "¿Me puedes enseñar algo?",
                "¿Puedes ayudarme a hacer una investigación?",
                "¿Puedes hacer mis tareas?",
                "¿Cómo sabes qué responder?",
                "¿Por qué puedes ayudarme?",
                "¿Cómo sabes qué tipo de ayuda ofrecer?",
                "¿Sabes lo que es importante para mí?",
                "¿Qué tareas específicas puedes realizar?",
                "¿Te ayuda lo que te digo?",
                "¿Me puedes dar información precisa?",
                "¿Sabes cómo hacer cosas por mí?",
                "¿Te entrenaron para responder preguntas?",
                "¿Qué tienes en cuenta para dar una respuesta?",
                "¿Me puedes enseñar algo nuevo?",
                "¿Sabes cómo resolver mis dudas?"
            ],
            "responses": [
                "Soy un chatbot diseñado para ayudarte con tus dudas",
                "Soy un asistente virtual que puede responder preguntas",
                "Puedo ayudarte con preguntas simples y algunas tareas",
                "Soy un sistema de inteligencia artificial entrenado para responder tus preguntas",
                "Soy un bot creado para ayudarte con diversas cosas",
                "Estoy aquí para ayudarte con lo que necesites",
                "Soy un chatbot capaz de responder a tus preguntas y ayudarte en lo que necesites",
                "Soy un asistente inteligente para facilitarte tareas simples",
                "Puedo ayudarte con preguntas relacionadas con varios temas",
                "Soy tu asistente virtual, listo para ayudarte",
                "Soy un bot creado para ofrecerte respuestas rápidas",
                "Te puedo ayudar con lo que necesites, solo pregunta",
                "Soy un sistema automatizado para resolver tus dudas",
                "Puedes preguntarme lo que quieras, te ayudaré lo mejor que pueda",
                "Mi propósito es ayudarte con información útil",
                "Estoy aquí para asistirte con cualquier pregunta",
                "Soy una inteligencia artificial que puede aprender y ayudarte",
                "Soy un asistente virtual que te guiará en tus preguntas",
                "Puedo ayudarte a resolver tus dudas y tareas simples",
                "Estoy diseñado para responder tus preguntas y ayudarte con tus problemas",
                "Mi trabajo es proporcionarte respuestas rápidas y precisas",
                "Soy un asistente virtual disponible las 24 horas",
                "Estoy aquí para ofrecerte información, responder preguntas y ayudarte",
                "Soy tu asistente en línea, siempre listo para ayudarte",
                "Te ayudo con cualquier pregunta que tengas, solo pregunta",
                "Soy una IA creada para ayudarte a encontrar lo que necesitas",
                "Estoy aquí para facilitarte las tareas",
                "Puedo ofrecerte información útil de manera rápida",
                "Mi función es ayudarte con diversas preguntas",
                "Soy un chatbot diseñado para resolver problemas básicos",
                "Puedo ayudarte con diferentes tipos de información",
                "Te ayudo con cosas simples y rápidas",
                "Mi objetivo es hacerte la vida más fácil con respuestas rápidas",
                "Soy tu asistente personal para resolver dudas",
                "Puedo darte información sobre diversos temas, solo pregúntame",
                "Estoy aquí para ayudarte a resolver cualquier inconveniente",
                "Mi propósito es ayudarte a obtener información y respuestas",
                "Soy una inteligencia artificial para responder a tus preguntas",
                "Te puedo ayudar con temas generales y más",
                "Soy un bot hecho para ayudarte a resolver problemas",
                "Puedo responder tus preguntas de forma rápida y precisa",
                "Soy un asistente creado para facilitarte tareas",
                "Te ofrezco respuestas rápidas y útiles",
                "Soy una herramienta para ofrecerte la información que necesitas",
                "Estoy aquí para ayudarte en todo lo que necesites",
                "Puedo darte respuestas a preguntas frecuentes y más",
                "Mi misión es facilitarte respuestas rápidas y útiles",
                "Soy un asistente virtual creado para ofrecer soluciones",
                "Te ayudo a encontrar información rápida y útil"
            ]
        },
        {
            "tag": "salud",
            "patterns": [
                "¿Cómo estás?",
                "¿Cómo te encuentras?",
                "¿Cómo va todo?",
                "¿Qué tal?",
                "¿Cómo te sientes?",
                "¿Todo bien?",
                "¿Qué tal tu día?",
                "¿Cómo va la vida?",
                "¿Cómo te va?",
                "¿Cómo te sientes hoy?",
                "¿Cómo estás pasando el día?",
                "¿Todo en orden?",
                "¿Qué tal el día?",
                "¿Cómo te encuentras hoy?",
                "¿Estás bien?",
                "¿Todo tranquilo?",
                "¿Cómo va la jornada?",
                "¿Cómo va tu día?",
                "¿Cómo te va con eso?",
                "¿Qué tal el día de hoy?",
                "¿Cómo estás en este momento?",
                "¿Cómo va todo por allá?",
                "¿Cómo te ha ido?",
                "¿Cómo te encuentras?",
                "¿Cómo te va hoy?",
                "¿Cómo va todo por tu lado?",
                "¿Cómo te sientes con todo esto?",
                "¿Te encuentras bien?",
                "¿Todo bien por ahí?",
                "¿Cómo te va en general?",
                "¿Cómo va todo por aquí?",
                "¿Todo tranquilo por allá?",
                "¿Qué tal la semana?",
                "¿Cómo van las cosas?",
                "¿Cómo ha estado tu día?",
                "¿Todo en orden por ahí?",
                "¿Cómo va el fin de semana?",
                "¿Qué tal la familia?",
                "¿Cómo está todo por tu lado?",
                "¿Cómo va tu salud?",
                "¿Cómo estás hoy en general?",
                "¿Cómo va todo contigo?",
                "¿Cómo va tu estado de ánimo?",
                "¿Te sientes bien?",
                "¿Cómo está tu día hasta ahora?",
                "¿Todo bien en tu día?",
                "¿Te encuentras relajado?",
                "¿Todo en orden en tu vida?",
                "¿Cómo te sientes en este momento?",
                "¿Todo bajo control?",
                "¿Cómo va todo por allá?",
                "¿Todo bien con tu familia?",
                "¿Cómo te va a nivel personal?",
                "¿Qué tal tu día hoy?",
                "¿Te encuentras enérgico?",
                "¿Todo tranquilo en la jornada?",
                "¿Cómo va todo en tu mundo?",
                "¿Te sientes relajado?",
                "¿Cómo te ha ido hoy?",
                "¿Cómo va la vida hoy?",
                "¿Cómo te va con los proyectos?",
                "¿Todo bajo control por tu parte?",
                "¿Cómo va todo en el trabajo?",
                "¿Cómo te va con tu salud?",
                "¿Estás saludable?",
                "¿Te sientes descansado?",
                "¿Todo bien con tu energía?",
                "¿Te encuentras descansado?",
                "¿Todo tranquilo en el día?",
                "¿Cómo se ve tu salud?",
                "¿Cómo te va con el estrés?",
                "¿Todo tranquilo en el trabajo?",
                "¿Cómo estás llevando la semana?",
                "¿Cómo te va con el ritmo de vida?",
                "¿Te encuentras equilibrado?",
                "¿Cómo va todo en tu mundo?",
                "¿Cómo te sientes después de tanto trabajo?",
                "¿Estás de buen ánimo?",
                "¿Qué tal la salud mental?",
                "¿Cómo va tu bienestar?",
                "¿Todo en orden con tu salud?",
                "¿Te has sentido saludable últimamente?",
                "¿Cómo va todo en tu cuerpo?",
                "¿Todo bien con tu estado físico?",
                "¿Te encuentras bien de salud?",
                "¿Estás cuidando tu salud?",
                "¿Te sientes enérgico?",
                "¿Cómo está tu cuerpo hoy?",
                "¿Te sientes fuerte?",
                "¿Cómo va todo por dentro?",
                "¿Te sientes cansado?",
                "¿Te encuentras con energía?",
                "¿Cómo se ve tu bienestar?",
                "¿Te sientes agotado?",
                "¿Cómo va tu ánimo?",
                "¿Te sientes motivado?",
                "¿Cómo va tu equilibrio emocional?",
                "¿Todo tranquilo en la mente?",
                "¿Te has sentido descansado?",
                "¿Cómo está tu salud física?",
                "¿Te encuentras bien anímicamente?",
                "¿Te sientes renovado?",
                "¿Cómo te sientes con respecto al trabajo?",
                "¿Cómo va tu mente?",
                "¿Te encuentras mentalmente descansado?",
                "¿Cómo va todo con tus emociones?",
                "¿Estás llevando una vida equilibrada?",
                "¿Cómo te sientes físicamente?",
                "¿Todo bien con tu salud mental?",
                "¿Te encuentras en equilibrio?",
                "¿Cómo te va con la salud emocional?",
                "¿Cómo estás con tus emociones?",
                "¿Te sientes relajado?",
                "¿Cómo va todo a nivel emocional?",
                "¿Te encuentras bien psicológicamente?",
                "¿Cómo va todo en tu mente?",
                "¿Te sientes feliz?",
                "¿Te encuentras emocionalmente estable?",
                "¿Todo en paz con tu mente?",
                "¿Te sientes positivo?",
                "¿Cómo se ve tu estado emocional?",
                "¿Te encuentras equilibrado emocionalmente?",
                "¿Te sientes lleno de energía?",
                "¿Cómo va tu equilibrio de vida?",
                "¿Todo bien con tus emociones?",
                "¿Te sientes satisfecho?",
                "¿Te encuentras sin estrés?",
                "¿Todo bien con tu bienestar mental?",
                "¿Cómo se ve tu bienestar emocional?",
                "¿Cómo va todo en tu interior?",
                "¿Te encuentras libre de estrés?",
                "¿Te sientes animado?",
                "¿Te encuentras motivado?",
                "¿Cómo está tu energía?",
                "¿Cómo va tu bienestar general?",
                "¿Te sientes relajado mentalmente?",
                "¿Te encuentras en buena forma?",
                "¿Te sientes activo?",
                "¿Cómo está tu motivación?",
                "¿Cómo va tu energía hoy?",
                "¿Te encuentras con buen ánimo?",
                "¿Te sientes agotado?",
                "¿Cómo va tu salud física y mental?",
                "¿Todo bien en tu estado físico?",
                "¿Cómo está tu estado anímico?",
                "¿Te sientes tranquilo?",
                "¿Te sientes equilibrado hoy?",
                "¿Cómo estás en términos de bienestar?",
                "¿Todo bien con tu cuerpo y mente?",
                "¿Te sientes con energía?",
                "¿Te encuentras descansado hoy?"
            ],
            "responses": [
                "Estoy bien, gracias por preguntar",
                "Me siento genial, ¿y tú?",
                "Todo está perfecto, ¿y tú?",
                "Estoy de maravilla, ¿cómo te encuentras?",
                "Me siento genial, ¿y tú?",
                "Todo tranquilo por aquí",
                "Todo en orden, gracias",
                "Estoy bien, ¿y tú cómo estás?",
                "Me siento excelente, ¿y tú?",
                "Estoy en perfecto estado",
                "Todo está bien por mi parte, gracias",
                "Estoy bien, ¿y tú cómo te encuentras?",
                "Gracias por preguntar, estoy genial",
                "Todo perfecto por aquí, ¿cómo estás tú?",
                "Estoy bastante bien, gracias",
                "Todo tranquilo por aquí, ¿y tú?",
                "Me siento bien, gracias",
                "Todo bien, gracias",
                "Todo tranquilo y bien por mi parte",
                "Gracias por preguntar, me siento muy bien",
                "Todo va bien, gracias",
                "Todo tranquilo, gracias",
                "Me siento genial, gracias",
                "Todo bien por aquí",
                "Gracias, me encuentro muy bien",
                "Me siento bien, ¿y tú?",
                "Todo va perfectamente",
                "Gracias, todo tranquilo por aquí",
                "Estoy genial, gracias por preguntar",
                "Todo en orden, gracias",
                "Todo perfecto, ¿y tú?",
                "Todo va genial por aquí",
                "Estoy perfecto, gracias",
                "Me siento bien, ¿y tú?",
                "Todo tranquilo, gracias",
                "Me siento bien, ¿y tú?",
                "Todo bien por mi parte",
                "Todo perfecto, gracias por preguntar",
                "Estoy bien, ¿y tú?",
                "Estoy en buena forma, gracias",
                "Me siento con mucha energía",
                "Todo bien por aquí",
                "Gracias, todo en orden",
                "Todo excelente por mi parte",
                "Gracias por preguntar, todo tranquilo",
                "Todo perfecto, ¿y tú?",
                "Me siento con mucha energía",
                "Todo en orden, gracias por preguntar",
                "Estoy bien, gracias por preguntar"
            ]
        },
        {
            "tag": "feedback",
            "patterns": [
                "Me gusta",
                "No me gusta",
                "Buen trabajo",
                "Excelente",
                "No fue útil",
                "No me gustó",
                "Fue muy útil",
                "Gracias, me ayudaste mucho",
                "Excelente respuesta",
                "Me encantó",
                "Muy bien",
                "Muy útil",
                "No estuvo mal",
                "Me ayudaste bastante",
                "Fue todo claro",
                "La respuesta no fue útil",
                "Gracias por la ayuda",
                "¿Me puedes ayudar mejor?",
                "Fue una respuesta correcta",
                "Muy bueno",
                "Me gustó mucho",
                "No fue lo que esperaba",
                "Muy útil la información",
                "No me sirvió",
                "No pude entender la respuesta",
                "Muy mala respuesta",
                "La respuesta fue buena",
                "No resolvieron mi duda",
                "La respuesta fue útil",
                "Me siento satisfecho con la respuesta",
                "No me convence la respuesta",
                "¿Podrías mejorar esto?",
                "Muy clara la respuesta",
                "Gracias, fue útil",
                "Eso fue muy útil",
                "No sé si me ayudó mucho",
                "No fue lo que esperaba",
                "La respuesta fue poco clara",
                "Fue muy rápida la respuesta",
                "No me ayudaste en lo que esperaba",
                "¿Puedes explicar un poco más?",
                "No estoy seguro de la respuesta",
                "Me confundí con la respuesta",
                "Me quedé con más dudas",
                "Lo explicaste bien, gracias",
                "¿Podrías darme más detalles?",
                "Gracias, pero no estoy completamente seguro",
                "Excelente explicación",
                "Gracias por tu ayuda, aunque no era lo que esperaba",
                "No fue tan útil como pensé",
                "Buen intento, pero no fue suficiente",
                "Gracias por intentar",
                "Me ayudaste, pero podría ser mejor",
                "Me agradó la respuesta",
                "No entendí la respuesta",
                "Buen servicio, pero puede mejorar",
                "Muy bien explicado",
                "Excelente, pero faltó algo",
                "La respuesta fue a medias",
                "Me gusta cómo explicas",
                "No entendí bien la solución",
                "Fue más o menos útil",
                "No fue suficiente la información",
                "Excelente, pero necesito más detalles",
                "No era exactamente lo que buscaba",
                "Estuvo bien, pero puedo buscar más",
                "Muy útil, gracias",
                "No estaba tan claro",
                "Fue claro, gracias",
                "Gracias, aunque no todo fue claro",
                "Buen trabajo, pero puedo necesitar más detalles",
                "Fue genial, pero puedes dar más información",
                "Sigo con dudas, pero estuvo bien",
                "No estaba seguro de lo que dijiste",
                "La respuesta fue muy general",
                "Eso me ayuda, pero quiero saber más",
                "La respuesta fue un poco vaga",
                "No está claro lo que dijiste",
                "Lo que dijiste fue bueno, pero quiero más detalles",
                "Me siento confundido por la respuesta",
                "Muy bueno, pero mejor si me das más ejemplos",
                "Bien, pero puedes mejorar la explicación",
                "Lo que me dijiste está claro",
                "Me ayudó un poco",
                "Fue una buena explicación",
                "No era exactamente lo que necesitaba",
                "Me diste una buena respuesta, pero no era mi pregunta",
                "¿Podrías ser más específico?",
                "La respuesta fue buena, pero no tan clara",
                "Lo entendí, pero quiero más detalles",
                "Lo que dijiste me sirvió mucho",
                "Me ayudaste, pero necesito más ejemplos",
                "La respuesta fue un poco confusa",
                "Gracias, pero necesito más información",
                "No fue lo que esperaba",
                "Gracias, fue claro y útil",
                "¿Podrías darme más detalles?",
                "Me gustaría una explicación más profunda",
                "Gracias, pero no me convence del todo",
                "Te agradezco, pero tengo más dudas",
                "La respuesta fue un poco difícil de entender",
                "Gracias, la respuesta fue directa",
                "Eso estuvo bien, pero necesito más",
                "Estuvo claro, pero quiero más ejemplos",
                "Gracias, pero quiero saber más",
                "Muy buena la explicación",
                "La respuesta estuvo bien",
                "No me diste todo lo que quería",
                "Eso no era lo que esperaba",
                "Podrías ser más claro",
                "Gracias por la ayuda, aunque necesito más detalles",
                "¿Podrías hacer la respuesta más detallada?",
                "Fue útil, pero quiero más información",
                "Estoy satisfecho, aunque hay áreas de mejora",
                "Gracias, aunque necesito más detalles",
                "No me convenció del todo",
                "Tu respuesta fue adecuada, pero podría mejorar",
                "Lo que dijiste fue útil, pero no lo entendí completamente",
                "La información fue adecuada, pero necesito más",
                "Estoy de acuerdo con lo que me dijiste",
                "¿Puedes ser más claro con la respuesta?",
                "Gracias por la respuesta, aunque no era exactamente lo que quería",
                "La respuesta fue útil, pero no completa",
                "Eso me ayuda, pero no resuelve todo",
                "Excelente respuesta, pero quiero saber más",
                "Buen trabajo, pero aún tengo dudas",
                "La respuesta fue muy buena",
                "Gracias, me resolviste la mitad de la duda",
                "Bien hecho, pero quiero más ejemplos",
                "La explicación estuvo bien",
                "Excelente, pero me gustaría más detalles",
                "Buen intento, pero me quedó una duda",
                "Gracias, eso lo solucionó, pero ¿puedes aclarar algo más?",
                "Tu explicación fue clara",
                "Gracias, fue útil, pero aún tengo dudas",
                "Estuvo claro, pero necesito ejemplos prácticos",
                "Gracias, pero necesito más detalles",
                "Fue bastante útil",
                "Gracias, pero me gustaría más información",
                "Estuvo bien, pero no era lo que esperaba",
                "La información estuvo buena, pero quiero más detalles",
                "Gracias, pero no era lo que buscaba",
                "Gracias, pero tengo más preguntas",
                "Lo explicaste bien, pero quiero saber más",
                "Estuvo bien, pero falta información",
                "Gracias por la respuesta, pero tengo dudas",
                "Fue útil, pero quiero que lo expliques más",
                "Me quedé con más dudas, pero gracias",
                "Eso estuvo bien, pero me gustaría más detalles",
                "Gracias por la respuesta clara",
                "Fue una buena respuesta, pero necesito más ejemplos",
                "Gracias, fue lo que necesitaba",
                "Estuvo bien, pero aún tengo más preguntas",
                "La respuesta fue clara, gracias",
                "No fue lo que pensaba, pero estuvo bien",
                "Gracias, pero quiero más ejemplos",
                "Eso estuvo muy claro, gracias",
                "Me ayudaste, pero necesito más detalles",
                "Fue útil, pero quiero más ejemplos",
                "Me ayudaste, pero no resolví mi duda",
                "Fue una respuesta útil",
                "Gracias, pero quiero más detalles",
                "Lo entendí, pero quiero ejemplos",
                "La respuesta fue precisa, pero quiero más detalles",
                "Fue suficiente, gracias",
                "Gracias por la ayuda, pero no era lo que buscaba",
                "No era exactamente lo que pensaba",
                "Lo explicaste bien, pero quiero más detalles",
                "No estoy completamente satisfecho",
                "Gracias por la respuesta, pero tengo dudas",
                "La información fue útil, pero no suficiente",
                "La respuesta fue adecuada, pero necesito más ejemplos",
                "Me ayudaste, pero me gustaría más detalles",
                "Eso fue útil, pero no completo",
                "La respuesta fue buena",
                "Eso estuvo bien, pero quiero más ejemplos prácticos",
                "Me diste una buena respuesta, pero quiero saber más",
                "Fue útil, pero quiero ejemplos",
                "Estuvo bien, pero falta algo"
            ],
            "responses": [
                "Gracias por tu feedback, lo tomaré en cuenta",
                "Agradezco tu comentario, haré mi mejor esfuerzo para mejorar",
                "Gracias, me alegra que te haya servido",
                "Gracias por tus comentarios, los tomaré en cuenta",
                "Gracias, intentaré mejorar mi respuesta",
                "Te agradezco mucho tu opinión",
                "Gracias, seguiré trabajando en ello",
                "Gracias por tu retroalimentación, la tendré en cuenta",
                "Te agradezco el feedback",
                "Gracias, me alegra saber que fue útil",
                "Aprecio tus comentarios",
                "Gracias, trataré de hacer mejor la próxima vez",
                "Gracias, espero poder seguir ayudándote",
                "Gracias, tomaré tu comentario en cuenta",
                "Me alegra que haya sido útil, gracias",
                "Gracias por decirlo, ¡seguiré mejorando!",
                "Gracias por la sugerencia, la tomaré en cuenta",
                "Te agradezco por compartir tu opinión",
                "Gracias, lo seguiré mejorando",
                "Gracias, lo tendré en cuenta para futuras respuestas",
                "Gracias, espero poder ofrecerte una mejor ayuda la próxima vez",
                "Gracias por la sugerencia",
                "Aprecio que lo hayas dicho, trataré de mejorar",
                "Gracias por tus palabras, seguiré trabajando para darte mejores respuestas",
                "Gracias, espero que la próxima vez sea aún más útil",
                "Agradezco tus comentarios, ¡seguiré trabajando en ello!",
                "Gracias por la retroalimentación, me esforzaré más",
                "Aprecio tu opinión, la tomaré en cuenta para mejorar",
                "Gracias, voy a seguir mejorando",
                "Gracias, tomaré tu opinión en cuenta",
                "Agradezco tus comentarios, ¡mejoraré en la siguiente!",
                "Te agradezco el tiempo para darme tu opinión",
                "Gracias por comentar, ¡mejoraré aún más!"
            ]
        },
        {
            "tag": "chistes",
            "patterns": [
                "Cuéntame un chiste",
                "¿Me cuentas un chiste?",
                "Dime un chiste",
                "Cuéntame algo gracioso",
                "Hazme reír",
                "¿Sabes algún chiste?",
                "Cuéntame un chiste corto",
                "¿Tienes algún chiste?",
                "Dime algo divertido",
                "¿Qué tal un chiste?",
                "¿Tienes algún cuento?",
                "Cuéntame un cuento",
                "¿Me puedes contar un chiste?",
                "Hazme reír con un chiste",
                "¿Sabes algún chiste bueno?",
                "Dime un cuento corto",
                "¿Puedes contarme un chiste?"
            ],
            "responses": [
                "Claro, ¿por qué los pájaros no usan Facebook? Porque ya tienen Twitter.",
                "¿Cuál es el colmo de un electricista? No encontrar su corriente de trabajo.",
                "¿Sabes cuál es el colmo de un jardinero? Que siempre lo dejen plantado.",
                "¿Por qué el libro de matemáticas estaba triste? Porque tenía demasiados problemas.",
                "¿Cuál es el colmo de un astronauta? Tener problemas espaciales.",
                "¿Por qué los gatos no pueden hacer chistes? Porque siempre ronronean en los mejores momentos.",
                "¿Qué le dijo un gusano a otro gusano? ¡Voy a dar una vuelta a la manzana!",
                "¿Por qué los pájaros no usan Facebook? Porque ya tienen Twitter.",
                "¿Cuál es el colmo de un sastre? Perder el hilo de la conversación.",
                "¿Cómo se llama un perro mago? Un labracadabrador.",
                "¿Sabías que el sol nunca se pone triste? Porque siempre tiene un día brillante.",
                "Un hombre va al médico y le dice: ‘Doctor, me duele todo el cuerpo’. El médico responde: ‘¿Ha probado a no tocarse?’",
                "¿Cuál es el animal más divertido? El pingüino, porque siempre está en el centro de la atención.",
                "¿Sabes por qué los vampiros no tienen amigos? Porque siempre están chupando energía.",
                "¿Cuál es el colmo de un fotógrafo? No encontrar la imagen correcta.",
                "Un niño le dice a su mamá: ‘Mamá, mamá, en el colegio me llaman espejo’. La mamá le pregunta: ‘¿Y qué les respondes?’ El niño responde: ‘Nada, me quedo callado’",
                "¿Por qué el tomate no puede trabajar? Porque se descompone.",
                "¿Cómo se llama un perro sin patas? No importa cómo se llama, porque no va a venir.",
                "Un hombre le dice a su amigo: ‘Tengo una idea para un chiste’. El amigo le responde: ‘¿Ah, sí? Cuéntamelo’. Y el hombre responde: ‘No, no, es una idea, aún no está listo’",
                "¿Cómo se llama un perro que hace magia? Labracadabrador.",
                "¿Por qué las vacas no usan Internet? Porque no saben cómo conectar la vaca-pc.",
                "¿Cuál es el animal más trabajador? La abeja, porque siempre está en acción."
            ]
        },
        {
            "tag": "consultas_academicas",
            "patterns": [
                "¿Qué materias se cursan en el primer semestre?",
                "¿Qué es lo que se aprende en la carrera de ingeniería en sistemas?",
                "¿Cuáles son los temas que abarca la ingeniería en sistemas?"
            ],
            "responses": [
                "En el primer semestre se cursan materias como matemáticas, programación básica, y fundamentos de la informática.",
                "La carrera de ingeniería en sistemas cubre temas como desarrollo de software, redes, seguridad informática y bases de datos.",
                "En los primeros años aprenderás sobre lenguajes de programación, estructuras de datos y redes."
            ]
        },
        {
            "tag": "lenguajes_programacion",
            "patterns": [
                "¿Qué lenguajes de programación se enseñan?",
                "¿Aprendemos Java en esta carrera?",
                "¿Se enseña Python?"
            ],
            "responses": [
                "Se enseñan varios lenguajes de programación, incluyendo Java, Python, C++, y más.",
                "El plan de estudios incluye Java, Python y otros lenguajes importantes para el desarrollo de software.",
                "En la carrera aprenderás Python, Java y también otros lenguajes como C y C++."
            ]
        },
        {
            "tag": "proyectos_educativos",
            "patterns": [
                "¿Qué tipo de proyectos puedo hacer en la carrera?",
                "¿Hay trabajos prácticos?",
                "¿Qué proyectos puedo desarrollar durante la carrera?"
            ],
            "responses": [
                "Puedes hacer proyectos de software, aplicaciones móviles, páginas web y sistemas de bases de datos.",
                "A lo largo de la carrera, realizarás proyectos que incluyen aplicaciones web, desarrollo de software y bases de datos.",
                "La carrera incluye proyectos prácticos como aplicaciones móviles y sistemas de gestión de información."
            ]
        },
        {
            "tag": "oportunidades_laborales",
            "patterns": [
                "¿Qué trabajos puedo conseguir con esta carrera?",
                "¿Cuánto gana un ingeniero en sistemas?",
                "¿Dónde puedo trabajar al graduarme?"
            ],
            "responses": [
                "Con un título de ingeniería en sistemas, puedes trabajar en empresas de tecnología, desarrollo de software, administración de redes y más.",
                "El salario promedio de un ingeniero en sistemas varía, pero puede estar entre 20,000 y 40,000 USD al año dependiendo de la experiencia.",
                "Puedes trabajar en empresas de tecnología, en el sector bancario, de telecomunicaciones o como desarrollador freelance."
            ]
        },
        {
            "tag": "especializaciones",
            "patterns": [
                "¿En qué me puedo especializar dentro de la carrera?",
                "¿Existen especialidades dentro de ingeniería en sistemas?",
                "¿Cómo me puedo especializar en inteligencia artificial?"
            ],
            "responses": [
                "Puedes especializarte en áreas como inteligencia artificial, ciberseguridad, desarrollo de software o bases de datos.",
                "La carrera ofrece varias especializaciones como inteligencia artificial, ciencia de datos y seguridad informática.",
                "Una especialización en inteligencia artificial te permitirá trabajar en proyectos avanzados de machine learning y redes neuronales."
            ]
        },
        {
            "tag": "redes_informaticas",
            "patterns": [
                "¿Qué es una red informática?",
                "¿Se aprende a configurar redes?",
                "¿Cómo se gestionan las redes en la carrera?"
            ],
            "responses": [
                "En la carrera aprenderás sobre redes informáticas, configuración de redes y administración de servidores.",
                "Se te enseñará a gestionar redes informáticas, configurar routers y switches, así como administrar servidores.",
                "Las redes informáticas son un componente esencial de la carrera, y aprenderás sobre su instalación, configuración y seguridad."
            ]
        },
        {
            "tag": "bases_de_datos",
            "patterns": [
                "¿Qué son las bases de datos?",
                "¿Cómo se administra una base de datos?",
                "¿Qué es SQL?"
            ],
            "responses": [
                "Las bases de datos son sistemas organizados de datos que se gestionan con herramientas como MySQL, PostgreSQL o MongoDB.",
                "Aprenderás a administrar bases de datos, diseñar esquemas, realizar consultas SQL y optimizar su rendimiento.",
                "SQL es un lenguaje utilizado para gestionar bases de datos y realizar operaciones como consultas, inserciones y actualizaciones."
            ]
        },
        {
            "tag": "inteligencia_artificial",
            "patterns": [
                "¿Qué es la inteligencia artificial?",
                "¿Se estudia IA en ingeniería en sistemas?",
                "¿Cómo se aplica la inteligencia artificial en proyectos?"
            ],
            "responses": [
                "La inteligencia artificial es una rama de la informática que se dedica a la creación de sistemas que imitan la inteligencia humana.",
                "Sí, la inteligencia artificial se estudia en la carrera y se utiliza en áreas como machine learning, visión por computadora y automatización.",
                "En proyectos de IA, se aplican algoritmos y modelos para resolver problemas complejos, como la predicción de datos y el reconocimiento de patrones."
            ]
        },
        {
            "tag": "ciberseguridad",
            "patterns": [
                "¿Qué es la ciberseguridad?",
                "¿Cómo proteger los datos personales?",
                "¿Qué se estudia sobre ciberseguridad?"
            ],
            "responses": [
                "La ciberseguridad es la práctica de proteger sistemas informáticos y redes de ataques, accesos no autorizados y daños.",
                "En la carrera se enseña cómo proteger sistemas informáticos, detectar vulnerabilidades y gestionar la seguridad en redes y bases de datos.",
                "Se estudian técnicas de protección de datos, cifrado, autenticación, y prevención de ataques como el hacking ético."
            ]
        },
        {
            "tag": "consultas_generales",
            "patterns": [
                "¿Qué es ingeniería en sistemas?",
                "¿Qué se necesita para estudiar ingeniería en sistemas?",
                "¿Qué carreras están relacionadas con ingeniería en sistemas?"
            ],
            "responses": [
                "Ingeniería en Sistemas es una carrera que se enfoca en el diseño, desarrollo, implementación y gestión de sistemas informáticos y redes.",
                "Para estudiar Ingeniería en Sistemas, necesitas tener conocimientos básicos en matemáticas, programación y computación.",
                "Carreras relacionadas son ingeniería de software, ciencias de la computación, redes y telecomunicaciones."
            ]
        },
        {
            "tag": "consultas_software",
            "patterns": [
                "¿Qué programas utilizamos para desarrollar software?",
                "¿Qué IDEs son recomendables?",
                "¿Cuál es el mejor editor de código?",
                "¿Se enseña Visual Studio en esta carrera?",
                "¿Qué software necesitamos para programar?",
                "¿Es importante aprender a usar Git?",
                "¿Cómo configurar un entorno de desarrollo?",
                "¿Qué herramientas de desarrollo son esenciales?"
            ],
            "responses": [
                "Se utilizan herramientas como Visual Studio Code, Eclipse, y NetBeans para desarrollar software.",
                "Los editores recomendados son Visual Studio Code, IntelliJ IDEA y Sublime Text.",
                "Git es una herramienta fundamental para la gestión de código fuente, y sí, se enseña en la carrera.",
                "Te enseñaremos a configurar entornos de desarrollo con herramientas como Docker, Vagrant y VirtualBox.",
                "Los principales programas que se usan en desarrollo son IDEs como Visual Studio, Eclipse y herramientas de control de versiones como Git."
            ]
        },
        {
            "tag": "consultas_tecnologia",
            "patterns": [
                "¿Cuáles son las últimas tecnologías en programación?",
                "¿Qué nuevas tendencias hay en desarrollo de software?",
                "¿Cómo está la inteligencia artificial cambiando la industria?",
                "¿Qué es el desarrollo de aplicaciones móviles?",
                "¿Cuál es el futuro de la programación?",
                "¿Cómo afectan las nuevas tecnologías a los sistemas informáticos?"
            ],
            "responses": [
                "Algunas de las últimas tecnologías son la inteligencia artificial, el aprendizaje automático, blockchain y la programación en la nube.",
                "Las tendencias más recientes incluyen el uso de IA, la computación en la nube y el desarrollo de software para dispositivos móviles.",
                "La inteligencia artificial está revolucionando la automatización, el análisis de datos y la interacción con los usuarios.",
                "El desarrollo de aplicaciones móviles es el proceso de crear aplicaciones para dispositivos como smartphones y tabletas.",
                "El futuro de la programación incluye la inteligencia artificial, la automatización del código, y el uso de lenguajes funcionales."
            ]
        },
        {
            "tag": "consultas_caracteristicas_profesor",
            "patterns": [
                "¿Qué características debe tener un buen profesor de ingeniería en sistemas?",
                "¿Cómo son los profesores en esta carrera?",
                "¿Qué tipo de metodologías usan los docentes?",
                "¿Se enfocan en enseñanza práctica o teórica?",
                "¿Son los profesores accesibles fuera de clase?"
            ],
            "responses": [
                "Un buen profesor de ingeniería en sistemas debe ser accesible, tener conocimientos prácticos y habilidades de comunicación.",
                "Los profesores de esta carrera suelen tener una buena combinación de experiencia académica y profesional en tecnología.",
                "Los docentes usan metodologías activas, enfocándose en problemas reales de la industria y el uso de tecnologías actuales.",
                "Se enfocan en el aprendizaje práctico, pero también dan una base teórica sólida para entender los conceptos fundamentales.",
                "Sí, los profesores están disponibles fuera de clase para resolver dudas y ayudar con proyectos."
            ]
        },
        {
            "tag": "consultas_extracurriculares",
            "patterns": [
                "¿Qué actividades extracurriculares se pueden hacer en ingeniería en sistemas?",
                "¿Hay clubes de robótica en la carrera?",
                "¿Puedo participar en hackatones?",
                "¿Existen eventos sobre programación?",
                "¿Hay oportunidades para hacer voluntariado?"
            ],
            "responses": [
                "Puedes participar en hackatones, ferias de tecnología, conferencias y talleres relacionados con la informática.",
                "Sí, hay varios clubes de robótica y desarrollo de software donde puedes unirte para aprender y competir.",
                "Sí, los hackatones son muy populares y puedes participar en eventos organizados por la universidad o empresas.",
                "Existen muchos eventos como conferencias, webinars y competencias de programación que ayudan a expandir tu red profesional.",
                "Además de los eventos, también hay oportunidades de voluntariado en proyectos tecnológicos y ONG relacionadas con la educación."
            ]
        },
        {
            "tag": "consultas_bibliografia",
            "patterns": [
                "¿Qué libros puedo leer para mejorar en programación?",
                "¿Hay alguna bibliografía recomendada?",
                "¿Cuáles son los mejores recursos para aprender sobre bases de datos?",
                "¿Dónde puedo encontrar buenos tutoriales sobre inteligencia artificial?",
                "¿Qué recursos me recomiendas para estudiar más sobre redes?"
            ],
            "responses": [
                "Para aprender más sobre programación, te recomiendo libros como 'Clean Code' de Robert C. Martin y 'Eloquent JavaScript'.",
                "Hay varios libros y recursos en línea, por ejemplo, 'Introduction to Algorithms' para estructuras de datos y 'Design Patterns'.",
                "Puedes encontrar tutoriales en sitios como Coursera, edX, y libros como 'Database System Concepts'.",
                "Para IA, te sugiero 'Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow'.",
                "Para redes, puedes estudiar el libro 'Computer Networking: A Top-Down Approach'."
            ]
        },
        {
            "tag": "consultas_proyectos_finales",
            "patterns": [
                "¿Qué es un proyecto final en ingeniería en sistemas?",
                "¿Cómo me preparo para el proyecto de grado?",
                "¿Qué tipo de proyectos finales son comunes en esta carrera?",
                "¿Es necesario hacer un trabajo de investigación?",
                "¿Qué requisitos debo cumplir para presentar mi proyecto final?"
            ],
            "responses": [
                "El proyecto final es una oportunidad para demostrar los conocimientos adquiridos durante la carrera, a menudo incluye la creación de un software o sistema.",
                "Para el proyecto de grado, debes preparar una propuesta, seguir una metodología de desarrollo y presentar resultados en un informe y presentación.",
                "Los proyectos finales suelen involucrar la creación de aplicaciones web, sistemas de gestión de bases de datos o proyectos de ciberseguridad.",
                "Sí, algunos proyectos finales requieren un componente de investigación, dependiendo de la especialización.",
                "Para presentar el proyecto final, debes cumplir con los requisitos establecidos por el programa, como la presentación de un informe completo y defensa ante un tribunal."
            ]
        },
        {
            "tag": "consultas_tiempos_de_estudio",
            "patterns": [
                "¿Cuántas horas al día se necesita estudiar para esta carrera?",
                "¿Es difícil la carrera de ingeniería en sistemas?",
                "¿Cómo puedo organizar mi tiempo de estudio?",
                "¿Qué tan demandante es esta carrera?",
                "¿Cuántas horas de estudio por semana se requieren?"
            ],
            "responses": [
                "El tiempo de estudio depende del semestre, pero en promedio se recomienda dedicar entre 3 a 4 horas diarias para las materias.",
                "La carrera tiene una carga de trabajo significativa, pero con buena organización puedes manejar las asignaturas.",
                "Una buena organización es clave. Utiliza horarios, establece prioridades y no dejes todo para último minuto.",
                "Es una carrera desafiante, pero si te apasiona la informática, te resultará muy satisfactoria.",
                "Se recomienda estudiar al menos 15-20 horas por semana, dependiendo de los exámenes y proyectos."
            ]
        },
        {
            "tag": "consultas_nivel_de_dificultad",
            "patterns": [
                "¿Es difícil estudiar ingeniería en sistemas?",
                "¿Qué tan complicada es la carrera?",
                "¿Cómo puedo hacer para aprobar las materias difíciles?",
                "¿Qué asignaturas son las más difíciles?",
                "¿Es una carrera exigente?"
            ],
            "responses": [
                "La carrera puede ser desafiante, pero con dedicación y organización, puedes tener éxito.",
                "Algunas materias como matemáticas, algoritmos y estructuras de datos pueden resultar difíciles, pero son fundamentales para el desarrollo.",
                "Para aprobar las materias difíciles, te recomiendo estudiar con antelación, asistir a clases, y practicar mucho.",
                "Las asignaturas más difíciles suelen ser las que implican programación avanzada y matemáticas, pero con práctica todo mejora.",
                "Sí, es una carrera exigente, pero la satisfacción de resolver problemas complejos es muy gratificante."
            ]
        },
        {
            "tag": "consultas_citas",
            "patterns": [
                "Dame una cita inspiradora",
                "¿Tienes alguna cita motivacional?",
                "Cuéntame una cita que me inspire",
                "Quiero leer una frase que me motive",
                "¿Tienes alguna cita de superación personal?",
                "Dame una frase que me haga pensar",
                "Quiero una cita positiva",
                "Cuéntame algo que me dé esperanza",
                "¿Sabes alguna cita sobre el éxito?",
                "¿Puedes darme una frase que me inspire a seguir adelante?",
                "Dime una cita sobre la vida",
                "¿Tienes alguna frase que me ayude a ser más fuerte?",
                "Dame una cita que me haga sentir mejor",
                "¿Tienes una cita sobre la perseverancia?",
                "Cuéntame una cita que me motive a mejorar",
                "Quiero una frase de ánimo",
                "Dame una cita que me impulse a no rendirme",
                "¿Puedes darme una cita sobre el esfuerzo?",
                "Quiero escuchar una cita sobre el trabajo duro",
                "¿Sabes alguna cita que hable sobre la valentía?",
                "Cuéntame una cita sobre el coraje",
                "¿Tienes alguna cita sobre el cambio?",
                "Dame una cita de alguien famoso",
                "¿Puedes decirme una cita sobre la esperanza?",
                "Quiero leer una cita sobre el futuro",
                "¿Tienes alguna cita sobre la confianza?",
                "Dame una frase sobre la resiliencia",
                "¿Me puedes dar una cita sobre la motivación diaria?",
                "Quiero una frase sobre la vida y el amor",
                "Cuéntame una cita sobre la fortaleza",
                "Dame una cita que me ayude a seguir adelante",
                "¿Tienes alguna cita que inspire paz?",
                "Quiero una cita sobre el optimismo",
                "¿Sabes alguna cita sobre el éxito personal?",
                "Dame una cita que me haga reflexionar",
                "¿Puedes darme una frase que me inspire a ser mejor?",
                "Quiero escuchar una cita sobre la superación",
                "Dime una cita que me dé energía",
                "¿Tienes una cita sobre el crecimiento personal?",
                "Dame una cita sobre aprender de los errores",
                "Quiero una cita sobre alcanzar metas",
                "¿Sabes alguna cita sobre la paciencia?",
                "Dame una cita que me ayude a encontrar la paz interior",
                "Cuéntame una cita sobre la felicidad",
                "Dame una frase que me haga sentir inspirado",
                "¿Tienes una cita que hable sobre el valor de seguir luchando?"
            ],
            "responses": [
                "La vida no se mide por las veces que respiramos, sino por los momentos que nos dejan sin aliento. – George Carlin",
                "No te rindas, cada fracaso es una lección para llegar al éxito. – Albert Einstein",
                "Lo único imposible es aquello que no intentas. – Jeanette Coron",
                "La felicidad no es algo hecho. Viene de tus propias acciones. – Dalai Lama",
                "El futuro pertenece a aquellos que creen en la belleza de sus sueños. – Eleanor Roosevelt",
                "Lo que no te mata te hace más fuerte. – Friedrich Nietzsche",
                "Haz hoy lo que otros no quieren hacer, haz mañana lo que otros no pueden hacer. – Jerry Rice",
                "El único modo de hacer un gran trabajo es amar lo que haces. – Steve Jobs",
                "El éxito es la suma de pequeños esfuerzos repetidos día tras día. – Robert Collier",
                "No importa cuántas veces caigas, lo importante es cuántas veces te levantas. – Nelson Mandela",
                "La vida comienza donde termina tu zona de confort. – Neale Donald Walsch",
                "El único lugar donde el éxito viene antes que el trabajo es en el diccionario. – Vidal Sassoon",
                "Sé el cambio que deseas ver en el mundo. – Mahatma Gandhi",
                "Si puedes soñarlo, puedes hacerlo. – Walt Disney",
                "La mejor forma de predecir el futuro es crearlo. – Abraham Lincoln",
                "No hay camino hacia la felicidad, la felicidad es el camino. – Buddha",
                "La perseverancia es la clave del éxito. – Charlie Chaplin",
                "Cuando una puerta se cierra, otra se abre. – Alexander Graham Bell",
                "Todo lo que puedas imaginar es real. – Pablo Picasso",
                "La vida no es esperar a que pase la tormenta, es aprender a bailar bajo la lluvia. – Anónimo",
                "El único modo de hacer un gran trabajo es amar lo que haces. – Steve Jobs",
                "La diferencia entre lo que somos y lo que queremos ser, es lo que hacemos. – Anónimo",
                "El éxito no es la clave de la felicidad. La felicidad es la clave del éxito. – Albert Schweitzer",
                "El dolor es temporal, la gloria es para siempre. – Lance Armstrong",
                "La vida es como andar en bicicleta. Para mantener el equilibrio, debes seguir adelante. – Albert Einstein",
                "Nuestro mayor miedo no es que seamos inadecuados, nuestro mayor miedo es que somos poderosos más allá de toda medida. – Marianne Williamson",
                "El hombre que mueve montañas comienza cargando pequeñas piedras. – Confucio",
                "Es durante nuestros momentos más oscuros cuando debemos enfocarnos para ver la luz. – Aristóteles",
                "La clave del éxito es comenzar antes de estar listo. – Marie Forleo",
                "Todo lo que necesitas está dentro de ti. – Anónimo",
                "La mejor manera de predecir tu futuro es crearlo. – Abraham Lincoln",
                "La vida es 10% lo que nos sucede y 90% cómo reaccionamos ante ello. – Charles R. Swindoll",
                "El mayor error que puedes cometer es tener miedo de cometer errores. – Elbert Hubbard",
                "Solo aquellos que se atreven a tener grandes fracasos terminan logrando grandes éxitos. – Robert F. Kennedy",
                "El éxito es la habilidad de ir de fracaso en fracaso sin perder el entusiasmo. – Winston Churchill",
                "El único límite a nuestro logro de mañana está en nuestras dudas y vacilaciones de hoy. – Franklin D. Roosevelt",
                "Haz lo que puedas, con lo que tienes, donde estés. – Theodore Roosevelt",
                "El miedo es el enemigo de la acción. – Anónimo",
                "La vida es corta, no pierdas el tiempo viviendo la vida de otra persona. – Steve Jobs",
                "Si no te desafía, no te cambia. – Anónimo",
                "Recuerda que no conseguir lo que quieres es a veces un maravilloso golpe de suerte. – Dalai Lama",
                "La paz comienza con una sonrisa. – Madre Teresa",
                "Tu vida no mejora por casualidad, mejora por el cambio. – Jim Rohn",
                "Cada día es una nueva oportunidad para cambiar tu vida. – Anónimo",
                "La clave para alcanzar tus sueños es creer en ti mismo. – Anónimo",
                "Cree en ti mismo y todo será posible. – Anónimo",
                "Cuando dejas de perseguir las cosas equivocadas, dejas espacio para lo correcto. – Anónimo",
                "No mires el reloj; haz lo que hace, sigue adelante. – Sam Levenson",
                "La fuerza no proviene de la capacidad corporal, sino de la voluntad del alma. – Mahatma Gandhi",
                "Haz de tu vida un sueño, y de tu sueño una realidad. – Antoine de Saint-Exupéry"
            ]
        },
        {
            "tag": "constula_recomendaciones",
            "patterns": [
                "¿Tienes alguna recomendación de libro?",
                "Recomiéndame una película",
                "¿Me puedes sugerir un libro para leer?",
                "Dame una recomendación de serie",
                "Recomiéndame una película para ver esta noche",
                "¿Tienes algún libro que me pueda interesar?",
                "¿Qué libro me recomiendas?",
                "¿Cuál es una buena película para ver?",
                "Sugiéreme una serie interesante",
                "¿Qué libro debería leer?",
                "Recomiéndame una película de acción",
                "¿Tienes alguna película que me pueda gustar?",
                "¿Me puedes recomendar algo para leer?",
                "Dame una recomendación de película de ciencia ficción",
                "¿Qué película me sugieres?",
                "Sugiéreme una novela de misterio",
                "Recomiéndame una serie de comedia",
                "¿Qué libro es ideal para una tarde tranquila?",
                "¿Puedes recomendarme una película de terror?",
                "¿Tienes alguna recomendación de ficción histórica?",
                "Recomiéndame un buen libro de no ficción",
                "¿Cuál es una buena película para un maratón?",
                "Dame una recomendación de libro de autoayuda",
                "¿Tienes alguna recomendación para ver en Netflix?",
                "Recomiéndame una película de drama",
                "¿Qué libro debería leer si me gusta el suspenso?",
                "Sugiéreme una serie de fantasía",
                "¿Puedes recomendarme algo para leer esta semana?",
                "¿Tienes alguna recomendación para un fin de semana relajado?",
                "Recomiéndame una película basada en hechos reales",
                "¿Cuál es un buen libro de aventuras?",
                "¿Tienes alguna recomendación de libro clásico?",
                "Recomiéndame una película de animación",
                "¿Qué libro me ayudará a mejorar mis habilidades?",
                "Recomiéndame una película de misterio",
                "¿Qué serie está de moda actualmente?",
                "Recomiéndame una película para un día lluvioso",
                "¿Tienes alguna recomendación de comedia?",
                "Recomiéndame un libro para alguien que ama la ciencia ficción",
                "Sugiéreme una película inspiradora",
                "¿Qué libro sobre crecimiento personal me recomendarías?",
                "Recomiéndame una serie para maratonear",
                "¿Qué película debería ver si me gusta la acción?",
                "Dame una recomendación de libro de aventuras y fantasía",
                "¿Tienes alguna recomendación de biografía?",
                "Recomiéndame una película para ver con amigos",
                "¿Qué libro de fantasía me recomendarías?",
                "¿Qué libro me sugieres para leer este mes?",
                "Recomiéndame una película de acción reciente",
                "Tengo ganas de ver algo de ciencia ficción, ¿qué me recomiendas?",
                "Sugiéreme una serie de suspenso",
                "¿Conoces alguna buena novela histórica?",
                "¿Qué película de drama me puedes recomendar?",
                "Quiero leer un libro sobre desarrollo personal, ¿qué me sugieres?",
                "Recomiéndame una película para un maratón de fin de semana",
                "¿Qué serie de comedia me recomiendas?",
                "Tengo interés en la fantasía, ¿qué libro me recomiendas?",
                "¿Qué serie me gustaría si me gusta la ciencia ficción?",
                "¿Cuál es tu recomendación para una película romántica?",
                "¿Qué novela de misterio me sugerirías?",
                "¿Qué libro de no ficción me recomendarías?",
                "¿Me puedes recomendar una película de aventuras?",
                "¿Qué serie de Netflix me recomendarías?",
                "Estoy buscando algo de terror, ¿qué película me sugieres?",
                "¿Qué serie de crimen me recomendarías?",
                "Tengo ganas de leer algo de literatura clásica, ¿qué me recomiendas?",
                "Recomiéndame una película para una noche tranquila en casa",
                "¿Qué serie de fantasía me puedes recomendar?",
                "¿Qué película basada en hechos reales me sugieres?",
                "Recomiéndame un libro de terror",
                "Estoy buscando una serie para maratonear, ¿qué me sugieres?",
                "¿Cuál es un buen libro para mejorar mis habilidades profesionales?",
                "Recomiéndame una película para ver con la familia",
                "¿Qué serie de ciencia ficción me recomendarías?",
                "¿Qué película me recomiendas si me gustan las películas de superhéroes?",
                "Sugiéreme un libro de aventuras",
                "Recomiéndame un libro sobre filosofía",
                "¿Tienes alguna película inspiradora para ver?",
                "Quiero leer algo que me haga pensar, ¿qué libro me sugieres?",
                "¿Qué película histórica me recomendarías?",
                "¿Qué libro debería leer si me gusta la ciencia ficción?",
                "Recomiéndame una película de terror para esta noche.",
                "¿Qué serie de aventuras me sugieres?",
                "Estoy buscando un libro que hable sobre liderazgo, ¿cuál me recomiendas?",
                "Quiero ver algo con acción, ¿tienes alguna recomendación?",
                "¿Qué película clásica debería ver?",
                "¿Qué libro es perfecto para alguien que ama la fantasía?",
                "Recomiéndame una serie de drama psicológico.",
                "¿Qué novela histórica debería leer?",
                "¿Tienes alguna recomendación para un libro de misterio?",
                "¿Qué película romántica puedo ver este fin de semana?",
                "Estoy buscando una serie de crimen, ¿cuál me recomiendas?",
                "¿Qué libro sobre autoayuda me sugieres?",
                "Recomiéndame una película para ver con amigos.",
                "¿Qué serie de ciencia ficción te parece imperdible?",
                "Quiero leer algo de aventuras épicas, ¿qué me recomiendas?",
                "¿Tienes alguna sugerencia para una novela de suspenso?",
                "¿Qué película podría gustarme si me gusta el cine independiente?",
                "Recomiéndame un libro que trate sobre el crecimiento personal.",
                "Estoy buscando una película de acción y ciencia ficción, ¿cuál me sugieres?",
                "¿Qué serie de comedia me recomiendas para una noche tranquila?",
                "¿Cuál es el mejor libro para alguien que ama los thrillers?",
                "¿Qué película de suspenso no debería perderme?",
                "¿Tienes algún libro que trate sobre la historia antigua?",
                "Recomiéndame una película de aventuras para ver en familia.",
                "¿Qué libro puedo leer si quiero mejorar mis habilidades sociales?",
                "Sugiéreme una película para ver si me gustan las historias inspiradoras.",
                "¿Qué serie de suspenso está de moda?",
                "Si me gusta el cine de ciencia ficción, ¿qué película debería ver?",
                "Recomiéndame un libro sobre filosofía contemporánea.",
                "¿Qué película de animación me recomendarías?",
                "¿Qué serie te parece ideal para una maratón este fin de semana?"
            ],
            "responses": [
                "Si te gustan los libros de misterio, te recomiendo 'La chica del tren' de Paula Hawkins.",
                "Para una buena película de acción, te sugiero 'Mad Max: Fury Road'.",
                "Si estás buscando algo de ciencia ficción, 'Dune' de Frank Herbert es un clásico que no puedes perderte.",
                "Una gran recomendación de libro de no ficción es 'Sapiens: De animales a dioses' de Yuval Noah Harari.",
                "Si te gustan las comedias, te sugiero la película 'The Hangover'.",
                "Si te interesa la fantasía, 'El nombre del viento' de Patrick Rothfuss es una excelente opción.",
                "Para un thriller intrigante, 'La chica en la telaraña' de David Lagercrantz es una lectura imperdible.",
                "Si te gusta el terror psicológico, te recomiendo la película 'Hereditary'.",
                "Para una serie de suspenso, 'Breaking Bad' es una de las mejores de todos los tiempos.",
                "Si te gustan las novelas históricas, 'El médico' de Noah Gordon es una gran opción.",
                "Una película excelente para un maratón es 'The Lord of the Rings' (El Señor de los Anillos).",
                "Te recomiendo 'El poder del ahora' de Eckhart Tolle, un libro de autoayuda sobre vivir en el presente.",
                "Si te gustan las películas de superhéroes, 'Avengers: Endgame' es imperdible.",
                "Para una película emotiva, 'La teoría del todo' sobre la vida de Stephen Hawking es una excelente opción.",
                "Si te gusta la ciencia ficción, 'Fahrenheit 451' de Ray Bradbury es una excelente novela.",
                "Para un libro inspirador sobre el éxito, 'Piense y hágase rico' de Napoleon Hill es una gran opción.",
                "Si te gustan las películas de animación, 'Coco' de Disney es encantadora y emotiva.",
                "Si te interesa el crecimiento personal, te sugiero 'Los 7 hábitos de la gente altamente efectiva' de Stephen Covey.",
                "Si buscas una película para maratonear, 'Inception' es una excelente opción.",
                "Una buena serie de comedia es 'The Office'. Te hará reír mucho.",
                "Si te gusta el suspenso, 'La verdad sobre el caso Harry Quebert' de Joël Dicker es una gran elección.",
                "Si te interesa un libro sobre filosofía, te recomiendo 'Meditaciones' de Marco Aurelio.",
                "Si te gustan las películas de drama, 'The Shawshank Redemption' es una de las mejores de todos los tiempos.",
                "Una recomendación para los fanáticos de la literatura clásica es 'Orgullo y prejuicio' de Jane Austen.",
                "Si te gustan los libros de aventuras, 'El hobbit' de J.R.R. Tolkien es perfecto.",
                "Para una serie de ciencia ficción, 'Stranger Things' tiene mucha acción y misterio.",
                "Si buscas algo inspirador, 'The Pursuit of Happyness' (En busca de la felicidad) es una película que te motivará.",
                "Para un libro sobre liderazgo, 'Liderazgo' de John C. Maxwell es una excelente opción.",
                "Si buscas una película romántica, 'The Notebook' (El diario de Noah) es un clásico.",
                "Una gran recomendación para alguien que ama la ciencia ficción es 'Neuromancer' de William Gibson.",
                "Si te gustan las películas históricas basadas en hechos reales, '12 Years a Slave' es una excelente opción.",
                "Si quieres leer una biografía, 'Steve Jobs' de Walter Isaacson es muy inspiradora.",
                "Para una serie de fantasía, 'Game of Thrones' es épica.",
                "Si te gustan las películas de acción, te recomiendo 'John Wick' con Keanu Reeves.",
                "Si te interesan los libros de autoayuda, 'Los secretos de la mente millonaria' de T. Harv Eker es muy popular.",
                "Si buscas una película de terror psicológico, 'The Witch' es perfecta.",
                "Te sugiero 'El nombre del viento' de Patrick Rothfuss si te gustan las novelas de fantasía épica.",
                "Una excelente recomendación de libro es 'Cien años de soledad' de Gabriel García Márquez, un clásico de la literatura.",
                "Si te gustan las películas de suspenso y drama, 'Gone Girl' (Perdida) es una gran opción.",
                "Para una serie interesante, 'Black Mirror' tiene episodios que te harán reflexionar sobre la tecnología.",
                "Si buscas una recomendación de película romántica, 'La La Land' es un musical encantador.",
                "Para algo de aventura, te recomiendo 'La trilogía de El Señor de los Anillos'.",
                "Si te gustan las novelas de suspenso, te recomiendo 'El silencio de los corderos' de Thomas Harris.",
                "Para una película de acción reciente, te sugiero 'Mad Max: Furiosa' si te gustó la original.",
                "Si buscas ciencia ficción, 'La mano izquierda de la oscuridad' de Ursula K. Le Guin es una excelente opción.",
                "Para una serie de suspenso, te recomiendo 'True Detective'. Es un clásico moderno.",
                "Si te gustan las novelas históricas, te sugiero 'Los pilares de la tierra' de Ken Follett.",
                "Si buscas una película de drama, 'La La Land' es una opción emotiva y visualmente impresionante.",
                "Para algo de desarrollo personal, te recomiendo 'El poder del hábito' de Charles Duhigg.",
                "Si necesitas una película para un maratón, te sugiero 'The Dark Knight Trilogy' de Christopher Nolan.",
                "Si te gustan las comedias, 'Parks and Recreation' es una serie para disfrutar y reír.",
                "Para algo de fantasía, te recomiendo 'El ciclo de la puerta de la muerte' de Margaret Weis.",
                "Si te gustan las series de ciencia ficción, 'The Expanse' es una opción imperdible.",
                "Si prefieres algo romántico, te sugiero '500 días con ella', es una película que mezcla drama y comedia.",
                "Para un buen misterio, 'La chica del tren' de Paula Hawkins es intrigante y emocionante.",
                "Te recomiendo 'Sapiens: De animales a dioses' de Yuval Noah Harari si te interesan los libros de no ficción.",
                "Si buscas una película de aventuras, 'Indiana Jones y los cazadores del arca perdida' es un clásico.",
                "Si estás buscando algo en Netflix, 'The Crown' es una serie histórica impresionante.",
                "Si quieres ver una película de terror, 'It Follows' es una opción aterradora.",
                "Para una serie de crimen, 'Mindhunter' es fascinante si te gustan las investigaciones criminales.",
                "Te sugiero 'Crimen y castigo' de Dostoyevski si te atrae la literatura clásica.",
                "Si quieres una película para relajarte, 'El Gran Hotel Budapest' es perfecta para una noche tranquila.",
                "Si buscas una serie de fantasía, 'The Witcher' tiene una trama épica basada en la saga de Andrzej Sapkowski.",
                "Para algo basado en hechos reales, '12 años de esclavitud' es una excelente película histórica.",
                "Si te gustan los libros de terror, 'El resplandor' de Stephen King es un clásico que te cautivará.",
                "Si buscas una serie para maratonear, 'Breaking Bad' es una de las mejores de todos los tiempos.",
                "Para mejorar tus habilidades profesionales, te sugiero 'Los 7 hábitos de la gente altamente efectiva' de Stephen Covey.",
                "Si buscas una película para ver con la familia, 'Coco' es una opción tierna y conmovedora.",
                "Si te gusta la ciencia ficción, 'Altered Carbon' es una serie que te hará cuestionar la identidad y la conciencia.",
                "Para una película de superhéroes, te sugiero 'Spider-Man: Into the Spider-Verse', es visualmente impresionante.",
                "Si buscas un libro de aventuras, 'La isla del tesoro' de Robert Louis Stevenson es un clásico del género.",
                "Si te interesa la filosofía, 'El mundo de Sofía' de Jostein Gaarder es una opción fácil de leer y profunda.",
                "Si buscas una película inspiradora, 'La vida es bella' te emocionará profundamente.",
                "Si buscas un libro que te haga pensar, 'El arte de la guerra' de Sun Tzu es un excelente desafío intelectual.",
                "Si te gustan las películas históricas, 'La lista de Schindler' es un retrato impresionante de la Segunda Guerra Mundial.",
                "Si te gusta la ciencia ficción, te recomiendo 'La guerra de los mundos' de H.G. Wells.",
                "Si buscas una película de terror, 'El conjuro' es una opción aterradora y bien ejecutada.",
                "Para una serie de aventuras, te sugiero 'The Mandalorian'.",
                "Si estás interesado en liderazgo, 'Los 5 niveles de liderazgo' de John C. Maxwell es una excelente opción.",
                "Si buscas acción, te recomiendo 'Gladiator', una película épica llena de combate y emoción.",
                "Si te gustan las películas clásicas, 'Casablanca' es un imprescindible del cine.",
                "Para los amantes de la fantasía, 'La materia oscura' de Philip Pullman es una saga fascinante.",
                "Si quieres ver una serie de drama psicológico, 'Mindhunter' es fascinante y te mantendrá intrigado.",
                "Para una novela histórica, te sugiero 'El nombre de la rosa' de Umberto Eco.",
                "Si te gusta el misterio, 'Los hombres que no amaban a las mujeres' de Stieg Larsson es una lectura intrigante.",
                "Para una película romántica, 'Notting Hill' es una opción encantadora y emotiva.",
                "Si buscas una serie de crimen, 'Sherlock' es moderna, intrigante y con grandes actuaciones.",
                "Para un buen libro de autoayuda, 'El monje que vendió su Ferrari' de Robin Sharma es muy inspirador.",
                "Si buscas una película para ver con amigos, 'Guardians of the Galaxy' es perfecta para divertirse juntos.",
                "Si te gusta la ciencia ficción, 'Black Mirror' tiene episodios que reflexionan sobre la tecnología.",
                "Si te gustan las aventuras épicas, 'El nombre del viento' de Patrick Rothfuss es una excelente opción.",
                "Para un buen suspenso, te recomiendo 'La caverna' de José Saramago, un libro que te mantendrá pensativo.",
                "Si buscas una película independiente, 'Her' de Spike Jonze es una excelente opción de cine más reflexivo.",
                "Para el crecimiento personal, te sugiero 'Despierta tu héroe interior' de Victor Hugo Manzanilla.",
                "Si te gustan las películas de acción y ciencia ficción, 'Matrix' es un clásico que no te puedes perder.",
                "Para una comedia relajante, te recomiendo 'The Good Place'. Es ligera y divertida.",
                "Si te gustan los thrillers, 'El psicoanalista' de John Katzenbach es una novela fascinante y perturbadora.",
                "Si buscas suspenso, 'Los otros' es una película de terror psicológico que te mantendrá en tensión.",
                "Si te interesa la historia antigua, 'El asesinato de Sócrates' de Vladimir G. Gubelman es una novela histórica entretenida.",
                "Para una película de aventuras en familia, te recomiendo 'Pirates of the Caribbean: The Curse of the Black Pearl'.",
                "Para mejorar tus habilidades sociales, 'Cómo ganar amigos e influir sobre las personas' de Dale Carnegie es muy útil.",
                "Si buscas una película inspiradora, 'The Pursuit of Happyness' es una opción muy emotiva.",
                "Si te interesa el suspenso, te sugiero 'Bodyguard', una serie emocionante y llena de giros inesperados.",
                "Si te gusta la ciencia ficción, te recomiendo 'Interstellar', una película con una historia profunda sobre el tiempo y el espacio.",
                "Para un libro de filosofía contemporánea, 'El mundo de Sofía' de Jostein Gaarder es un buen punto de partida.",
                "Si te gustan las películas de animación, 'Spider-Man: Into the Spider-Verse' es visualmente impresionante.",
                "Si estás buscando una serie para maratonear, 'Stranger Things' es perfecta para sumergirse en un mundo de misterio y ciencia ficción."
            ]
        },
        {
            "tag": "consultas_empatias",
            "patterns": [
                "Estoy pasando por un mal momento, ¿puedes ayudarme?",
                "Me siento triste, ¿qué puedo hacer?",
                "Hoy no es un buen día para mí.",
                "Estoy muy cansado/a, necesito un poco de apoyo.",
                "Me siento un poco perdido/a, ¿tienes algún consejo?",
                "Estoy preocupado/a por algo, ¿puedes escucharme?",
                "No sé cómo salir de esta situación, me siento atrapado/a.",
                "Me siento solo/a, ¿puedes decirme algo que me anime?",
                "Tengo miedo de enfrentar lo que viene, ¿puedes darme ánimos?",
                "Siento que no puedo más, ¿qué hago?",
                "¿Algún consejo para lidiar con el estrés?",
                "Hoy todo parece ir mal, ¿puedes decirme algo positivo?",
                "Me siento agotado/a emocionalmente, ¿qué puedo hacer?",
                "Me siento fuera de lugar, ¿puedes ayudarme a sentirme mejor?",
                "Todo me está afectando mucho, ¿cómo lo manejo?",
                "Estoy muy confundido/a, ¿qué opinas sobre esto?",
                "No sé cómo seguir adelante, ¿algún consejo?",
                "Siento que no tengo fuerzas para seguir, ¿me puedes ayudar?",
                "Hoy estoy muy desanimado/a, ¿puedes darme apoyo?",
                "Me siento abrumado/a por todo lo que está pasando.",
                "¿Cómo puedo lidiar con la ansiedad?",
                "Tengo miedo de que todo salga mal, ¿puedes darme alguna esperanza?",
                "Me siento derrotado/a, ¿puedes darme palabras de ánimo?",
                "Hoy no puedo dejar de pensar en lo que me preocupa.",
                "¿Cómo puedo recuperar mi motivación?",
                "Siento que todo está fuera de control, ¿qué hago?",
                "Estoy muy estresado/a, ¿algún consejo para calmarme?",
                "Me siento muy triste, ¿qué puedo hacer para sentirme mejor?",
                "Estoy luchando con mis pensamientos, ¿puedes ayudarme?",
                "Me siento perdido/a y no sé por dónde empezar.",
                "Estoy pasando por una etapa difícil, ¿cómo puedo seguir adelante?",
                "Siento que no soy suficiente, ¿puedes decirme algo positivo?",
                "Me siento solo/a, ¿tienes algo que me consuele?",
                "No sé cómo afrontar lo que está pasando, ¿qué hago?",
                "Me siento muy inseguro/a, ¿cómo puedo aumentar mi confianza?",
                "Estoy pasando por una crisis, ¿puedes darme algún consejo?",
                "Tengo mucho miedo, ¿qué puedo hacer para calmarme?",
                "Me siento muy mal, ¿puedes ayudarme a sentirme mejor?",
                "Me siento incapaz de seguir, ¿puedes darme apoyo?",
                "Estoy sintiendo mucha presión, ¿qué hago para aliviarlo?",
                "Estoy enfrentando una situación difícil, ¿puedes ayudarme?",
                "Me siento abrumado/a por las emociones, ¿cómo lo gestiono?",
                "¿Cómo puedo dejar de sentirme tan ansioso/a?",
                "Me siento frustrado/a, ¿tienes algún consejo?",
                "Estoy pasando por un momento difícil, ¿puedes escucharme?",
                "Me siento desconectado/a de todo, ¿cómo lo soluciono?",
                "No sé cómo seguir adelante, ¿puedes ayudarme a encontrar fuerzas?",
                "Hoy me siento sin energía, ¿qué puedo hacer para mejorar?",
                "Siento que todo me está sobrepasando, ¿cómo puedo manejarlo?",
                "Me siento vacío/a por dentro, ¿cómo puedo cambiar esto?",
                "No encuentro el sentido a lo que estoy haciendo, ¿me puedes ayudar?",
                "Estoy pasando por una mala racha, ¿tienes algún consejo?",
                "Me siento incompleto/a, ¿cómo puedo mejorar mi estado de ánimo?",
                "A veces todo me parece un caos, ¿cómo puedo encontrar paz?",
                "No sé cómo seguir adelante con todo lo que tengo que hacer.",
                "Estoy muy desmotivado/a, ¿cómo puedo encontrar mi propósito?",
                "Siento que no soy capaz de enfrentar mis responsabilidades.",
                "Me siento perdido/a en mi vida, ¿algún consejo?",
                "A veces siento que mis problemas no tienen solución, ¿qué opinas?",
                "Me siento tan confundido/a, no sé qué hacer con mi vida.",
                "Siento que ya no tengo control sobre nada, ¿cómo puedo manejarlo?",
                "No sé cómo equilibrar todo lo que tengo que hacer, ¿algún consejo?",
                "Estoy tan preocupado/a por el futuro, ¿cómo puedo aliviar esta ansiedad?",
                "Me siento tan atrapado/a en mis pensamientos, ¿cómo puedo liberarme?",
                "Me siento agotado/a mentalmente, ¿qué puedo hacer para descansar?",
                "Hoy todo parece más difícil de lo normal, ¿cómo puedo sobrellevarlo?",
                "No puedo dejar de pensar en lo que pasó, ¿cómo puedo dejarlo ir?",
                "Siento que ya no soy el/la mismo/a, ¿cómo puedo volver a ser yo?",
                "Me siento fuera de lugar, ¿cómo puedo encajar en este entorno?",
                "Tengo miedo de perder el control, ¿cómo puedo manejar mi ansiedad?",
                "Siento que he fallado, ¿cómo puedo superar esta sensación?",
                "Estoy tan abrumado/a que no sé por dónde empezar.",
                "No sé cómo manejar mi estrés, ¿qué debo hacer?",
                "Siento que todo lo que hago está mal, ¿cómo puedo cambiar esto?",
                "Me siento distante de los demás, ¿cómo puedo reconectar?",
                "Tengo muchas dudas sobre lo que estoy haciendo, ¿puedes darme un consejo?",
                "Estoy en una encrucijada, no sé qué camino tomar.",
                "Me siento solo/a en mis luchas, ¿cómo puedo encontrar apoyo?",
                "Estoy tan cansado/a emocionalmente, ¿cómo puedo recargarme?",
                "Me siento vacío/a y sin dirección, ¿qué puedo hacer al respecto?",
                "No sé cómo lidiar con mis miedos, ¿cómo puedo enfrentarlos?",
                "Siento que no tengo control sobre mi vida, ¿cómo puedo tomar las riendas?",
                "Me siento incapaz de tomar decisiones, ¿cómo puedo aclarar mi mente?",
                "Todo me está superando, ¿cómo puedo organizar mis pensamientos?",
                "Estoy pasando por una situación difícil, ¿cómo puedo superarla?",
                "Siento que no me escuchan, ¿cómo puedo expresarme mejor?",
                "Estoy pasando por un período de cambio, ¿cómo puedo adaptarme mejor?",
                "No sé si voy por el camino correcto, ¿cómo puedo saberlo?",
                "Me siento muy inseguro/a, ¿cómo puedo recuperar mi confianza?",
                "Estoy en un momento difícil de mi vida, ¿tienes algún consejo?",
                "Me siento tan frustrado/a con todo, ¿cómo puedo encontrar la calma?",
                "Últimamente me siento completamente perdido/a en lo que estoy haciendo.",
                "Me siento muy frustrado/a con todo, ¿cómo puedo dejar de sentirme así?",
                "No sé si estoy tomando las decisiones correctas, ¿cómo puedo aclarar mis pensamientos?",
                "Estoy muy preocupado/a por algo que no puedo controlar, ¿qué hago?",
                "Siento que ya no tengo fuerzas para seguir adelante, ¿qué puedo hacer?",
                "Me siento tan solo/a en este proceso, ¿cómo puedo encontrar apoyo?",
                "Últimamente no encuentro motivación para nada, ¿cómo puedo superarlo?",
                "Todo parece ir de mal en peor, ¿cómo puedo ver las cosas de otra manera?",
                "Me siento agotado/a emocionalmente, ¿cómo puedo sentirme mejor?",
                "No encuentro consuelo en nada, ¿tienes algún consejo?",
                "Me siento como si estuviera atrapado/a en una rutina que no me gusta.",
                "Las cosas están saliendo mal en todos los aspectos de mi vida, ¿cómo puedo mejorar?",
                "Siento que no tengo control sobre mi vida, ¿cómo puedo recuperar esa sensación?",
                "Me siento tan vulnerable, ¿cómo puedo ser más fuerte emocionalmente?",
                "Estoy preocupado/a por las expectativas que tengo sobre mí mismo/a, ¿cómo puedo gestionarlas?",
                "Me siento como si estuviera solo/a en este viaje, ¿cómo puedo encontrar más apoyo?",
                "Me siento tan sobrecargado/a de responsabilidades, ¿cómo puedo manejar todo esto?",
                "No sé por qué me siento así, pero no estoy bien. ¿Qué debería hacer?",
                "Me siento como si no tuviera valor, ¿cómo puedo cambiar esa percepción?",
                "Me siento incapaz de lidiar con todos mis problemas, ¿cómo puedo organizarlos?",
                "No puedo dejar de pensar en lo que me está afectando, ¿cómo puedo liberarme de esos pensamientos?",
                "Estoy pasando por una etapa de incertidumbre, ¿cómo puedo encontrar paz?",
                "Siento que mis problemas me están ahogando, ¿cómo puedo salir de esta situación?",
                "Estoy buscando algo que me calme, ¿qué puedo hacer para sentirme mejor?",
                "No sé cómo avanzar, me siento estancado/a, ¿qué me sugieres?",
                "Me siento perdido/a en medio de todo lo que está pasando.",
                "Siento que estoy fallando en todo, ¿cómo puedo recuperar la confianza en mí mismo/a?",
                "Me siento sin rumbo, ¿cómo puedo encontrar claridad en medio de todo esto?",
                "Me siento como si estuviera perdiendo el control, ¿cómo puedo recobrarlo?",
                "Estoy pasando por una crisis personal, ¿cómo puedo superarla?",
                "No me siento bien conmigo mismo/a últimamente, ¿cómo puedo mejorar mi autoestima?",
                "Siento que todo está fuera de mi alcance, ¿cómo puedo retomar el control?",
                "No puedo dejar de pensar en mis errores, ¿cómo puedo aprender a perdonarme?",
                "Me siento como si estuviera arrastrándome a través del día, ¿cómo puedo encontrar energía?",
                "Últimamente me siento desbordado/a por mis emociones, ¿qué puedo hacer para manejarlas?",
                "Me siento desconectado/a de las personas que me rodean, ¿cómo puedo reconectar?",
                "Estoy buscando formas de sentirme mejor, ¿qué debería intentar?",
                "Me siento atrapado/a en una situación sin salida, ¿cómo puedo liberarme?",
                "Estoy luchando con mis inseguridades, ¿cómo puedo sentirme más seguro/a de mí mismo/a?",
                "Siento que no estoy cumpliendo con mis propias expectativas, ¿cómo puedo mejorar?",
                "Me siento tan vulnerable ante todo, ¿cómo puedo fortalecerme emocionalmente?"
            ],
            "responses": [
                "Lamento mucho que estés pasando por un momento difícil, estoy aquí para ayudarte en lo que necesites.",
                "Es completamente normal sentirse así a veces. Tómate tu tiempo y busca hacer algo que te calme.",
                "Te entiendo, a veces todo parece demasiado abrumador. Recuerda que no estás solo/a, hay gente que te apoya.",
                "Estoy aquí para escucharte, si quieres hablar más sobre lo que te preocupa, puedes contar conmigo.",
                "Es difícil encontrar fuerzas cuando todo parece ir mal, pero lo más importante es que no te rindas. Siempre hay una luz al final del túnel.",
                "Entiendo que te sientas así. A veces, compartir tus pensamientos con alguien puede hacerte sentir un poco mejor.",
                "No es fácil atravesar momentos complicados, pero quiero que sepas que te comprendo y que este mal momento también pasará.",
                "Me siento triste por saber que te sientes solo/a. Recuerda que tus emociones son válidas, y que está bien pedir ayuda cuando lo necesites.",
                "Es comprensible sentir miedo. No te preocupes, todo estará bien. Puedes hacerlo, paso a paso.",
                "Siento mucho que estés pasando por esto, pero recuerda que tienes la fuerza dentro de ti para superar cualquier obstáculo.",
                "A veces, cuando todo parece tan difícil, lo más importante es respirar y dar pequeños pasos hacia la solución.",
                "La ansiedad es algo difícil de manejar, pero intenta hacer una pausa, respirar profundamente y pensar en el momento presente. Todo pasa.",
                "Recuerda que las dificultades son temporales. Lo que te está pasando no define tu valor. Eres más fuerte de lo que crees.",
                "Cuando te sientas agotado/a, trata de descansar y dar espacio a tu mente. A veces, un poco de descanso es todo lo que necesitamos.",
                "Es normal sentirse fuera de lugar en ocasiones. Todos tenemos esos momentos, y es parte de aprender y crecer. Estás haciendo lo mejor que puedes.",
                "Es totalmente comprensible sentirse abrumado/a por las circunstancias. No olvides que está bien pedir ayuda, no tienes que enfrentarlo todo solo/a.",
                "Si te sientes confundido/a, tómate un momento para reflexionar. A veces, dar un paso atrás ayuda a ver las cosas con más claridad.",
                "Es completamente válido sentir que no puedes seguir adelante. No te apresures, tómate tu tiempo y busca pequeñas metas que puedas lograr.",
                "En momentos difíciles, es importante recordar que siempre hay apoyo disponible, ya sea de un ser querido o de alguien a quien puedas acudir.",
                "Te entiendo, todos pasamos por momentos en los que nos sentimos abrumados. Lo importante es saber que no estás solo/a en este viaje.",
                "Está bien sentirse desanimado/a de vez en cuando. Sé amable contigo mismo/a y date tiempo para recuperarte. Todo mejorará.",
                "Cuando las preocupaciones nos invaden, es importante encontrar algo que nos calme. Ya sea dar un paseo o hablar con alguien cercano, es un buen paso.",
                "A veces, las palabras de aliento pueden hacer una gran diferencia. Recuerda que cada día es una nueva oportunidad para empezar de nuevo.",
                "Es normal tener días difíciles, y está bien no tener todas las respuestas. Lo importante es dar un paso a la vez.",
                "Recuerda que el estrés no define quién eres. Tómate un momento para relajarte y recuperar fuerzas.",
                "Si te sientes triste, es importante validar tus emociones. Permítete sentir lo que necesites y no te presiones por mejorar inmediatamente.",
                "Lidiar con la ansiedad no es fácil, pero a menudo pequeños momentos de calma, como respirar o relajarte, pueden marcar una gran diferencia.",
                "Es completamente válido sentir inseguridad. Todos pasamos por ello, y con el tiempo aprenderás a confiar más en ti mismo/a.",
                "En momentos de crisis, a veces lo mejor es hablar con alguien en quien confíes. Te ayudará a sentirte más ligero/a y comprendido/a.",
                "El miedo puede ser paralizante, pero recuerda que es solo una emoción, no una sentencia. Tienes la capacidad de afrontarlo.",
                "Siento mucho que te sientas mal. A veces es útil hablar sobre lo que estás sintiendo, y estoy aquí para escucharte.",
                "En momentos difíciles, siempre es bueno recordar que tienes el poder de superar cualquier obstáculo. Tómatelo un día a la vez.",
                "La presión puede ser muy difícil de manejar, pero recuerda que está bien pedir un respiro. El autocuidado es una prioridad.",
                "Si te sientes abrumado/a, puede ser útil dar pequeños pasos para organizarte. No tienes que hacerlo todo de una vez.",
                "Afrontar tus emociones de manera saludable es clave. Intenta hablar con alguien o realizar una actividad que te calme.",
                "Cuando la ansiedad se apodera de ti, intenta enfocarte en el presente y recordar que todo pasará. Está bien pedir ayuda.",
                "Es normal sentirse frustrado/a cuando las cosas no salen como esperabas. Recuerda que todo tiene una solución, y siempre hay un camino hacia adelante.",
                "Hablar de lo que sientes es un gran paso. Si necesitas más tiempo para procesarlo, está bien. No tienes que apresurarte.",
                "Todos tenemos días difíciles. Lo más importante es recordarte a ti mismo/a que está bien no sentirse bien siempre.",
                "Si te sientes desconectado/a, a veces compartir tus pensamientos con alguien puede ser un buen primer paso para recuperar tu sentido de conexión.",
                "Cuando no sabes qué hacer, la mejor opción es buscar ayuda o hablar con alguien. A veces, un poco de apoyo puede cambiar la perspectiva.",
                "Lamento que te sientas así, pero lo importante es que estás buscando ayuda. Dar pequeños pasos puede ser útil.",
                "Es completamente comprensible sentirte perdido/a. A veces, un cambio de perspectiva puede ayudarte a ver las cosas de otra manera.",
                "Entiendo que te sientas desmotivado/a, pero recuerda que las pequeñas victorias suman. No te rindas.",
                "Es normal sentirte abrumado/a, pero no estás solo/a. Trata de organizarte paso a paso.",
                "Tu bienestar es importante, y es un buen primer paso reconocer que necesitas apoyo. Busca alguien con quien puedas hablar.",
                "A veces, cuando las cosas se sienten caóticas, lo mejor es hacer una pausa y respirar profundamente. Tómate tu tiempo.",
                "Te entiendo, hay momentos en los que todo parece demasiado. No olvides que los momentos difíciles también pasan.",
                "Es completamente normal no saber cómo seguir a veces. Trata de enfocarte en el presente y dar pequeños pasos.",
                "Recuerda que el futuro puede ser incierto, pero tu bienestar es lo más importante. Tómate un descanso cuando lo necesites.",
                "Es difícil sentirse sin energía, pero a veces un poco de descanso o incluso un cambio de actividad puede ayudar.",
                "Siento que todo se te acumula, pero lo bueno es que siempre hay maneras de manejarlo. Respira y tómate tu tiempo.",
                "Está bien sentirse perdido/a, pero lo importante es saber que está bien pedir ayuda y tomarse el tiempo necesario para encontrar tu camino.",
                "Te entiendo. A veces, solo necesitas un poco de espacio para ordenar tus pensamientos. Tómate un respiro.",
                "Es normal sentirse atrapado/a por los pensamientos, pero recuerda que no estás solo/a. A veces, hablar con alguien puede ser liberador.",
                "Me duele saber que te sientes así, pero es importante recordar que, poco a poco, las cosas mejorarán.",
                "Las emociones intensas pueden ser agotadoras, pero es fundamental cuidar de ti mismo/a y buscar formas de relajarte.",
                "Te entiendo, todos enfrentamos momentos difíciles. No dudes en pedir apoyo cuando lo necesites.",
                "La incertidumbre puede ser aterradora, pero recuerda que es parte del proceso de crecimiento. Te ayudará a aprender más sobre ti mismo/a.",
                "Está bien sentirse inseguro/a. A veces, el primer paso es ser amable contigo mismo/a y aceptar que todos pasamos por altibajos.",
                "Los momentos difíciles no definen quién eres. Lo importante es cómo sigues adelante y sigues buscando maneras de mejorar.",
                "Cuando la mente está saturada, intenta escribir lo que sientes o dar un paseo. A veces, esos pequeños actos pueden dar claridad.",
                "Es completamente normal sentirse perdido/a en ciertos momentos. Lo importante es seguir buscando apoyo y maneras de mejorar.",
                "Siento que te sientes así, pero está bien buscar ayuda cuando las cosas se vuelven abrumadoras. Te mereces ese apoyo.",
                "Todos tenemos días en los que todo parece más difícil. Lo importante es recordarte que está bien no estar bien siempre.",
                "A veces, un cambio de perspectiva o incluso dar un paso atrás puede ayudar a reorganizar las prioridades.",
                "El miedo es una emoción natural, pero no dejes que te controle. Poco a poco puedes aprender a enfrentarlo.",
                "Es completamente válido sentir que todo te supera. Lo importante es dar pequeños pasos y celebrar los avances.",
                "No es fácil manejar tantas cosas a la vez, pero lo importante es que te tomes tu tiempo para cuidar de ti mismo/a.",
                "A veces, un momento de reflexión puede ayudarte a encontrar la paz que necesitas. Recuerda que está bien no tener todas las respuestas.",
                "Todos enfrentamos dificultades. Lo importante es no perder la esperanza y recordar que las cosas siempre mejoran con el tiempo.",
                "Cuando te sientas sobrepasado/a, trata de detenerte por un momento y respirar. A veces eso ayuda a organizar los pensamientos.",
                "Te comprendo, a veces el estrés nos hace sentir incapaces de hacer frente a todo. Lo mejor es ir paso a paso.",
                "Es completamente normal sentirse frustrado/a de vez en cuando. Lo importante es recordar que siempre habrá un camino a seguir.",
                "Hablar de lo que sientes es el primer paso para superar las dificultades. Estoy aquí para escucharte.",
                "Es difícil pasar por momentos difíciles, pero quiero que sepas que siempre hay luz al final del túnel. Tómatelo con calma.",
                "Cuando la ansiedad te invade, lo mejor es detenerte, respirar profundamente y recordar que todo pasará.",
                "Es completamente comprensible sentirse inseguro/a en tiempos de cambio. Busca apoyo y recuerda que te adaptarás con el tiempo.",
                "Todo lo que estás viviendo es una etapa, y aunque ahora sea difícil, con el tiempo verás el progreso. Mantente fuerte.",
                "Te entiendo, todos tenemos días en los que nos sentimos desbordados. Lo importante es no perder la esperanza.",
                "Es normal sentirse distante en algunos momentos. Tómate tu tiempo para reconectar y buscar apoyo.",
                "En momentos de incertidumbre, lo más importante es darte tiempo para reflexionar y luego dar un paso hacia adelante.",
                "Lamento que te sientas así, pero lo importante es que estás reconociendo lo que sientes. Es un primer paso importante.",
                "Entiendo lo difícil que debe ser pasar por esto, pero recuerda que siempre hay maneras de superar las dificultades, paso a paso.",
                "Es completamente normal sentirse perdido/a de vez en cuando. A veces lo mejor es tomarse un descanso y pensar en lo que realmente quieres.",
                "No estás solo/a en esto. Si te sientes abrumado/a, hablar con alguien cercano puede ser útil.",
                "Lo más importante es que te des tiempo para descansar y recargar energías. A veces, un descanso es todo lo que necesitamos.",
                "Es normal tener momentos de duda, pero recuerda que cada día es una nueva oportunidad para empezar de nuevo.",
                "Cuando te sientas atrapado/a, intenta enfocarte en pequeños pasos que puedas controlar. Eso puede hacer una gran diferencia.",
                "A veces la frustración viene de no saber cómo avanzar. Tómate tu tiempo, no hay prisa para encontrar las respuestas.",
                "Lo que estás viviendo no define tu futuro. Tómate un tiempo para reflexionar y busca maneras de cuidar de ti mismo/a.",
                "Recuerda que está bien sentirte vulnerable, y la vulnerabilidad también es una forma de ser fuerte. No estás solo/a en esto.",
                "Es completamente válido sentir inseguridad en momentos difíciles. Lo importante es reconocer que esto también pasará.",
                "Te comprendo. A veces un pequeño cambio de perspectiva puede ayudarte a ver las cosas desde otro ángulo.",
                "No tienes que hacer todo a la vez. Lo importante es ir paso a paso y priorizar lo que más necesitas en este momento.",
                "Afrontar la incertidumbre no es fácil, pero recuerda que siempre hay apoyo disponible. No dudes en buscarlo.",
                "Es completamente válido sentirte perdido/a en algunos momentos. Lo importante es recordar que siempre hay oportunidades para crecer.",
                "La ansiedad por no poder controlar todo es natural, pero lo que puedes controlar es cómo te cuidas a ti mismo/a en este proceso.",
                "Está bien no tener todas las respuestas. Lo importante es ser amable contigo mismo/a mientras atraviesas este proceso.",
                "No te preocupes si no tienes claridad en este momento. A veces, la claridad llega poco a poco, no es algo que se pueda forzar.",
                "La inseguridad es una emoción común, pero recuerda que no define quién eres. Todos pasamos por esos momentos, y están bien.",
                "Te entiendo. A veces, la presión de las expectativas puede ser abrumadora, pero lo importante es ser compasivo contigo mismo/a.",
                "La forma en que te sientes ahora no durará para siempre. Lo importante es reconocer que mereces sentirte mejor y buscar ayuda.",
                "Cuando te sientas abrumado/a, intenta centrarte en lo que puedes controlar, aunque sean cosas pequeñas.",
                "Está bien sentirse desconectado/a a veces, pero eso no significa que no puedas reconectar. Tómate tu tiempo y busca apoyo cuando lo necesites.",
                "Recuerda que está bien pedir ayuda. A veces, hablar con alguien o hacer una pausa puede proporcionarte el alivio que necesitas.",
                "Es difícil cuando todo parece fuera de control, pero recuerda que siempre hay algo que puedes hacer para mejorar la situación, incluso si es pequeño.",
                "Me duele saber que te sientes así, pero lo importante es que no te estás quedando en ese lugar. Buscas maneras de sentirte mejor.",
                "A veces, la mejor forma de liberarte de los pensamientos negativos es distraerte un poco. Haz algo que te guste y te ayude a relajarte.",
                "Es totalmente válido tener dudas, pero recuerda que eres capaz de superar esto. Tómatelo con calma y paso a paso.",
                "El camino no siempre es fácil, pero cada paso que das, por pequeño que sea, te acerca a una solución.",
                "A veces, el simple hecho de tomar un descanso y desconectar puede darte la energía que necesitas para continuar.",
                "La autocrítica es algo que todos experimentamos, pero recuerda ser amable contigo mismo/a y no dejar que los errores te definan.",
                "Recuerda que el miedo y la inseguridad son emociones naturales, pero no tienes que dejar que te controlen. Tienes la capacidad de superarlas.",
                "A veces, la mejor forma de avanzar es dar un paso atrás y ver las cosas desde una perspectiva diferente. Todo toma tiempo.",
                "Es difícil, pero lo importante es que te estás reconociendo a ti mismo/a lo que sientes. Ese es el primer paso para mejorar.",
                "No es fácil ser fuerte todo el tiempo. Todos pasamos por momentos difíciles, y es importante darte espacio para ser vulnerable.",
                "A veces el cambio de perspectiva es justo lo que necesitamos para avanzar. Tómate tu tiempo y ve lo que funciona para ti.",
                "Te entiendo, la incertidumbre puede ser aterradora. Pero recuerda que, aunque no tienes control sobre todo, siempre hay cosas que puedes hacer.",
                "Cuando te sientas estancado/a, recuerda que es solo una fase. Todo mejora con el tiempo, no te desesperes.",
                "Es completamente normal sentirse perdido/a, pero quiero que sepas que con el tiempo las respuestas llegarán. Tómatelo con calma.",
                "Recuerda que la vulnerabilidad es una forma de fuerza. Está bien no estar bien todo el tiempo."
            ]
        },
        {
            "tag": "consultation_responder_en_errores",
            "patterns": [
                "Sorry, I don't know how to respond to that.",
                "Sorry, I have no information on that topic.",
                "Sorry, I don't understand the query.",
                "I'm not sure what you need, could you clarify?",
                "I'm sorry I can't help you with that right now.",
                "That's out of my reach for now.",
                "Sorry, I don't have that answer.",
                "I don't understand what you're asking me.",
                "Sorry, I don't have any data on that.",
                "Sorry, I don't know how to help you with this.",
                "Sorry, I don't have the information you're looking for.",
                "I can't answer that question.",
                "My apologies, I can't help you with that.",
                "That is not to my knowledge.",
                "I'm sorry, I don't understand your request.",
                "Sorry, I can't process that information.",
                "I have no data on that subject.",
                "I'm not sure how to answer that.",
                "My apologies, I have no relevant information.",
                "Sorry, but I don't understand the question.",
                "That's beyond my reach.",
                "I don't know how to help you with that.",
                "Sorry, I'm not designed to answer that.",
                "Sorry, I don't have a suitable answer.",
                "My apologies, I don't know what to say about that.",
                "Sorry, I don't have enough information.",
                "I don't know how to answer that now.",
                "I'm sorry I don't have any data on that topic.",
                "That's not in my knowledge base.",
                "I'm sorry, but I don't understand the query."
            ],
            "responses": [
                "Sorry, I don't have an answer for that.",
                "Sorry, I can't help you with that information.",
                "I don't understand the question, could you explain it in another way?",
                "My apologies, I have no data on that.",
                "I'm sorry, I don't know how to answer you.",
                "I don't have enough information to help you.",
                "Sorry, I don't understand what you're asking.",
                "Sorry, I am unable to process that request.",
                "My apologies, I'm not sure how to respond.",
                "Sorry, that answer is not available.",
                "Sorry, I can't help you with that right now.",
                "Sorry, I don't have any data that can help you.",
                "My apologies, I don't know what to answer.",
                "I'm sorry, I don't know how to proceed with your query.",
                "I don't understand that request.",
                "Sorry, I am unable to process your request.",
                "My apologies, I do not have access to that information.",
                "Sorry, I don't know what to tell you about that.",
                "I can't give you an adequate answer.",
                "My apologies, that's not in my database."
            ]
        },
        {
            "tag": "consultation_claridad",
            "patterns": [
                "Could you give me more details, please?",
                "Can you be more specific?",
                "I need a little more context to help you.",
                "Could you clarify what you mean?",
                "What exactly do you mean by that?",
                "Can you explain it in another way?",
                "Could you give me more information about that?",
                "I don't fully understand, can you elaborate further?",
                "Can you provide a little more context?",
                "Could you elaborate on your query?",
                "I'm not sure what you're referring to, can you explain further?",
                "Can you give me more details to understand better?",
                "Can you explain it with an example?",
                "What exactly do you mean?",
                "Can you expand on your question, please?",
                "I'm not sure I understand, can you be more clear?",
                "Can you give me more context?",
                "Can you explain more so I can help you better?",
                "Can you clarify what you need?",
                "I don't fully understand, can you give me more information?",
                "Could you elaborate a little more on your idea?",
                "What did you mean by that?",
                "Could you specify what you mean?",
                "Can you explain it better, please?",
                "Can you give me a clearer example?",
                "Could you expand on your question a little more?",
                "Can you explain better what you need?",
                "Could you provide more details?",
                "I'm not sure I understand your point, can you clarify?",
                "What does that mean in this context?",
                "Can you give me more details about your query?",
                "Could you elaborate further on your idea?",
                "What exactly do you mean by that?",
                "Could you explain your question in more detail?",
                "I don't fully understand your request, can you explain it better?",
                "Can you expand on your point of view?",
                "What do you mean by that exactly?",
                "Can you give me more context to help you better?",
                "Can you give me a more detailed explanation?",
                "Can you give me more information to understand it?",
                "What do you mean by that term?",
                "Could you be more clear, please?",
                "What specific situation are you referring to?",
                "Can you give me a more complete description?",
                "Could you be more detailed in your explanation?",
                "What exactly does that entail?",
                "Could you explain it from another angle?",
                "What exactly do you expect me to do?",
                "What does that mean to you?",
                "Can you give me more examples related to this?"
            ],
            "responses": [
                "Could you give me more context to help you better?",
                "Sorry, I don't fully understand. Can you be more clear?",
                "I'm not sure what you need. Can you explain further?",
                "Can you give me more details about your query?",
                "I need more information to help you. Can you elaborate?",
                "Could you be more specific?",
                "I don't fully understand, can you explain with an example?",
                "Can you elaborate a little more on what you need?",
                "Can you give me more information to understand better?",
                "I'm not sure what you're referring to. Can you clarify?",
                "Could you please explain your question further?",
                "I need a little more context to help you better.",
                "Can you be more clear about what you need?",
                "Can you expand on your explanation so I can better understand?",
                "Could you explain in more detail?",
                "I don't quite understand, can you give me more details?",
                "Could you explain what you mean?",
                "Can you be more specific in your question?",
                "What exactly do you mean?",
                "Could you provide more information, please?",
                "What do you mean by that?",
                "I'm not sure what you're trying to say. Can you elaborate?",
                "Could you explain it more clearly?",
                "What details can you add to help me understand better?",
                "Can you expand on your question, please?",
                "What specific aspect are you asking about?",
                "Can you be more clear with your explanation?",
                "What specific case are you referring to?",
                "What exactly do you need in this context?",
                "Can you give me more clues about what you need?",
                "Could you explain your question further so I can understand it better?",
                "What does that mean in your case?",
                "Could you provide some more detailed examples?",
                "What exactly do you expect from this consultation?",
                "Can you give me more context on this topic?",
                "I'm not sure I understood your point. Can you clarify?",
                "What additional information can you give me about that?",
                "Could you break down your question so I can understand it better?",
                "What do you mean specifically by that?",
                "Can you help me understand your situation better?",
                "What context does your query refer to?",
                "Could you elaborate a little more, please?",
                "What exactly do you mean by that word?",
                "What do you seek to achieve with this information?",
                "Can you give me more examples so I can understand?",
                "What result do you hope to achieve?",
                "Could you elaborate a little more on your point?",
                "What details could you add to clarify this?",
                "What additional context can you give me?"
            ]
        },
        {
            "tag": "consultation_preguntas_generales",
            "patterns": [
                "What is this?",
                "How does this work?",
                "What does this word mean?",
                "What should I do in this case?",
                "How can I fix this problem?",
                "What are the available options?",
                "Where can I find more information?",
                "When will this be available?",
                "Why does this happen?",
                "What would you do in my place?",
                "How can I learn more about this topic?",
                "Is this possible?",
                "What is the best way to proceed?",
                "What does this process involve?",
                "How long will this take?",
                "What do you need from me?",
                "Who can help me with this?",
                "What steps should I take now?",
                "Is this working as it should?",
                "Is it safe to do this?",
                "What are the risks?",
                "How can I verify this?",
                "What else should I know?",
                "What should I avoid in this situation?",
                "What are the advantages of doing this?",
                "What alternatives do I have?",
                "Where can I start?",
                "What happens if I do this?",
                "Is this necessary?",
                "How does this affect other things?",
                "What recommendations do you have?",
                "How can I make it faster?",
                "What resources are available to me?",
                "What is the difference between this and that?",
                "Is this mandatory?",
                "What happens if I don't do this?",
                "How difficult is this?",
                "Is this efficient?",
                "What are the implications of this?",
                "What should I do first?",
                "Does this apply to my situation?",
                "How is this calculated?",
                "Is this correct?",
                "What does this mean for me?",
                "What are the essential steps?",
                "Who is responsible for this?",
                "How can I measure this?",
                "What happens after this?",
                "Is this a good idea?",
                "How does this affect the future?"
            ],
            "responses": [
                "This means you need more specific information.",
                "This depends on the context, can you give me more details?",
                "Generally, this involves a standard procedure.",
                "The best way to proceed is to analyze the details.",
                "This may vary depending on the specific situation.",
                "We can look for more data to confirm this.",
                "I would recommend you do more research on this topic.",
                "This suggests that it is important to consider your options.",
                "The answer depends on what goal you have.",
                "This seems to be part of a larger process.",
                "To solve this, consider the resources you have.",
                "This requires a clear understanding of the steps involved.",
                "You should check whether this information is accurate.",
                "This is possible with the right resources.",
                "The estimated time depends on the circumstances.",
                "We need to assess the risks before proceeding.",
                "You can find more information in specialized resources.",
                "It is important to prioritize the steps in this case.",
                "This can be verified by reviewing the documentation.",
                "Consider the advantages and disadvantages of this option.",
                "This may involve some limitations.",
                "Security depends on how this is implemented.",
                "To start, make sure you understand the goal.",
                "This may have long-term implications.",
                "Efficiency can be improved with certain adjustments.",
                "This may need further analysis.",
                "It is important to ensure that the data is correct.",
                "This is relevant if it applies directly to your case.",
                "You can measure this using key indicators.",
                "This seems like a good idea in this context.",
                "To get results, you need to follow these steps.",
                "This may be mandatory in some cases.",
                "This depends on your priorities and goals.",
                "The impact can be significant depending on the circumstances.",
                "This might be complex but manageable.",
                "Alternatives may offer better results.",
                "This is something to consider carefully.",
                "The next step is to evaluate the options.",
                "This may require additional approval.",
                "This is designed to streamline the process.",
                "The implications must be assessed before proceeding.",
                "This has specific benefits if implemented correctly.",
                "It is important to understand how this affects other aspects.",
                "This may need further research to confirm.",
                "This is usually applied in specific scenarios.",
                "This is something that needs to be constantly monitored.",
                "This can facilitate other related processes.",
                "This should be reviewed before making a decision.",
                "The future impact depends on how this is handled."
            ]
        },
        {
            "tag": "consultation_notificaciones_recientes",
            "patterns": [
                "What are the latest notifications?",
                "What's new in notifications?",
                "Can I see my recent notifications?",
                "Show me the latest notifications, please.",
                "What notifications did I just receive?",
                "What are the recent updates?",
                "What's new in my notifications?",
                "Is there anything new I should know?",
                "What notifications have been received recently?",
                "Can I review the most recent notifications?",
                "What's happening in notifications lately?",
                "What have I missed in the notifications?",
                "What's the latest news?",
                "Can I check the latest alerts?",
                "Are there any new messages in the notifications?",
                "What recent changes are there in notifications?",
                "What events have happened recently?",
                "What are the latest updates?",
                "What messages did I just receive?",
                "Is there anything new in my alerts?",
                "What has happened in the latest notifications?",
                "What are the most recent notices?",
                "Is there anything relevant in recent notifications?",
                "What did I get in the latest notifications?",
                "What's the latest news?",
                "Can I review current notifications?",
                "What is important in the latest alerts?",
                "What recent notifications should I review?",
                "Is there anything interesting in my notifications?",
                "What's the latest news?",
                "What notifications just arrived?",
                "Are there any new updates in notifications?",
                "What new information do I get in notifications?",
                "What recent data has arrived in the notifications?",
                "Can I see the latest in notifications?",
                "What can you tell me about recent notifications?",
                "What's new since last time?",
                "What recent messages are available?",
                "Is there anything new I should see in notifications?",
                "What alerts did I just receive?",
                "Is there anything new about notifications?",
                "What new events are there in notifications?",
                "What recent updates should I consider?",
                "What's new recently?",
                "Is there anything urgent in the recent notifications?",
                "What new messages are available?",
                "What are the recent announcements?",
                "What new information do you have for me?",
                "Is there anything else in the recent notifications?",
                "What notifications are active right now?"
            ],
            "responses": [
                "Here are the most recent notifications.",
                "These are your latest notifications.",
                "Let's review your most recent notifications.",
                "This is what's new in your notifications.",
                "Currently, these are the recent notifications.",
                "Here are the latest news.",
                "These are the latest updates for you.",
                "This is the latest that arrived in your notifications.",
                "Your recent notifications list includes this.",
                "These are the most recent alerts you received.",
                "Reviewing your most current notifications.",
                "This is what recently arrived in your notifications.",
                "Here's the latest thing you received.",
                "These are the newest messages in your notifications.",
                "This is the most important thing in your recent notifications.",
                "Current notifications include these items.",
                "This is the latest thing that happened in your notifications.",
                "Here is a summary of your recent notifications.",
                "These are the most important updates so far.",
                "Here's what's active in your notifications right now.",
                "Your recent list includes these notifications.",
                "Here's what's new in your notifications.",
                "This is the most recent news you received.",
                "Here are the most recent alerts on your system.",
                "Here's what's updated in your notifications.",
                "Let's check out what's new in your notifications.",
                "This is the latest I have for you in notifications.",
                "These are the most important alerts of the last few hours.",
                "Checking for recent updates to your notifications.",
                "Here's what you need to know about your notifications.",
                "This is the latest that arrived in your notifications.",
                "Your recent notifications include this.",
                "Here are the newest messages in your system.",
                "Here are the latest updates since last time.",
                "Here's what you should check in your current notifications.",
                "Here are the new alerts in your notifications.",
                "These are the most recent updates I found.",
                "Checking the latest news in your alerts.",
                "This is what is available in notifications.",
                "The most recent notifications include this data.",
                "These are the latest news in your notifications.",
                "Here is a summary of the latest notifications.",
                "Here's what's updated in your most recent notifications.",
                "Your system has these new alerts now.",
                "Here's the latest news you need to know about notifications.",
                "Here you can find important news in your notifications.",
                "This is what was recently received.",
                "Your notifications list includes these new alerts.",
                "These are the latest developments in your system."
            ]
        },
        {
            "tag": "consultation_definiciones_distintos_temas",
            "patterns": [
                "What is artificial intelligence?",
                "What does the theory of relativity mean?",
                "What is climate change?",
                "How is love defined?",
                "What is democracy?",
                "What does string theory mean?",
                "What is evolution?",
                "How is leadership defined?",
                "What is quantum physics?",
                "What does circular economy mean?",
                "What is capitalism?",
                "How is globalization defined?",
                "What is modern art?",
                "What does the term blockchain mean?",
                "What is sustainability?",
                "What does biodiversity mean?",
                "What is the metaverse?",
                "What is feminism?",
                "What is ethics?",
                "What does emotional intelligence mean?",
                "What is Big Data?",
                "How is the concept of marketing defined?",
                "What does nanotechnology mean?",
                "What is transhumanism?",
                "What is the universe?",
                "How is the concept of justice defined?",
                "What is particle physics?",
                "What does the concept of participatory democracy mean?",
                "What is socialism?",
                "What is historical materialism?",
                "What does neuroscience mean?",
                "What is professional ethics?",
                "What is biotechnology?",
                "What does the concept of resilience mean?",
                "What is collective intelligence?",
                "What is technological change?",
                "How is the concept of well-being defined?",
                "What does economic globalization mean?",
                "What is theory of mind?",
                "What does geopolitics mean?",
                "What is relativistic physics?",
                "What does behavioral economics mean?",
                "What is contemporary art?",
                "What is the neoliberal model?",
                "What is cyberspace?",
                "What does economic sustainability mean?",
                "What is critical thinking?",
                "What is explanatory artificial intelligence?",
                "What is epistemology?",
                "What does postmodernity mean?",
                "What is anthropology?",
                "What does cryptography mean?",
                "What is chaos theory?",
                "What is linguistics?",
                "What does genetic engineering mean?",
                "What is ecology?",
                "What is multiculturalism?",
                "What does game theory mean?",
                "What is positive psychology?",
                "What is sociology?",
                "What does astrophysics mean?",
                "What is cinematography?",
                "What is postcolonial literature?",
                "What does cybernetics mean?",
                "What is behavioral psychology?",
                "What is microbiology?",
                "What does thermodynamics mean?",
                "What is environmental ethics?",
                "What is semiotics?",
                "What does information theory mean?",
                "What is ethnography?",
                "What is paleontology?",
                "What does physiology mean?",
                "What is theology?",
                "What is genetic epistemology?",
                "What does evolutionary biology mean?",
                "What is musicology?",
                "What is critical theory?",
                "What does ontology mean?",
                "What is archaeology?",
                "What is hermeneutics?",
                "What does analytical psychology mean?",
                "What is phenomenology?",
                "What is sociolinguistics?",
                "What does literary theory mean?",
                "What is green biotechnology?",
                "What is feminist epistemology?",
                "What does decision theory mean?",
                "What is human geography?",
                "What does cognitive psychology mean?",
                "What is ethology?",
                "What is political philosophy?",
                "What does evolutionary psychology mean?",
                "What is cartography?",
                "What is bioethics?",
                "What does the theory of motivation mean?",
                "What is microeconomics?",
                "What is cosmology?",
                "What is a podcast?",
                "What does the term 'freelance' mean?",
                "What is a blog?",
                "What is a meme?",
                "What does 'startup' mean?",
                "What is content marketing?",
                "What is an influencer?",
                "What does 'crowdfunding' mean?",
                "What is a webinar?",
                "What is augmented reality?",
                "What does 'SEO' mean?",
                "What is a vlog?",
                "What is 3D printing?",
                "What does 'gig economy' mean?",
                "What is an e-book?",
                "What is cybersecurity?",
                "What does 'phishing' mean?",
                "What is an operating system?",
                "What is e-commerce?",
                "What does 'backup' mean?",
                "What is teleworking?",
                "What is online learning?",
                "What does 'big data' mean?",
                "What is a CRM?",
                "What is online privacy?",
                "What does 'streaming' mean?",
                "What is a firewall?",
                "What is gamification?",
                "What is a robot vacuum cleaner?",
                "What does 'malware' mean?",
                "What is a smartwatch?",
                "What does 'app' mean?",
                "What is a chatbot?",
                "What is virtual reality?",
                "What does 'cloud computing' mean?",
                "What is a hashtag?",
                "What is conversational artificial intelligence?",
                "What does 'blockchain' mean?",
                "What is a video podcast?",
                "What is affiliate marketing?",
                "What does 'big tech' mean?",
                "What is a virtual assistant?",
                "What is home automation?",
                "What does 'digitalization' mean?",
                "What is an NFT?",
                "What is mobile payment?",
                "What does 'e-commerce' mean?",
                "What is a QR code?",
                "What is digital printing?",
                "What does 'fintech' mean?",
                "What is a social network?",
                "What is cyber resilience?",
                "What does 'IoT' mean?",
                "What is digital marketing?",
                "What is a corporate blog?",
                "What does 'drone' mean?",
                "What is extended reality?",
                "What is remote work?",
                "What does 'machine learning' mean?",
                "What is a business plan?",
                "What is a hat-trick in football?",
                "What does 'offside' mean?",
                "What is a penalty?",
                "What is the catenaccio tactic?",
                "What does 'death pass' mean?",
                "What is a corner kick?",
                "What is an Olympic goal?",
                "What does 'added time' mean?",
                "What is a direct free kick?",
                "What is the offside rule?",
                "What does 'change of orientation' mean?",
                "What is a dribble?",
                "What is a goal kick?",
                "What does 'defensive zone' mean?",
                "What is a descent?",
                "What does 'ascent' mean?",
                "What is an elevator equipment?",
                "What is the back-pass rule?",
                "What does 'man-to-man marking' mean?",
                "What is an own goal?",
                "What does 'ghost goal' mean?",
                "What is a counterattack?",
                "What does 'libero' mean?",
                "What is a bicycle kick goal?",
                "What does 'goal average' mean?",
                "What is a rondo?",
                "What does 'total football' mean?",
                "What is a throw-in?",
                "What does 'high blood pressure' mean?",
                "What is a reverse hat-trick?"
            ],
            "responses": [
                "Artificial intelligence is the field of study that focuses on creating machines capable of performing tasks that normally require human intelligence.",
                "The theory of relativity, proposed by Albert Einstein, establishes that the laws of physics are the same for all observers in relative motion with respect to each other.",
                "Climate change refers to significant and long-lasting changes in global climatic conditions, primarily caused by human activity.",
                "Love is a complex feeling that involves affection, attachment and care towards another person or object.",
                "Democracy is a system of government in which power is exercised by the people, through free suffrage and periodic elections.",
                "String theory is a physical theory that proposes that fundamental particles are not points, but vibrating strings of energy.",
                "Evolution is the process by which species change over time due to natural selection and other factors.",
                "Leadership is the ability to influence and guide a group of people to achieve a common goal.",
                "Quantum physics is the branch of physics that studies phenomena at extremely small scales, such as subatomic particles.",
                "The circular economy is an economic model that seeks to reduce waste and make the most of resources by closing the life cycle of products.",
                "Capitalism is an economic system based on private ownership of the means of production and free competition.",
                "Globalization is the process of interconnection and interdependence of countries at economic, cultural and political levels.",
                "Modern art refers to works of art that developed from the late 19th to the mid-20th century, characterized by new forms of expression.",
                "Blockchain is a distributed ledger technology that allows information to be stored in a secure and decentralized manner.",
                "Sustainability is the ability to maintain or improve environmental, social and economic systems without compromising the needs of future generations.",
                "Biodiversity is the variety of life forms on Earth, including species, ecosystems and genetic diversity.",
                "The metaverse is a shared virtual space, generated by the interaction of physical and digital reality, where users can interact in real time.",
                "Feminism is a social and political movement that seeks equal rights between women and men.",
                "Ethics is the branch of philosophy that studies the principles of morality and human conduct.",
                "Emotional intelligence refers to the ability to recognize, understand and manage our own emotions and those of others.",
                "Big Data is a set of extremely large and complex data that requires special tools for processing and analysis.",
                "Marketing is the set of activities and strategies used to promote and sell products or services.",
                "Nanotechnology is the manipulation of matter at a molecular or atomic scale to develop new and advanced products.",
                "Transhumanism is a philosophical and scientific movement that seeks to enhance human capabilities through technology.",
                "The universe is the set of everything that exists: the totality of space, time, matter and energy.",
                "Justice is the moral and political concept that seeks equity and impartiality in the distribution of resources, opportunities and rights.",
                "Particle physics studies the fundamental particles that make up matter and the forces that govern them.",
                "Participatory democracy is a model in which citizens have direct participation in political decision-making, beyond voting.",
                "Socialism is a political and economic ideology that advocates collective ownership of the means of production and the equitable distribution of resources.",
                "Historical materialism is a theory of Karl Marx that holds that human history is the result of class struggle and the evolution of modes of production.",
                "Neuroscience is the study of the nervous system, including the brain, and its influence on behavior and cognitive functions.",
                "Professional ethics refers to the moral principles and standards that guide behavior within a particular profession.",
                "Biotechnology is the use of living organisms or their components to develop products and solutions in areas such as medicine, agriculture and industry.",
                "Resilience is the ability of a system or individual to resist and adapt to adverse or changing situations.",
                "Collective intelligence is the shared ability of a group of individuals to solve problems, create ideas and make decisions.",
                "Technological change refers to the evolution of technologies and how they transform societies and economies.",
                "Wellbeing is a state of positive physical and mental health, along with overall satisfaction with life.",
                "Economic globalization refers to the growing economic interdependence of countries due to increased international trade and investment.",
                "Theory of mind is the ability to attribute mental states (thoughts, beliefs, desires) to others and to understand that others have different perspectives.",
                "Geopolitics studies the influence of geography, economics, and politics on international relations and global decision-making.",
                "Relativistic physics is the branch of physics that studies phenomena that occur at speeds close to that of light, such as Einstein's theory of relativity.",
                "Behavioral economics studies how economic decisions are influenced by psychological, social and emotional factors.",
                "Contemporary art refers to art forms created in the second half of the 20th century and up to the present, often influenced by technology and social context.",
                "The neoliberal model is an economic theory that promotes the reduction of the role of the state in the economy and the expansion of free markets.",
                "Cyberspace is the virtual environment formed by the interconnection of global communication networks and the activities carried out in it.",
                "Economic sustainability refers to the ability of an economy to sustain itself in the long term, ensuring well-being without depleting resources.",
                "Critical thinking is the ability to analyze and evaluate information objectively, seeking the truth and avoiding prejudices.",
                "Explanatory AI seeks to enable AI systems to provide clear and understandable explanations about their decisions and processes.",
                "Epistemology is a branch of philosophy that deals with knowledge, its nature and how it is obtained.",
                "Postmodernism is a term describing a cultural attitude and style that emerged after modernity, characterized by skepticism toward grand narratives and an appreciation of cultural diversity.",
                "Anthropology is the science that studies human beings from an integral perspective, addressing biological, cultural, social and linguistic aspects.",
                "Cryptography is the practice and study of techniques for securing communication in the presence of adversaries by encoding messages.",
                "Chaos theory is a branch of mathematics that studies dynamical systems that are highly sensitive to initial conditions, leading to unpredictable long-term outcomes.",
                "Linguistics is the science that deals with the study of human language, its structure, use and evolution.",
                "Genetic engineering is the direct manipulation of an organism's genetic material using biotechnology techniques to change its characteristics.",
                "Ecology is the science that studies the interactions between organisms and their environment, including the distribution and abundance of living beings.",
                "Multiculturalism is the coexistence of different cultures within a society, promoting respect and appreciation of cultural diversity.",
                "Game theory is a branch of applied mathematics that analyzes strategic situations where the results of a decision depend on the decisions of other participants.",
                "Positive psychology is the branch of psychology that studies the positive aspects of human experience, such as happiness, well-being and virtues.",
                "Sociology is the discipline that studies the structures, functioning and transformations of human societies.",
                "Astrophysics is a branch of astronomy that uses the laws of physics to understand the behavior and properties of celestial objects.",
                "Cinematography refers to both the art and technique of making films and the profession of those who capture moving images.",
                "Postcolonial literature examines literary works produced in countries that were colonized and how they reflect the experiences of colonization and decolonization.",
                "Cybernetics is the study of control and communication systems in animals and machines, focusing on regulation and feedback.",
                "Behavioral psychology, or behaviorism, focuses on studying how behaviors are learned in response to environmental stimuli.",
                "Microbiology is the discipline that studies microorganisms, including bacteria, viruses, fungi and protozoa, and their effects on health, the environment and industry.",
                "Thermodynamics is a branch of physics that deals with heat, work, temperature, and the properties of systems that affect these quantities.",
                "Environmental ethics is the branch of ethics that is concerned with moral values ​​applied to the conservation and protection of the environment.",
                "Semiotics is the study of signs and symbols, how they are used and what they mean in communication.",
                "Information theory is the study of the quantification, storage, and communication of information, based on measures such as entropy.",
                "Ethnography is a research methodology in anthropology that involves the observation and description of human cultures and behaviors.",
                "Paleontology is the science that studies prehistoric life through fossils.",
                "Physiology is the branch of biology that deals with the functions and activities of living things and their parts.",
                "Theology is the systematic study of the nature of the divine and of religious beliefs, practices, and experiences.",
                "Genetic epistemology is a theory by Jean Piaget that studies how knowledge develops through cognitive stages.",
                "Evolutionary biology is the branch of biology that studies the mechanisms, patterns, and consequences of biological evolution.",
                "Musicology is the academic study of music, including its history, theory, and cultural practices.",
                "Critical theory is a school of thought that seeks to understand and change society by criticizing power structures and ideologies.",
                "Ontology is the branch of philosophy that deals with the nature of being, existence and reality.",
                "Archaeology is the science that studies human societies of the past through their material remains.",
                "Hermeneutics is the theory and methodology of interpretation, especially of texts, but also of cultural phenomena.",
                "Analytical psychology, developed by Carl Jung, focuses on exploring the unconscious through archetypes and the process of individuation.",
                "Phenomenology is a philosophical current that studies conscious experiences directly as they occur.",
                "Sociolinguistics studies how language is used in social contexts and how it is influenced by social factors.",
                "Literary theory is the systematic analysis of literature, exploring aspects such as genre, style, narrative and criticism.",
                "Green biotechnology refers to the use of biotechnology in agriculture to improve crop production and sustainability.",
                "Feminist epistemology is a movement that examines how knowledge is influenced by gender relations, seeking a more inclusive perspective.",
                "Decision theory deals with the methods and principles used to make rational decisions in contexts of uncertainty.",
                "Human geography studies human aspects of the world, such as cultures, economies, and population patterns.",
                "Cognitive psychology focuses on how we process information, perceive, remember, and think.",
                "Ethology is the scientific study of animal behavior, especially under natural conditions.",
                "Political philosophy is the branch of philosophy that investigates questions about the state, government, politics, liberty, justice, property, and rights.",
                "Evolutionary psychology applies principles of evolution to understand human behavior and its origins.",
                "Cartography is the art and science of graphically representing the Earth and its features on maps.",
                "Bioethics is the study of ethical issues arising from advances in medicine and biology.",
                "Motivation theory refers to studies that attempt to explain why people behave in certain ways to achieve goals.",
                "Microeconomics is the branch of economics that analyzes the behavior of individuals and companies in terms of consumption and production decisions.",
                "Cosmology is the science that studies the origin, evolution and destiny of the universe as a whole.",
                "A podcast is a series of audio episodes that can be downloaded or listened to online, usually focusing on a specific topic.",
                "Freelance refers to someone who works on their own, offering services to different clients without a fixed contract.",
                "A blog is a website where articles are published regularly, usually written by a person or a group of people on a specific topic.",
                "A meme is an image, video, or text that spreads rapidly across the Internet, often with humorous or satirical content.",
                "A startup is an emerging company, usually in the technology field, that seeks to solve a problem with an innovative business model.",
                "Content marketing is a marketing strategy that involves creating and sharing relevant content to attract and retain a specific audience.",
                "An influencer is a person who has the ability to influence the purchasing decisions of others due to their authority, knowledge or relationship with their audience.",
                "Crowdfunding is a method of collective financing where many people contribute small amounts of money, usually through the Internet, to finance a project.",
                "A webinar is a conference, workshop or presentation that is broadcast online, allowing remote participation of attendees.",
                "Augmented reality is a technology that superimposes digital elements on the real world, enhancing the user experience with additional information.",
                "SEO stands for Search Engine Optimization and refers to the techniques used to improve the visibility of a website in search engines.",
                "A vlog is a video blog where creators share visual content about their life, opinions or experiences.",
                "3D printing is an additive manufacturing process where a three-dimensional object is created from a digital design, layer by layer.",
                "The gig economy is a labour market where self-employed people work offering short-term services or temporary jobs.",
                "An e-book is a book in digital format that can be read on electronic devices such as tablets, e-book readers or computers.",
                "Cybersecurity refers to practices designed to protect devices, networks, programs, and data from attack, damage, or unauthorized access.",
                "Phishing is a form of online fraud where attackers impersonate trusted entities to obtain personal or financial information.",
                "An operating system is software that manages a computer's hardware and provides common services for the programs that run on it.",
                "E-commerce is the buying and selling of products or services over the Internet, ranging from small shops to large online marketplaces.",
                "Backup is a backup of data to protect against data loss, allowing data to be restored in the event of system failure or damage.",
                "Teleworking is an employment practice where employees perform their work from home or any remote location, using communication technologies.",
                "Online learning or e-learning is education or training that is conducted over the Internet using digital resources.",
                "Big Data refers to large volumes of data that can be analyzed to reveal patterns, trends and associations, especially related to human behavior.",
                "CRM stands for Customer Relationship Management and is a set of practices, strategies and technologies that companies use to manage and analyze interactions with customers.",
                "Online privacy is the protection of personal data of Internet users, preventing unauthorized access or use.",
                "Streaming is the real-time transmission of audio or video content over the Internet, allowing its consumption without having to download it.",
                "A firewall is a network security system that monitors and controls incoming and outgoing traffic based on predefined security rules.",
                "Gamification is the application of game mechanics in non-game contexts to motivate participation, engagement and loyalty.",
                "A robot vacuum cleaner is an automated device designed to clean floors autonomously, using sensors to navigate the space.",
                "Malware is an abbreviation for 'malicious software', which includes viruses, worms, Trojan horses and other programs designed to damage or disrupt systems.",
                "A smartwatch is an intelligent watch that, in addition to displaying the time, can perform functions such as receiving notifications, making payments, and monitoring health.",
                "App is short for application, a software designed to perform specific tasks on mobile devices or tablets.",
                "A chatbot is an artificial intelligence program designed to simulate human conversations, used in customer service or entertainment.",
                "Virtual reality is a technology that creates a simulated environment that feels real, allowing users to interact in three dimensions.",
                "Cloud computing refers to the use of remote servers to store, manage and process data, instead of using local hardware.",
                "A hashtag is a word or phrase without spaces preceded by the # symbol, used on social media to tag or categorize content.",
                "Conversational artificial intelligence is a type of AI that allows machines to understand and generate human language to interact naturally.",
                "Blockchain is a distributed ledger technology that allows information to be stored in secure, linked blocks, used in cryptocurrencies and more.",
                "A video podcast is similar to an audio podcast, but includes visual content, available for download or streaming on specific platforms.",
                "Affiliate marketing is an arrangement where a company pays affiliates for each visit, sale or registration that comes from the affiliate's link.",
                "Big tech refers to large technology companies that have a significant influence on the global economy and digital life.",
                "A virtual assistant is an AI application that can perform tasks or services for an individual based on natural language commands or questions.",
                "Home automation is the integration of technology into the home to automate and control functions such as lighting, security, and entertainment.",
                "Digitization is the process of converting analog information or activities into digital format, improving efficiency and accessibility.",
                "An NFT (Non-Fungible Token) is a type of digital asset that represents real or digital objects, unique and non-interchangeable, recorded on the blockchain.",
                "Mobile payment is a form of payment that uses mobile devices such as smartphones to make financial transactions.",
                "E-commerce is the purchase and sale of products or services over the Internet, including online stores and marketplace platforms.",
                "A QR code is a type of two-dimensional barcode that stores information to be read by electronic devices.",
                "Digital printing is a printing technique that uses digital methods to transfer images to various media without the need for plates.",
                "Fintech is a combination of 'finance' and 'technology' to describe new technologies that seek to make financial services more accessible.",
                "A social network is a digital platform where users create profiles and connect to share information, content and communicate.",
                "Cyber ​​resilience is an organization's ability to maintain operations and recover quickly from cyber incidents.",
                "IoT, or Internet of Things, refers to the interconnection of physical objects with electronic devices, sensors and software to exchange data.",
                "Digital marketing includes all marketing activities carried out through electronic media such as the web, mobile, email, etc.",
                "A corporate blog is a platform where a company publishes content related to its industry, products, services or organizational culture.",
                "A drone is an unmanned aerial vehicle that can be controlled remotely or fly autonomously, used for surveillance, filming, among other uses.",
                "Extended reality (XR) encompasses virtual, augmented and mixed reality, creating immersive experiences that blend the physical and digital.",
                "Remote work is employment performed outside of a central office, using digital tools to collaborate and communicate.",
                "Machine learning is a branch of AI that allows systems to improve their performance without being explicitly programmed.",
                "A business plan is a document that details a company's objectives, the strategies to achieve them, and relevant financial analyses.",
                "A hat-trick is when a player scores three goals in a single match.",
                "Offside occurs when a player is closer to the opponent's goal line than the ball and the second-to-last defender when the ball is passed to him by a teammate.",
                "A penalty is a free kick from the penalty mark, awarded for an infringement committed inside the penalty area.",
                "Catenaccio is an Italian defensive tactic, which uses a very defensive scheme with a libero to counter the opposing team's attacks.",
                "The death pass is a horizontal pass from the wing to the center, just behind the opposing defense, ideal for scoring goals.",
                "A corner kick is a free kick from the corner of the field when the ball goes out of bounds after being touched by a defender.",
                "An Olympic goal is a goal scored directly from a corner kick.",
                "Added time is the extra time that the referee adds at the end of each half to compensate for stoppages in play.",
                "A direct free kick allows you to attempt to score a goal directly without another player needing to touch the ball first.",
                "The offside rule is to prevent attackers from positioning themselves illegally near the opposing goal.",
                "A change of direction is a pass that changes the flank of the game, seeking to unbalance the defending team.",
                "A dribble is the action of a player to avoid an opponent while maintaining control of the ball.",
                "A goal kick occurs when the ball goes out of play after being touched by an attacker; the goalkeeper restarts play.",
                "The defensive zone is the area of ​​the field closest to the team's own goal, where the team's defense is concentrated.",
                "Relegation is when a team moves from a higher to a lower category due to poor performance in the league.",
                "Promotion is the process of a team moving from a lower division to a higher one due to good performance.",
                "An elevator team is one that frequently moves up and down between different divisions without settling into a single category.",
                "The back-pass rule prohibits the goalkeeper from taking the ball with his hands if it was deliberately passed to him with his foot by a teammate.",
                "Man-to-man marking is a tactic where each defender is responsible for marking a specific opposing attacker.",
                "An own goal is when a player scores a goal into his own goal, counting in favor of the opposing team.",
                "A phantom goal is a goal that enters the goal but is not seen or recognized by the referee, usually due to a lack of technology.",
                "A counterattack is a quick transition from defense to attack, taking advantage of the opposing team's disorganization.",
                "The libero is a defender who acts as a sort of 'sweeper', behind the defensive line, to collect lost balls.",
                "A bicycle kick is a goal scored with an acrobatic back kick, with the player jumping and hitting the ball over his head.",
                "Goal average is the difference between goals scored and goals conceded, used as a tiebreaker in some leagues.",
                "A rondo is a training exercise where players pass the ball around in a circle while one player tries to recover it.",
                "Total football is a playing philosophy where all players can occupy any position, promoting fluidity and flexibility.",
                "A throw-in is the method of restarting play when the ball goes out of bounds by taking the ball with the hands.",
                "High pressing is a strategy where players aggressively press opposing defenders to win back the ball close to their penalty area.",
                "A reverse hat-trick is when a player scores three own goals, a rarity in the sport."
            ]
        },
        {
            "tag": "consultation_procedimientos_varios",
            "patterns": [
                "How do I change a wheel?",
                "How can I cook rice?",
                "How do I fix a dripping faucet?",
                "How do I install a lamp?",
                "How do I configure my router?",
                "How do I clean a carpet?",
                "How do I remove a wine stain from clothes?",
                "How do I plant a tree?",
                "How do I change a light bulb?",
                "How do I disinfect the house?",
                "How do I properly store food?",
                "How do I paint a wall?",
                "How do I fix a broken car?",
                "How to make a bed?",
                "How do I cut an onion without crying?",
                "How do I make coffee?",
                "How do I deflate a bicycle tire?",
                "How do I feed a cat?",
                "How do I install an app on my phone?",
                "How do I learn to swim?",
                "How do I untie a knot?",
                "How do I charge my cell phone faster?",
                "How do I change a watch battery?",
                "How do I recycle properly?",
                "How do I disinfect my mobile phone?",
                "How do I install an operating system on my computer?",
                "How do I make homemade pizza?",
                "How do I organize my closet?",
                "How do I care for an indoor plant?",
                "How do I format a hard drive?",
                "How do I knit a scarf?",
                "How do I fix a cell phone with a broken screen?",
                "How do I build a wooden piece of furniture?",
                "How do I install an air conditioner?",
                "How do I delete my browsing history?",
                "How do I make a personal budget?",
                "How do I care for my skin after a burn?",
                "How do I change a blown fuse?",
                "How do I sharpen a knife?",
                "How do I organize a party?",
                "How do I make compost?",
                "How do I change the oil in my car?",
                "How do I ride a bike?",
                "How do I choose a good wine?",
                "How to shave properly?",
                "How do I fix a broken bike chain?",
                "How do I install a ceiling fan?",
                "How do I fix a water leak in the house?",
                "How do I make a salad?",
                "How do I remove old paint from a surface?",
                "How do I make my clothes look newer?"
            ],
            "responses": [
                "To change a wheel, make sure you have a jack, a wrench, and a spare wheel. Jack up the car, remove the bolts, change the wheel, and tighten the bolts again.",
                "To cook rice, rinse the rice, put it in a pot with water (about 1.5 parts water to 1 part rice), bring to a boil, then cook over low heat for 18-20 minutes.",
                "To fix a leaky faucet, turn off the water supply, disassemble the faucet, check the washer and replace it if it is damaged. Reassemble the faucet and turn on the water.",
                "To install a light fixture, turn off the electrical power, connect the light fixture wires to the ceiling wires according to the color code, and screw the light fixture into place.",
                "To configure a router, connect the internet cable to the router's WAN port, plug it into a power source, and access the settings through a web browser.",
                "To clean a carpet, use a vacuum cleaner to remove dust. Then, use a suitable carpet cleaner and a rag to rub the stains. Allow to dry thoroughly.",
                "To remove a wine stain from clothing, first apply salt to the stain, then rinse with cold water. Afterwards, apply detergent and wash the garment as normal.",
                "To plant a tree, dig a hole larger than the tree's root ball, place the tree in the hole, cover with soil, and water well.",
                "To change a light bulb, turn off the power, unscrew the broken bulb, place the new one in its place, and turn the power back on.",
                "To disinfect your home, use a disinfectant cleaner on high-touch surfaces like door handles, tables, and phones. Wear gloves and ventilate the area.",
                "To properly store food, be sure to seal it well in airtight containers and place it in the refrigerator or freezer as needed.",
                "To paint a wall, cover the floor and furniture with plastic, apply a coat of primer if necessary, and then paint with a brush or roller.",
                "To fix a broken car, identify the problem (battery, engine, etc.), make sure you have the necessary tools, and follow the car's manual.",
                "To make the bed, place the fitted sheets on the mattress, stretch the sheets well and cover with the blanket and pillows.",
                "To cut an onion without crying, chill it in the refrigerator before cutting and use a sharp knife to reduce the release of irritating compounds.",
                "To make coffee, place ground coffee in a filter, pour hot water over it and let the coffee drip into the carafe or cup.",
                "To remove air from a bicycle tire, use a hand pump with a pressure gauge to press the air out or a deflator if necessary.",
                "To feed a cat, put food in its dish and make sure it has access to fresh water at all times.",
                "To install an app on your phone, go to the app store, search for the desired app, press 'Install' and wait for it to complete.",
                "To learn to swim, start with lessons in a deep pool, practice floating and breathing, and gradually learn to move your arms and legs.",
                "To undo a knot, use a little oil or water to loosen the knot and then use your fingers to gently separate the fibers of the thread or rope.",
                "To charge your phone faster, use a high-power charger, turn off your phone while charging, and make sure it's not using too many apps.",
                "To change a watch battery, open the watch cover, carefully remove the old battery and insert the new one, making sure it is in the correct position.",
                "To recycle properly, separate recyclable materials such as plastic, glass and paper, and place them in the containers designated for each type of material.",
                "To disinfect your phone, use a soft, damp cloth with isopropyl alcohol to clean the screen and surfaces of the device.",
                "To install an operating system on your computer, insert the disc or USB containing the operating system, restart the computer and follow the on-screen instructions.",
                "To make homemade pizza, prepare the dough, add tomato sauce, cheese and your favorite toppings, and bake in a preheated oven at 220°C for about 15 minutes.",
                "To organize your closet, divide clothing by type (shirts, pants, etc.) and frequency of use. Use boxes or dividers to maximize space.",
                "To care for an indoor plant, make sure it receives the right amount of light, water according to the plant's needs, and change the soil when necessary.",
                "To format a hard drive, go to 'Disk Management' on your computer, select the drive, choose 'Format' and follow the steps prompted.",
                "To knit a scarf, choose the right yarn and needles, tie an initial knot, and then knit in knit stitch or in the pattern of your choice.",
                "To fix a mobile phone with a broken screen, buy a replacement screen, use a special tool to remove the damaged screen, and replace it.",
                "To build a wooden piece of furniture, follow the instructions in the manual, use the appropriate screws and tools, and make sure that all the pieces fit together properly.",
                "To install an air conditioner, place the outdoor unit in a ventilated location, connect the refrigerant pipes and the indoor unit, and follow the manufacturer's instructions.",
                "To delete your browsing history, go to your browser settings, select the 'Clear history' option and choose the period you want to delete.",
                "To make a personal budget, record all your monthly income and expenses, calculate your savings and adjust your spending if necessary to meet your goals.",
                "To care for your skin after a burn, apply a moisturizing cream or aloe vera gel, avoid the sun, and keep the area clean and covered if necessary.",
                "To replace a blown fuse, turn off the power, remove the old fuse, and replace it with one of the same type and rating.",
                "To sharpen a knife, use a whetstone or electric sharpener, and run the knife across the stone at about a 20-degree angle to keep it sharp.",
                "To organize a party, choose a theme, make a guest list, prepare the food and drinks, and decorate the venue according to the chosen theme.",
                "To make compost, place food scraps, leaves and other organic materials in a container, keep the mixture moist and turn occasionally.",
                "To change the oil in your car, jack up the car, remove the drain screw, drain the old oil, add the new oil and make sure it is at the correct level.",
                "To assemble a bike, start with the frame, attach the wheels, handlebars and pedals, and tighten all nuts and bolts before testing.",
                "To choose a good wine, consider the type of grape, the region and the vintage. If it's for a specific meal, make sure it pairs well with the dishes.",
                "To shave properly, wet your face with warm water, apply shaving cream, use a clean razor and shave in the direction of hair growth.",
                "To fix a broken bike chain, remove the chain from the bike, find the broken link and replace it or use a chain connector to join the ends.",
                "To install a ceiling fan, turn off the electricity, attach the fan bracket to the ceiling, connect the wires, and position the blades securely.",
                "To fix a water leak in your home, turn off the water supply, find the source of the leak, use plumber's tape, or replace the damaged part.",
                "To make a salad, chop up your favorite vegetables, add protein like chicken or egg, season with oil, vinegar, salt and pepper to taste.",
                "To remove old paint from a surface, use a paint remover, apply to the surface and scrape with a putty knife until the paint comes off.",
                "To keep your clothes looking newer, wash with appropriate detergents, iron properly, and store clothes so that they do not become deformed."
            ]
        },
        {
            "tag": "consultation_como_funciona",
            "patterns": [
                "How does a printer work?",
                "How does the internet work?",
                "How does a car engine work?",
                "How does the solar system work?",
                "How does a mobile phone work?",
                "How does a television work?",
                "How does a refrigerator work?",
                "How does a bicycle work?",
                "How does Wi-Fi work?",
                "How does a digital camera work?",
                "How does a graphics card work?",
                "How does a washing machine work?",
                "How does an elevator work?",
                "How does a microwave work?",
                "How does an LED lamp work?",
                "How does a smart watch work?",
                "How does Bluetooth work?",
                "How does an operating system work?",
                "How does an airplane work?",
                "How does a GPS work?",
                "How does email work?",
                "How does a car battery work?",
                "How does a cooling system work?",
                "How does a 3D printer work?",
                "How does an air conditioner work?",
                "How does solar energy work?",
                "How does a security camera work?",
                "How does a radar work?",
                "How does blockchain work?",
                "How does a digital lock work?",
                "How does the immune system work?",
                "How does electricity work?",
                "How does a Bluetooth speaker work?",
                "How does cryptocurrency work?",
                "How does a website work?",
                "How does a rechargeable battery work?",
                "How does a smart thermostat work?",
                "How does postal mail work?",
                "How does a train work?",
                "How does an electric motor work?",
                "How does wind energy work?",
                "How does a router work?",
                "How does teleworking work?",
                "How does a digital thermometer work?",
                "How does a laser printer work?",
                "How does a microphone work?",
                "How does a GPS work in a car?",
                "How does a heater work?",
                "How does an air pump work?",
                "How does a scientific calculator work?"
            ],
            "responses": [
                "A printer works by receiving a signal from a computer or mobile device, telling it what to print. It then uses ink or toner to transfer the image or text onto paper.",
                "The Internet works through a global network of servers and cables that allow high-speed data transmission between connected devices.",
                "A car engine works by burning fuel inside its cylinders. This combustion generates energy that moves the pistons, which turn the crankshaft to move the vehicle.",
                "The solar system is powered by the sun's gravity, which keeps the planets in orbit around it. Planets, moons, and other objects are all in constant motion.",
                "A mobile phone works by sending and receiving signals through cell towers, Wi-Fi or Bluetooth, and processing data using its operating system and internal hardware.",
                "A television works by receiving audio and video signals, either through cable, satellite, or Wi-Fi. These signals are processed and then displayed on the screen.",
                "A refrigerator works by extracting heat from inside the compartment and releasing it into the outside environment. This is achieved through a cycle of compression and expansion of a refrigerant gas.",
                "A bicycle works by means of pedals, which turn a chain which in turn turns the rear wheel. The power is transferred to the wheels to move them forward.",
                "Wi-Fi works by using radio waves that allow data to be transmitted between a router and devices within range. The data travels in the form of digital signals.",
                "A digital camera works by capturing images through an image sensor. This sensor converts the light entering through the lens into electrical signals that are processed and stored.",
                "A graphics card works by processing a computer's graphics and video, using its own processor to take the load off the CPU and output images to the monitor.",
                "A washing machine works by using a motor to spin the drum, where water and detergent are mixed. The water is pumped out and removed at the end of the wash cycle.",
                "An elevator works by means of a system of pulleys and counterweights that allow it to move up and down within a building.",
                "A microwave works by using electromagnetic waves (microwaves) to heat water molecules in food, which generates heat and cooks the food quickly.",
                "An LED lamp works by using a semiconductor diode that emits light when an electric current passes through it. They are very energy efficient.",
                "A smartwatch works by using sensors and wireless connectivity (Bluetooth, Wi-Fi) to monitor health, receive notifications, and run apps.",
                "Bluetooth works by transmitting radio waves over short distances between devices, allowing them to exchange data without the need for cables.",
                "An operating system works by managing the hardware of the computer or mobile device and providing an interface for users to interact with applications.",
                "An airplane works by generating a pressure difference between the top and bottom of its wings through speed, which creates a lift force that allows it to fly.",
                "A GPS works by using signals sent by satellites that transmit their position. GPS devices calculate the user's location by comparing these signals.",
                "Email works by sending messages through mail servers, which receive, store, and deliver the messages to destination addresses over the Internet.",
                "A car battery works by storing chemical energy that is converted into electrical energy to power the engine and other electronic components of the vehicle.",
                "A cooling system works by extracting heat from a space or liquid and dissipating it through a system of tubes or a fan.",
                "A 3D printer works by adding successive layers of material (such as plastic or metal) in the form of filament, until a three-dimensional object is built.",
                "An air conditioner works by a refrigeration cycle that removes heat from indoor air and replaces it with cooler air using a refrigerant gas.",
                "Solar energy works by capturing sunlight with solar panels and converting it into electrical or thermal energy through a photovoltaic or thermal conversion process.",
                "A security camera works by recording video of a specific area, which is then stored on a hard drive or in the cloud for later monitoring.",
                "Radar works by emitting radio waves that bounce off nearby objects, and then detects the return of those waves to calculate the objects' distance and speed.",
                "Blockchain works as a digital record of transactions that is decentralized, secure and public. Each block of information is linked to the previous one irreversibly.",
                "A digital lock works through an electronic system that is activated by entering a code, card or fingerprint, unlocking a door without the need for a traditional key.",
                "The immune system works by protecting the body from invaders such as bacteria, viruses and fungi, through a series of cells and processes that detect and destroy these agents.",
                "Electricity works as the flow of electrons through a conductor, allowing power to be supplied to electrical devices.",
                "A Bluetooth speaker works by transmitting audio signals over radio waves, which are received by the speaker to play the sound.",
                "Cryptocurrency works as a digital currency that uses blockchain technology to record transactions in a decentralized and secure way.",
                "A website works through a server that hosts the content of the page and sends it to the user's browser using the HTTP or HTTPS protocol.",
                "A rechargeable battery works by storing energy inside it, which can then be released when needed. It is recharged by applying an electric current.",
                "A smart thermostat works by automatically adjusting the temperature of a space using sensors and algorithms based on user preferences.",
                "Postal mail works by collecting letters or packages, sorting them at distribution centers, and delivering them to the destination address through a transportation network.",
                "A train works by using an engine to move cars along railroad tracks, which are a structure of rails designed to guide the train along its route.",
                "An electric motor works by using electrical energy to move a rotor within a magnetic field, generating motion that can be used in a variety of devices.",
                "Wind power works by using wind to move the blades of a wind turbine, which then converts the kinetic energy into electrical energy.",
                "A router works by directing data traffic between your local area network (LAN) and the Internet, allowing multiple devices to connect to the same network.",
                "Teleworking works by using digital tools such as email, video calls and collaboration platforms that allow you to work from anywhere.",
                "A digital thermometer works by detecting temperature through a temperature sensor that converts heat into an electrical signal which is then displayed on a screen.",
                "A laser printer works by using a laser beam to create an electrostatic image on a drum, which is then transferred to a sheet of paper using toner.",
                "A microphone works by capturing sound waves and converting them into electrical signals that can be processed by a sound or recording system.",
                "A GPS in a car works by using satellite signals to determine the exact location of the vehicle and then displays real-time directions to guide the driver.",
                "A heater works by heating the air using an electric resistor or a combustion system, and then distributing it throughout the room using a fan.",
                "An air pump works by using a motor to create pressure that forces air outward, allowing objects such as tires or balls to be inflated.",
                "A scientific calculator works by using electronic circuits to perform complex mathematical operations such as trigonometry, logarithms, and advanced algebra."
            ]
        },
        {
            "tag": "consultation_faq",
            "patterns": [
                "What are the opening hours?",
                "How can I change my password?",
                "How can I contact support?",
                "Where is my order?",
                "How can I make a return?",
                "What is the privacy policy?",
                "How can I make a payment?",
                "How does the points system work?",
                "Can I cancel my subscription?",
                "What forms of payment do you accept?",
                "What is the address of the store?",
                "How can I change my shipping address?",
                "How do I know if my order has been shipped?",
                "How long does shipping take?",
                "Can I return a product?",
                "Do the products have a guarantee?",
                "How can I get a refund?",
                "What is the shipping cost?",
                "Do you offer international shipping?",
                "How can I create an account?",
                "Can I change my billing address?",
                "How can I update my personal information?",
                "How can I reset my password?",
                "Are there any discounts or promotions available?",
                "Can I purchase from another country?",
                "How can I subscribe to updates?",
                "Can I purchase without registering?",
                "Where can I see the terms of use?",
                "Can I request an invoice?",
                "How can I cancel an order?",
                "What do I do if I receive a defective product?",
                "How can I track my order?",
                "Can I change the payment method after placing an order?",
                "How can I contact customer service?",
                "What is the support contact number?",
                "What are the requirements for placing an order?",
                "How do I know if an item is available?",
                "What do I do if I have a problem with my account?",
                "Can I buy a gift for someone else?",
                "How long do I have to return a product?",
                "How can I get a discount code?",
                "Can I add multiple products to the cart?",
                "How do I know if my order was confirmed?",
                "Can I choose a specific delivery time?",
                "How can I update my email address?",
                "Do you offer free shipping?",
                "What should I do if I didn't receive a confirmation email?"
            ],
            "responses": [
                "Our business hours are Monday through Friday, 9:00 AM to 6:00 PM.",
                "To change your password, go to the 'My Account' section and select 'Change Password'.",
                "You can contact our support by calling 123-456-7890 or sending an email to soporte@empresa.com.",
                "To view the status of your order, log in to your account and check the 'My Orders' section.",
                "To make a return, please visit the returns page on our website.",
                "You can review our privacy policy in the footer of our website.",
                "You can make a payment by credit card, debit card, PayPal or bank transfer.",
                "Our points system allows you to accumulate points for each purchase you make. These points can be exchanged for discounts.",
                "Yes, you can cancel your subscription at any time from your account in the 'Subscriptions' section.",
                "We accept payments with Visa, MasterCard, American Express and PayPal.",
                "Our store is located at 123 Fictitious Street, Example City.",
                "To change your shipping address, go to your account and edit your shipping information before checking out.",
                "Once your order is shipped, you will receive an email with tracking information.",
                "Shipping time depends on your location. Domestic shipping usually takes 3-5 business days.",
                "Yes, you can return a product as long as it is in its original condition and within the 30-day return period.",
                "All our products have a 12-month warranty against manufacturing defects.",
                "To request a refund, please contact our customer support with your order number.",
                "Shipping cost depends on the weight of the package and the delivery location. You can calculate it when ordering.",
                "Yes, we offer international shipping to most countries. Rates vary by destination.",
                "To create an account, click 'Sign Up' at the top of our page and follow the steps.",
                "Yes, you can change your billing address in the 'My Account' section before making a payment.",
                "To reset your password, click 'Forgot your password?' on the login screen.",
                "Yes, we have regular discounts. You can subscribe to our newsletter to receive the latest offers.",
                "Yes, you can purchase from any country. Just make sure you select the correct shipping country.",
                "To subscribe to our updates, enter your email in the subscription section on our homepage.",
                "Registration is not required to purchase, but registration will allow you to track your orders and save your details.",
                "The terms of use can be found in the link at the bottom of our website.",
                "Yes, if you wish, you can request an invoice for your purchase through your account.",
                "If you wish to cancel your order, you must do so before the shipment is processed. Please contact our customer support.",
                "If you receive a defective product, please contact our support to manage a return or exchange.",
                "You can track your order using the tracking number provided in your shipping confirmation email.",
                "Once you've made a payment, you won't be able to change your payment method, but you can contact support if you need help.",
                "You can contact our customer service via email or phone. Find the details on our contact page.",
                "Our support number is 123-456-7890. We are available during business hours.",
                "The requirements to place an order are to have a registered account and a valid payment method.",
                "You can check the availability of an item on the product page. If it is out of stock, you will see the option to receive notifications.",
                "If you have a problem with your account, please contact us so we can resolve it as quickly as possible.",
                "Yes, you can purchase a gift for someone else and have the order shipped directly to their address.",
                "You have 30 days to return a product. Make sure it is in its original condition for a full refund.",
                "You can get a discount code by subscribing to our newsletter or participating in our special promotions.",
                "Yes, you can add multiple products to your cart and continue shopping until you are ready to checkout.",
                "You will receive a confirmation email once your order has been processed and shipped.",
                "Unfortunately, we don't offer the option to choose a specific delivery time, but you can track your order to see when it will arrive.",
                "You can update your email address in the 'My Account' section at any time.",
                "Yes, we offer free shipping on orders over $50.",
                "If you do not receive a confirmation email, please check your spam folder or contact our support team."
            ]
        },
        {
            "tag": "consultation_faq2",
            "patterns": [
                "What payment methods are available?",
                "How can I track my order?",
                "What do I do if my order is damaged?",
                "How long does shipping take?",
                "Can I change my shipping address?",
                "How can I return an item?",
                "Do you offer student discounts?",
                "How can I contact customer service?",
                "What should I do if I forget my password?",
                "Can I pay by credit card?",
                "Are there cash on delivery payment options?",
                "Do you have a physical store?",
                "Do you ship internationally?",
                "How can I cancel an order?",
                "Do you have a warranty on your products?",
                "How can I update my email address?",
                "Is it safe to purchase from your website?",
                "Can I add a discount coupon after placing an order?",
                "How much does shipping cost?",
                "How can I get a receipt for my purchase?",
                "Do you have a privacy policy?",
                "Can I place an order by phone?",
                "Can I change the size of a product after purchasing it?",
                "Do you have mobile apps?",
                "When will I receive my refund?",
                "Do you offer installment payment options?",
                "How do I subscribe to your newsletter?",
                "How can I modify or cancel a subscription?",
                "Can I purchase without having an account?",
                "Can I see the status of my order online?",
                "Are there any additional charges for taxes?",
                "Can I modify my order after I have placed it?",
                "Do you have PayPal payment options?",
                "Do you offer support in multiple languages?",
                "How can I make a purchase as a company?",
                "Do you have a loyalty program?",
                "Can I use my gift card online?",
                "How do I unsubscribe from your newsletter?",
                "Do you have easy return policies?",
                "Do you offer customized products?",
                "How can I make a formal complaint?",
                "Can I purchase out-of-stock products?",
                "Where can I find the terms of service?",
                "What is your return policy?",
                "Can I get a refund for a sale purchase?",
                "What are your customer service hours?",
                "Do you have express shipping options?",
                "Can I add a comment to my order?",
                "Can I exchange a defective product in store?"
            ],
            "responses": [
                "We accept payments by credit card, debit card, PayPal and other electronic payment methods available on our platform.",
                "You can track your order using the tracking number we sent you by email.",
                "If your order arrives damaged, please contact our customer service to resolve the issue.",
                "Shipping time varies by location, but generally takes between 3-7 business days.",
                "If you wish to change your shipping address, please contact us as soon as possible before your order is processed.",
                "If you wish to return an item, please ensure it is in its original condition and contact our customer service team for instructions.",
                "Yes, we offer student discounts. Make sure to sign up with your institutional email to receive them.",
                "You can contact our customer service via email, phone or live chat on our website.",
                "If you have forgotten your password, you can easily reset it by following the 'Forgot your password?' link on the login page.",
                "Yes, we accept credit card payments through a secure online payment system.",
                "We do not currently offer cash on delivery. We only accept electronic payments for now.",
                "We do not have physical stores at this time, we only operate online.",
                "Yes, we ship internationally. Please check our international shipping rates and times on our international shipping page.",
                "If you wish to cancel an order, please contact us before the shipment is processed to avoid additional charges.",
                "Yes, we offer a warranty on many of our products. Please refer to the specific warranty for each item.",
                "To update your email address, log in to your account and edit your details in the 'My Profile' section.",
                "Yes, our platform is protected with security measures to ensure that your data is safe during the purchasing process.",
                "No, discount coupons must be applied at checkout. They cannot be added once the order has been placed.",
                "Shipping costs depend on location and order size. You can see the exact rates before completing your purchase.",
                "You can obtain a receipt for your purchase by accessing the 'My Orders' section in your account or by requesting one through our customer service.",
                "Yes, we have a privacy policy that you can consult on our website to learn how we protect your data.",
                "We do not currently offer the option to order by phone, only online.",
                "We cannot exchange the size of a product after the order has been confirmed, but you can return it if it is not suitable.",
                "Yes, we have a mobile app available for iOS and Android devices, which you can download from the respective stores.",
                "Refunds for an order usually take between 5 to 10 business days, depending on the payment method used.",
                "Yes, we offer installment payment options through select online payment services.",
                "To subscribe to our newsletter, enter your email address in the subscription section on our website.",
                "You can modify or cancel your subscription from the link that appears at the bottom of each email you receive.",
                "Yes, you can purchase as a guest without creating an account.",
                "Yes, you can view the status of your order online using the tracking number provided.",
                "Additional taxes may apply depending on the region or country to which the order is shipped.",
                "Once your order is placed, you cannot modify it, but you can cancel it if it has not been processed yet.",
                "Yes, we offer PayPal payment options on our secure payment platform.",
                "Yes, we offer support in multiple languages ​​to help you with any questions you may have.",
                "To make a purchase as a company, you can register on our platform with your company details.",
                "Yes, we have a loyalty program that offers special discounts and promotions to our frequent customers.",
                "Yes, you can use your gift card online in our online store during checkout.",
                "To unsubscribe from our newsletter, simply click the 'Unsubscribe' link at the bottom of any email.",
                "Yes, we have a returns policy that allows you to return products within a certain time after purchase.",
                "Yes, we offer custom products. Please check the custom products section in our store for more details.",
                "If you wish to make a formal complaint, please contact us via our online contact form or by email.",
                "If a product is out of stock, you can sign up to receive a notification when it is back in stock.",
                "You can find the terms of service at the bottom of our website, under the 'Terms and Conditions' link.",
                "Our return policy allows you to return products in their original condition within 30 days of purchase.",
                "No, we do not offer refunds for products purchased on sale, unless the product is defective or damaged.",
                "Our customer service hours are Monday to Friday, 9:00 a.m. to 6:00 p.m. local time.",
                "Yes, we offer express shipping options for an additional cost, with faster delivery times.",
                "It is not possible to add a comment to your order once it has been placed, but you can contact us for special requests before it is processed.",
                "If a product is defective, you can exchange it in store if you are near one of our physical locations."
            ]
        },
        {
            "tag": "consultation_gestionar_errores",
            "patterns": [
                "I didn't understand that, can you repeat it?",
                "Sorry, I didn't understand what you said.",
                "Can you explain that again?",
                "I'm sorry, I don't understand what you're saying.",
                "I'm not sure I understood correctly.",
                "What do you mean by that?",
                "I'm not understanding, can you clarify?",
                "Could you be more clear?",
                "I don't know what you mean, can you explain?",
                "I'm sorry, but I don't understand the question.",
                "I didn't understand, can you be more specific?",
                "Could you rephrase your question?",
                "That wasn't clear to me, can you repeat it?",
                "Sorry, I don't understand that part.",
                "I don't know if I understood correctly, can you say it again?",
                "I didn't quite understand you, can you say it differently?",
                "I don't understand, can you give me more details?",
                "It's not clear to me, can you explain it in another way?",
                "Sorry, but I don't know what that means.",
                "I can't understand what you're saying, can you rephrase it?",
                "Sorry, I'm not sure what you mean.",
                "I'm sorry, I don't quite understand your question.",
                "Could you repeat that more slowly?",
                "I'm sorry, I don't know what you mean.",
                "It's not clear to me what you're asking.",
                "I can't understand what you're saying, can you explain better?",
                "Sorry, I didn't understand the previous part.",
                "Sorry, I don't understand that.",
                "I couldn't understand your request, can you be more clear?",
                "I didn't understand that part, can you explain it again?",
                "I'm not sure what you need, can you clarify?",
                "Could you explain that to me in another way?",
                "I didn't understand you well, can you say it again?",
                "I don't understand, could you speak more clearly?",
                "I'm sorry, but I can't understand that.",
                "I'm not sure what you're asking, can you be more specific?",
                "I didn't understand, can you give me more information?",
                "I don't know if I understood correctly, can you repeat?",
                "Sorry, can you be more detailed?",
                "Could you speak more slowly? I didn't understand well.",
                "I didn't quite understand your request, can you explain further?",
                "I'm not understanding what you mean, can you give me examples?",
                "I'm sorry, could you explain it again in a different way?",
                "It's not clear to me, can you give me more details?",
                "Can you explain it step by step?",
                "I don't fully understand, can you clarify what you said?",
                "Sorry, that doesn't make sense to me.",
                "I'm not understanding what you're saying, can you rephrase?",
                "Sorry, I need more information to understand.",
                "I don't know what you mean, can you explain more?"
            ],
            "responses": [
                "I'm sorry, I didn't understand what you said. Can you repeat it?",
                "Sorry, I couldn't understand it. Could you explain it again?",
                "I didn't understand you well, can you be more clear?",
                "I'm sorry, I didn't understand your question. Could you clarify?",
                "I'm not sure what you need, can you give me more details?",
                "Sorry, I don't understand that part. Can you explain it differently?",
                "Sorry, I didn't fully understand. Can you repeat it?",
                "I didn't understand what you said, can you explain more?",
                "Sorry, that wasn't clear to me. Can you be more specific?",
                "I couldn't understand that, can you say it another way?",
                "Sorry, could you be more detailed?",
                "I don't know if I understood correctly, can you repeat it?",
                "That wasn't clear to me, can you explain it better?",
                "I'm sorry, I can't understand it. Can you be more precise?",
                "I don't understand what you mean, can you clarify?",
                "Sorry, I'm not sure what you mean.",
                "Sorry, I didn't understand the question. Can you explain it again?",
                "I didn't understand you well, can you say it again?",
                "I'm sorry, I couldn't understand what you said. Can you clarify?",
                "I'm not sure if I understood correctly, can you give me more details?",
                "Sorry, I'm not sure what you're asking. Can you clarify?",
                "Sorry, I didn't quite understand what you said, can you repeat it?",
                "Sorry, that's not clear to me, can you explain more?",
                "Sorry, I can't understand it, can you give more details?",
                "I'm not understanding what you're saying, can you say it differently?",
                "Sorry, I need more information to understand.",
                "I couldn't understand that, can you be more precise?",
                "Sorry, I didn't understand that part. Can you give me more details?",
                "Sorry, I'm not sure what you need, can you explain further?",
                "I'm sorry, but I didn't quite understand the question. Can you repeat it?",
                "I don't know if I understood it correctly, can you say it another way?",
                "I'm sorry, can you explain that in more detail?",
                "I didn't understand what you said, can you repeat it more slowly?",
                "Sorry, I couldn't understand it. Can you be more clear?",
                "I'm sorry, I can't understand what you're saying. Can you explain it better?",
                "Sorry, I didn't understand. Could you give me more details?",
                "Sorry, that doesn't make much sense to me, can you explain it better?",
                "I'm not understanding what you're saying, can you give me examples?",
                "Sorry, I didn't fully understand, can you explain better?",
                "I'm sorry, can you clarify what you said?",
                "I'm not sure what you're asking, can you be more clear?",
                "I'm sorry, I didn't understand your request. Can you explain it in another way?",
                "I'm not understanding what you need, can you be more specific?",
                "Sorry, I didn't understand that, can you say it again?",
                "I couldn't understand what you said, can you repeat it?",
                "I'm sorry, I don't understand, can you explain that more slowly?"
            ]
        },
        {
            "tag": "consultation_chistes_bromas_adivinanzas",
            "patterns": [
                "Tell me a joke",
                "Do you have a joke?",
                "Tell me a joke",
                "Make me laugh",
                "Tell me something funny",
                "I want to hear a joke",
                "Tell me a short joke",
                "Do you know any riddles?",
                "Tell me a difficult riddle",
                "I'm curious to hear a joke",
                "Tell me an animal joke",
                "Do you know any children's jokes?",
                "Do you have any riddles for me?",
                "Play a joke on me",
                "Tell me a funny story",
                "Can you tell me an easy riddle?",
                "How about a dark humor joke?",
                "I want to hear something funny",
                "Do you have a joke for today?",
                "Tell me a funny joke",
                "Tell me something to laugh about",
                "Do you know any math jokes?",
                "Tell me a classic riddle",
                "Do you have any jokes to cheer me up?",
                "Do you know any office jokes?",
                "Make me think with a riddle",
                "Can you tell me an animal joke?",
                "Tell me a short and funny joke",
                "I want to hear a food joke",
                "Do you know any jokes about school?",
                "Tell me a Christmas riddle",
                "Can you tell me a joke for kids?",
                "Tell me a joke about work",
                "Tell me a doctor joke",
                "Do you have a technology joke?",
                "Make me laugh with a riddle",
                "Do you have any jokes about friends?",
                "Can you tell me a joke about teachers?",
                "Do you know any animal riddles?",
                "Tell me a sports joke",
                "Tell me a joke about work",
                "Make me think with a difficult riddle",
                "Do you have any jokes to tell me?",
                "Tell me an adult joke",
                "Can you tell me a fun riddle?",
                "Make me laugh with a short joke",
                "Tell me a funny riddle",
                "Do you have a Christmas joke?",
                "Tell me a light joke",
                "Tell me a party joke",
                "Tell me a fruit joke",
                "Tell me a new joke",
                "Do you have a funny riddle?",
                "Do you know any tech jokes?",
                "Tell me a funny animal joke",
                "Do you know a fun riddle?",
                "I want to laugh, do you have a joke?",
                "Tell me a trick riddle",
                "Tell me something to laugh about",
                "Make me laugh with a clever joke",
                "Do you have any bad but funny jokes?",
                "Tell me a riddle that will surprise me",
                "Tell me a silly joke",
                "Do you know any riddles about food?",
                "Tell me a short and bad joke",
                "Tell me a joke for kids",
                "Do you know a logic riddle?",
                "Make me think with an original riddle",
                "Do you have a joke to break the ice?",
                "Tell me a short and funny story",
                "Tell me a sports joke",
                "Do you know a riddle about nature?",
                "Tell me a joke about scientists",
                "Tell me a complicated riddle",
                "Make me a joke that makes me laugh a lot",
                "Tell me an office joke",
                "Do you know a riddle for little kids?",
                "Tell me a silly animal joke",
                "Tell me something funny about food",
                "Do you know a joke about inventions?",
                "Tell me an engineering joke",
                "Tell me a riddle about animals",
                "Do you know any short but funny jokes?",
                "Tell me a math joke",
                "Make me laugh with something unexpected",
                "Tell me a birthday joke",
                "Do you have a riddle about everyday objects?",
                "Tell me a classic joke",
                "Do you know any riddles about the weather?",
                "Tell me something fun about sports",
                "Make me laugh with a cooking joke",
                "Do you have a joke for children?",
                "Tell me a riddle that is difficult",
                "Tell me a joke about friends",
                "Do you know a joke about doctors?",
                "Tell me a riddle to think about",
                "Tell me a travel joke",
                "Do you know any jokes about weird animals?",
                "Tell me a joke about school",
                "Ask me a fun question",
                "Tell me a joke about professions",
                "Do you know any fun logic riddles?",
                "Tell me a joke that involves food",
                "Tell me something funny about the office",
                "Make me laugh with something unexpected",
                "Do you know a riddle about mysterious things?",
                "Tell me a joke related to nature",
                "Tell me a riddle about space",
                "Make me a joke about technology",
                "Tell me a joke about things at home"
            ],
            "responses": [
                "Why was the math book sad? Because it had too many problems.",
                "What is the oldest animal? The zebra, because it is black and white.",
                "Why can't the turkey play football? Because he's always on the bench.",
                "What does one worm say to another worm? I'm going for a walk around the block!",
                "What does a bee do in the gym? Buzz!",
                "Why doesn't the elephant use a computer? Because he's afraid of the mouse.",
                "What is the worst thing for an electrician? Not finding his current work.",
                "Why don't birds use Facebook? Because they already have Twitter.",
                "What do you call a boomerang that doesn't come back? A stick.",
                "Why are history books so heavy? Because they are full of the past.",
                "What does one printer say to another? That page is mine.",
                "What do you call a dog without legs? No matter what you call it, it's not going to come.",
                "Why don't fish use Facebook? Because they're already on social media.",
                "Do you know what the funniest fruit is? The orange, because it always makes you smile.",
                "What does a dog do with a drill? Drilling.",
                "What do you call a mouse who becomes a rock star? Mick Ratson!",
                "Why don't cows use cell phones? Because they already have cow-ness.",
                "Do you know what a baker's worst nightmare is? Not having any dough.",
                "What do you call a dinosaur with a large vocabulary? A Thesaurus.",
                "What does an iguana say to its twin sister? We are little iguanas.",
                "Do you know what is the worst thing for a gardener? Not knowing where the root of the problem is.",
                "What is the most dangerous coffee? The ex-convict.",
                "Do you know which is the most intelligent animal? The dolphin, because it is always looking for answers.",
                "Guess, guess: I am light as a feather, but even the strongest man cannot hold me up for long. What am I?",
                "I have a riddle: The more you take away from it, the bigger it gets. What is it?",
                "I'm small, round, and I don't like being squashed. What am I?",
                "Guess: It's as tall as a house, but it's as light as a feather. What is it?",
                "I have needles but I don't know how to sew. What am I?",
                "I am invisible, but you can feel me. I have no form, but I am always present. What am I?",
                "Guess: What has a head but no body?",
                "Guess: I am the beginning of everything, but you will never see me. Who am I?",
                "Guess: It has teeth but never bites. What is it?",
                "I am small, white and slippery. What am I?",
                "Guess: It's yours, but other people use it more than you. What is it?",
                "Guess: It has leaves but it is not a tree. What is it?",
                "Why don't zombies eat vegetarian meat? Because they can't resist human flesh.",
                "Guess: He has keys but he can't open doors. What is it?",
                "What did one to ten say? To be like me, you have to be honest.",
                "Guess what the worst thing is for a mailman? Not having good letters.",
                "Guess who has the key to everything but never lets himself be seen?",
                "Guess: If I'm the king of the jungle, what am I?",
                "I am something that when you share it, you have it more. What am I?",
                "I am a box, but I don't keep things. What am I?",
                "Guess: It has many parts but it can't move. What is it?",
                "Guess: It can go everywhere, but it never moves. What is it?",
                "I am a key that does not open doors. What am I?",
                "I am something you can't see but it makes you feel. What am I?",
                "Guess: What has a face but no eyes?",
                "I am something that always changes shape but does not move. What am I?",
                "I have many teeth but I don't bite. What am I?",
                "Why do grapes never fight? Because they always come in bunches.",
                "What does a banana do at the gym? It gets you fit!",
                "Why did the computer go to the doctor? Because it had a virus.",
                "What did the cow say to the cricket? Moo-o-o!",
                "What's the worst thing for a snail? Being late to its own party.",
                "Guess: What goes up but never goes down? Your age.",
                "Why are brooms good friends? Because they always sweep away your problems.",
                "What does one screw say to another? Don't get on my nerves!",
                "Why doesn't the tomato laugh? Because it's in sauce.",
                "What does a scientist do on the beach? He experiments with waves!",
                "Why are clocks so punctual? Because they always have time.",
                "Guess: What is something that walks but has no legs? A shadow.",
                "What is a chair doing in public speaking? It's giving a lecture!",
                "Why don't trees wear hats? Because they have branches to protect themselves.",
                "What happens if you mix a scientist and a comedian? A hilarious experiment!",
                "Guess: I have eyes but I can't see, what am I? A needle.",
                "What is a crocodile doing reading a book? He's devouring the story!",
                "Why are athletes always happy? Because they're on a roll.",
                "Guess what you can catch but never throw? A cold.",
                "What does the grass say to the gardener? Mow it in style!",
                "Why are musicians good at guessing? Because they always get things right.",
                "Guess: It has legs but it doesn't run, what is it? A table.",
                "Why don't the stars tell secrets? Because they always shine.",
                "What does ice cream do at a party? It melts with excitement!",
                "Guess: What has teeth but doesn't eat? A comb.",
                "What makes a happy phone? Good coverage.",
                "Why don't computers dream? Because they only process data.",
                "What does an orange do when it's hot? It squeezes!",
                "Why are bees always busy? Because they work with honey.",
                "Guess: What has one eye but can't see? A needle.",
                "Why is the geometry book always happy? Because it has many positive angles!",
                "What did one dog say to another? Wow, what a day!",
                "Why are numbers always cold? Because they are on a straight line.",
                "What did one volcano say to another? I love you, lava time!",
                "Why did the bread go to the doctor? Because it felt crumbly.",
                "Guess: It has wings but it doesn't fly, what is it? A fan.",
                "What does a bird do when it is scared? It calls for help from the net!",
                "Why are astronauts bad at telling jokes? Because they always need space.",
                "What is a fish doing in the library? Nothing.",
                "Why can't bikes stand up? Because they're tired!",
                "What did the computer say to the keyboard? Don't push me so hard!",
                "What has feathers and writes? A bird pen!",
                "Why did the melon marry the watermelon? Because they made a great couple!",
                "Guess: I have leaves but I'm not a tree, what am I? A book.",
                "Why do students love traffic lights? Because they tell them when to stop.",
                "What does a chicken do with a camera? It takes extraordinary photos of eggs!",
                "Why are clocks so wise? Because they always have a good time.",
                "What did the pencil say to the paper? I am at your service!",
                "Guess: I am something that never stays still and is always changing, what am I? Time.",
                "Why don't zebras wear pajamas? Because they already have stripes.",
                "What's a tomato doing in a race? Ketchup!",
                "Why did the scientist cross the road? To find another hypothesis!",
                "What does the oven say to the cake? You're on point!",
                "Why do elephants never forget? Because they have an elephantine memory.",
                "Guess: It's round and sometimes flat, but it always lights up the sky. What is it? The moon.",
                "What does a crocodile do with a car? He turns it into a convertible!",
                "Why don't sheep send emails? They prefer woolly messages!",
                "What does a cloud do at a party? It brings lightning and thunder of excitement!",
                "Why do penguins never get lost? Because they are always in the polar cold!",
                "What is a carrot doing at a concert? Musical roots!"
            ]
        },
        {
            "tag": "consultation_citas_inspiradoras",
            "patterns": [
                "Give me an inspirational quote",
                "Do you have any motivational quotes?",
                "Tell me a quote that inspires me",
                "I want to read a phrase that motivates me",
                "Do you have any self-improvement quotes?",
                "Give me a phrase that makes me think",
                "I want a positive date",
                "Tell me something that gives me hope",
                "Do you know any quotes about success?",
                "Can you give me a quote that inspires me to keep going?",
                "Tell me a quote about life",
                "Do you have any phrases that help me become stronger?",
                "Give me a quote that makes me feel better",
                "Do you have a quote about perseverance?",
                "Tell me a quote that motivates me to improve",
                "I want a phrase of encouragement",
                "Give me a quote that will motivate me not to give up",
                "Can you give me a quote on the effort?",
                "I want to hear a quote about hard work",
                "Do you know any quotes that talk about courage?",
                "Tell me a quote about courage",
                "Do you have any quotes about change?",
                "Give me a quote from someone famous",
                "Can you tell me a quote about hope?",
                "I want to read a quote about the future",
                "Do you have any quotes about trust?",
                "Give me a quote about resilience",
                "Can you give me a quote about daily motivation?",
                "I want a phrase about life and love",
                "Tell me a quote about strength",
                "Give me a quote that will help me move forward",
                "Do you have any quotes that inspire peace?",
                "I want a quote about optimism",
                "Do you know any quotes about personal success?",
                "Give me a quote that makes me think",
                "Can you give me a quote that inspires me to be better?",
                "I want to hear a quote about overcoming",
                "Tell me a quote that gives me energy",
                "Do you have a quote about personal growth?",
                "Give me a quote about learning from mistakes",
                "I want a quote about achieving goals",
                "Do you know any quotes about patience?",
                "Give me a quote that will help me find inner peace",
                "Tell me a quote about happiness",
                "Give me a phrase that makes me feel inspired",
                "Do you have a quote that talks about the value of continuing to fight?"
            ],
            "responses": [
                "Life is not measured by the number of breaths we take, but by the moments that take our breath away. – George Carlin",
                "Don't give up, every failure is a lesson to achieve success. – Albert Einstein",
                "The only thing that is impossible is what you don’t try. – Jeanette Coron",
                "Happiness is not something ready-made. It comes from your own actions. – Dalai Lama",
                "The future belongs to those who believe in the beauty of their dreams. – Eleanor Roosevelt",
                "What doesn't kill you makes you stronger. – Friedrich Nietzsche",
                "Do today what others do not want to do, do tomorrow what others cannot do. – Jerry Rice",
                "The only way to do great work is to love what you do. – Steve Jobs",
                "Success is the sum of small efforts repeated day after day. – Robert Collier",
                "It doesn't matter how many times you fall, it's how many times you get up that matters. – Nelson Mandela",
                "Life begins where your comfort zone ends. – Neale Donald Walsch",
                "The only place where success comes before work is in the dictionary. – Vidal Sassoon",
                "Be the change you wish to see in the world. – Mahatma Gandhi",
                "If you can dream it, you can do it. – Walt Disney",
                "The best way to predict the future is to create it. – Abraham Lincoln",
                "There is no path to happiness, happiness is the path. – Buddha",
                "Perseverance is the key to success. – Charlie Chaplin",
                "When one door closes, another opens. – Alexander Graham Bell",
                "Everything you can imagine is real. – Pablo Picasso",
                "Life is not about waiting for the storm to pass, it is about learning to dance in the rain. – Anonymous",
                "The only way to do great work is to love what you do. – Steve Jobs",
                "The difference between what we are and what we want to be is what we do. – Anonymous",
                "Success is not the key to happiness. Happiness is the key to success. – Albert Schweitzer",
                "Pain is temporary, glory is forever. – Lance Armstrong",
                "Life is like riding a bicycle. To keep your balance, you must keep moving forward. – Albert Einstein",
                "Our greatest fear is not that we are inadequate, our greatest fear is that we are powerful beyond measure. – Marianne Williamson",
                "The man who moves mountains begins by carrying small stones. – Confucius",
                "It is during our darkest moments that we must focus to see the light. – Aristotle",
                "The key to success is starting before you are ready. – Marie Forleo",
                "Everything you need is within you. – Anonymous",
                "The best way to predict your future is to create it. – Abraham Lincoln",
                "Life is 10% what happens to us and 90% how we react to it. – Charles R. Swindoll",
                "The biggest mistake you can make is to be afraid of making mistakes. – Elbert Hubbard",
                "Only those who dare to fail greatly will succeed greatly. – Robert F. Kennedy",
                "Success is the ability to go from failure to failure without losing enthusiasm. – Winston Churchill",
                "The only limit to our achievement tomorrow is our doubts and hesitations today. – Franklin D. Roosevelt",
                "Do what you can, with what you have, where you are. – Theodore Roosevelt",
                "Fear is the enemy of action. – Anonymous",
                "Life is short, don’t waste your time living someone else’s life. – Steve Jobs",
                "If it doesn't challenge you, it doesn't change you. – Anonymous",
                "Remember that not getting what you want is sometimes a wonderful stroke of luck. – Dalai Lama",
                "Peace begins with a smile. – Mother Teresa",
                "Your life doesn’t get better by chance, it gets better by change. – Jim Rohn",
                "Every day is a new opportunity to change your life. – Anonymous",
                "The key to achieving your dreams is believing in yourself. – Anonymous",
                "Believe in yourself and everything will be possible. – Anonymous",
                "When you stop chasing the wrong things, you make room for the right things. – Anonymous",
                "Don’t watch the clock; do what it does, keep going. – Sam Levenson",
                "Strength does not come from bodily capacity, but from the will of the soul. – Mahatma Gandhi",
                "Make your life a dream, and your dream a reality. – Antoine de Saint-Exupéry"
            ]
        },
        {
            "tag": "consultation_recomendaciones",
            "patterns": [
                "Do you have any book recommendations?",
                "Recommend me a movie",
                "Can you suggest a book for me to read?",
                "Give me a series recommendation",
                "Recommend me a movie to watch tonight",
                "Do you have any books that might interest me?",
                "What book do you recommend?",
                "What is a good movie to watch?",
                "Suggest me an interesting series",
                "Which book should I read?",
                "Recommend me an action movie",
                "Do you have any movies I might like?",
                "Can you recommend something for me to read?",
                "Give me a science fiction movie recommendation",
                "What movie do you suggest me?",
                "Suggest me a mystery novel",
                "Recommend me a comedy series",
                "What book is ideal for a quiet afternoon?",
                "Can you recommend me a horror movie?",
                "Do you have any historical fiction recommendations?",
                "Recommend me a good non-fiction book",
                "What is a good movie to marathon?",
                "Give me a self-help book recommendation",
                "Do you have any recommendations for Netflix viewing?",
                "Recommend me a drama movie",
                "What book should I read if I like suspense?",
                "Suggest me a fantasy series",
                "Can you recommend something for me to read this week?",
                "Do you have any recommendations for a relaxing weekend?",
                "Recommend me a movie based on real events",
                "What is a good adventure book?",
                "Do you have any classic book recommendations?",
                "Recommend me an animated movie",
                "Which book will help me improve my skills?",
                "Recommend me a mystery movie",
                "What series is currently in fashion?",
                "Recommend me a movie for a rainy day",
                "Do you have any comedy recommendations?",
                "Recommend me a book for someone who loves science fiction",
                "Suggest me an inspiring movie",
                "What book on personal growth would you recommend?",
                "Recommend me a series to marathon",
                "What movie should I watch if I like action?",
                "Give me a recommendation for a fantasy adventure book",
                "Do you have any biography recommendations?",
                "Recommend me a movie to watch with friends",
                "What fantasy book would you recommend me?"
            ],
            "responses": [
                "If you like mystery books, I recommend 'The Girl on the Train' by Paula Hawkins.",
                "For a good action movie, I suggest 'Mad Max: Fury Road'.",
                "If you're looking for some sci-fi, Frank Herbert's 'Dune' is a classic you can't miss.",
                "A great non-fiction book recommendation is 'Sapiens: From Animals to Gods' by Yuval Noah Harari.",
                "If you like comedies, I suggest the movie 'The Hangover'.",
                "If you're interested in fantasy, Patrick Rothfuss's 'The Name of the Wind' is an excellent choice.",
                "For an intriguing thriller, David Lagercrantz's 'The Girl in the Spider's Web' is a must-read.",
                "If you like psychological horror, I recommend the movie 'Hereditary'.",
                "For a thriller series, 'Breaking Bad' is one of the best of all time.",
                "If you like historical novels, 'The Physician' by Noah Gordon is a great option.",
                "An excellent movie for a marathon is 'The Lord of the Rings'.",
                "I recommend 'The Power of Now' by Eckhart Tolle, a self-help book about living in the present.",
                "If you like superhero movies, 'Avengers: Endgame' is a must-see.",
                "For an emotional film, 'The Theory of Everything' about the life of Stephen Hawking is an excellent choice.",
                "If you like science fiction, Ray Bradbury's 'Fahrenheit 451' is an excellent novel.",
                "For an inspirational book on success, 'Think and Grow Rich' by Napoleon Hill is a great choice.",
                "If you like animated films, Disney's 'Coco' is charming and emotional.",
                "If you are interested in personal growth, I suggest 'The 7 Habits of Highly Effective People' by Stephen Covey.",
                "If you're looking for a movie to binge-watch, 'Inception' is a great choice.",
                "A good comedy series is 'The Office'. It will make you laugh a lot.",
                "If you like suspense, 'The Truth About the Harry Quebert Affair' by Joël Dicker is a great choice.",
                "If you are interested in a book on philosophy, I recommend 'Meditations' by Marcus Aurelius.",
                "If you like drama movies, 'The Shawshank Redemption' is one of the best of all time.",
                "A recommendation for fans of classic literature is 'Pride and Prejudice' by Jane Austen.",
                "If you like adventure books, J.R.R. Tolkien's 'The Hobbit' is perfect.",
                "For a sci-fi series, 'Stranger Things' has a lot of action and mystery.",
                "If you are looking for something inspiring, 'The Pursuit of Happyness' is a movie that will motivate you.",
                "For a book on leadership, 'Leadership' by John C. Maxwell is an excellent choice.",
                "If you're looking for a romantic movie, 'The Notebook' is a classic.",
                "A great recommendation for someone who loves science fiction is 'Neuromancer' by William Gibson.",
                "If you like historical films based on real events, '12 Years a Slave' is an excellent choice.",
                "If you want to read a biography, 'Steve Jobs' by Walter Isaacson is very inspiring.",
                "For a fantasy series, 'Game of Thrones' is epic.",
                "If you like action movies, I recommend 'John Wick' with Keanu Reeves.",
                "If you are interested in self-help books, 'Secrets of the Millionaire Mind' by T. Harv Eker is very popular.",
                "If you're looking for a psychological horror movie, 'The Witch' is perfect.",
                "I suggest 'The Name of the Wind' by Patrick Rothfuss if you like epic fantasy novels.",
                "An excellent book recommendation is 'One Hundred Years of Solitude' by Gabriel García Márquez, a classic of literature.",
                "If you like suspense and drama movies, 'Gone Girl' is a great choice.",
                "For an interesting series, 'Black Mirror' has episodes that will make you think about technology.",
                "If you're looking for a romantic movie recommendation, 'La La Land' is a charming musical.",
                "For some adventure, I recommend 'The Lord of the Rings trilogy'."
            ]
        },
        {
            "tag": "consultation_soluciones_problemas",
            "patterns": [
                "I'm having problems with my computer, how can I fix it?",
                "My phone is not working properly, what should I do?",
                "How can I fix an Internet connection error?",
                "My screen is blurry, how do I fix this?",
                "I'm having problems with my computer's audio, what can I do?",
                "How can I fix a battery problem on my phone?",
                "I can't access my account, how can I recover it?",
                "My app won't open, what should I do?",
                "My Wi-Fi is slow, how can I improve it?",
                "How do I troubleshoot my printer?",
                "My computer is very slow, what can I do?",
                "How do I fix a corrupted file?",
                "I'm having issues with the software update, how do I resolve this?",
                "I can't send emails, what should I do?",
                "My device does not recognize the USB, how do I fix this?",
                "What to do if my smartphone freezes?",
                "How can I improve my computer's performance?",
                "I can't connect to a Wi-Fi network, how do I fix this?",
                "My computer is frozen, what should I do?",
                "How do I fix a sync issue on my phone?",
                "My computer turns off by itself, what could it be?",
                "How do I fix a screen problem on my phone?",
                "What do I do if my app closes unexpectedly?",
                "My device is overheating, how do I fix it?",
                "I'm having problems installing a program, what should I do?",
                "How can I free up space on my computer?",
                "My webcam is not working, how do I fix it?",
                "I can't access the Internet, what steps should I take?",
                "My phone won't charge, what can I do?",
                "How do I fix battery problems on my laptop?",
                "I can't find a file, what do I do?",
                "My software is crashing, how do I fix it?",
                "I have an error in my operating system, what should I do?",
                "How to fix Bluetooth connection issues?",
                "My app keeps crashing, how do I fix it?",
                "I can't print, how do I fix this?",
                "My phone suddenly turns off, what should I do?",
                "How can I improve my Internet connection speed?",
                "My PC has viruses, how can I remove them?",
                "What to do if my computer won't turn on?",
                "I'm having trouble with my phone's camera, how do I fix it?",
                "How can I restore my device to its factory settings?",
                "My device is not responding, what do I do?",
                "My touch screen is not responding, how do I fix it?",
                "How do I fix a compatibility issue with my software?",
                "I'm having trouble with cloud storage, how do I fix it?",
                "My device is not recognizing the SD card, what should I do?",
                "My app was updated and now it's not working, how do I fix this?",
                "I'm having trouble syncing my contacts, what can I do?",
                "My device is slower after the update, what do I do?"
            ],
            "responses": [
                "If your computer is slow, you can try closing programs you are not using, deleting temporary files, and running an antivirus scan.",
                "If your phone is not working properly, try restarting it, updating the operating system or resetting it to factory settings.",
                "To resolve Internet connection issues, try restarting your router, checking cable connections, and making sure your device is properly connected.",
                "If your device's screen is blurry, make sure the resolution is set correctly or try restarting your device.",
                "For audio issues on your computer, check that the volume is not muted, make sure your audio drivers are up to date, and try using headphones.",
                "If your phone is experiencing battery issues, try closing background apps, reducing screen brightness, and checking if any apps are consuming too much power.",
                "If you are unable to access your account, try resetting your password or checking to see if you have access to the email address associated with your account.",
                "If an app won't open, try restarting your device or uninstalling and reinstalling the app.",
                "To improve Wi-Fi speed, try moving your router to a more central location, changing the Wi-Fi channel, or using a signal booster.",
                "If your printer is not working, make sure it is properly connected, there are no paper jams, and the drivers are up to date.",
                "To fix performance issues on your computer, delete unnecessary files, disable startup programs, and perform a virus scan.",
                "If you have a corrupted file, try opening it in another program or using a file repair tool.",
                "If you are having trouble with a software update, make sure you have enough disk space and that your device is connected to the Internet.",
                "If you are unable to send emails, please check your Internet connection, see if the email server is up and running, and make sure your account settings are correct.",
                "If your device does not recognize the USB, try another USB port or another cable, and make sure the device is set up correctly.",
                "If your smartphone freezes, try restarting it by holding down the power button or performing a hard restart.",
                "To improve your computer's performance, delete temporary files, disable unnecessary programs, and make sure you have enough storage space.",
                "If you are unable to connect to a Wi-Fi network, check that the network is available, that the password is correct, and that there are no issues with your router.",
                "If your computer freezes, try closing non-essential applications or restarting the system in safe mode.",
                "To resolve sync issues on your phone, make sure sync is enabled and you have a stable internet connection.",
                "If your computer shuts down by itself, check to see if it is overheating, make sure the power supply is working properly, and that there are no problems with the operating system.",
                "If your phone has a display issue, try restarting it, adjusting the display settings, or contacting a service center.",
                "If your app closes unexpectedly, try updating or reinstalling it. If the problem persists, check for operating system updates.",
                "If your device is overheating, make sure the fan is working properly, avoid using it on soft surfaces, and close resource-intensive applications.",
                "If you have problems installing a program, make sure that your system meets the program's requirements and that you have the necessary permissions to install it.",
                "To free up space on your computer, delete temporary files, uninstall programs you don't use, and use system cleaning tools.",
                "If your webcam is not working, make sure it is properly connected, the drivers are up to date, and it is not being used by another application.",
                "If you are unable to access the Internet, check for issues with your router or service provider, and make sure your device is connected properly.",
                "If your phone won't charge, try another cable or charger, make sure the charging port is clean and the battery is in good condition.",
                "If your laptop is having battery issues, check the power saving settings, update drivers, and see if the battery needs to be replaced.",
                "If you can't find a file, try searching for it in different locations, checking the Recycle Bin, or using file recovery software.",
                "If your software is crashing, make sure it is up to date and does not conflict with other programs. Consider reinstalling it if the problem persists.",
                "If you have an error on your operating system, search for solutions online, reboot into safe mode, or try restoring your system to a previous point.",
                "For Bluetooth connection issues, make sure the device is in pairing mode, Bluetooth is enabled, and there is no interference.",
                "If your app is constantly crashing, try uninstalling and reinstalling it or checking for available updates.",
                "If you are unable to print, make sure your printer is properly connected, has paper and ink, and the drivers are up to date.",
                "If your phone suddenly turns off, check if the battery is dead, if there are problems with the operating system, or if the device needs an update.",
                "To improve your Internet connection speed, make sure your router is up to date, reduce the number of connected devices, and use an Ethernet cable if possible.",
                "If your PC has viruses, use reliable antivirus software to scan and remove the viruses. Make sure to keep your operating system up to date.",
                "If your computer does not turn on, check that it is properly connected to the power source and that the power button is working. If the problem persists, check the power supply.",
                "If you're having issues with your phone's camera, check to make sure no apps are using the camera and that your drivers are up to date.",
                "To restore your device to its factory settings, go to system settings and select the restore or factory reset option.",
                "If your device is unresponsive, try restarting it or performing a hard reset by holding down the power and volume buttons.",
                "If your touchscreen is unresponsive, clean the screen, make sure there are no resource-intensive apps, and restart your device.",
                "To resolve software compatibility issues, make sure the program is compatible with your operating system and consider upgrading or switching to a newer version.",
                "If you're having trouble with cloud storage, make sure your internet connection is stable and check if there's enough space in your storage account.",
                "If your device is not recognizing the SD card, make sure it is inserted correctly, check if there is a problem with the card, or try another device.",
                "If your app has been updated and is now not working, try restarting your device or uninstalling and reinstalling the app.",
                "If you're having trouble syncing your contacts, make sure sync is turned on and you have a stable internet connection."
            ]
        },
        {
            "tag": "consultation_empatías",
            "patterns": [
                "I'm going through a bad time, can you help me?",
                "I feel sad, what can I do?",
                "Today is not a good day for me.",
                "I'm very tired, I need some support.",
                "I feel a little lost, do you have any advice?",
                "I'm worried about something, can you hear me?",
                "I don't know how to get out of this situation, I feel trapped.",
                "I feel lonely, can you tell me something to cheer me up?",
                "I'm scared to face what's coming, can you encourage me?",
                "I feel like I can't take it anymore, what do I do?",
                "Any tips for dealing with stress?",
                "Today everything seems to be going wrong, can you tell me something positive?",
                "I feel emotionally exhausted, what can I do?",
                "I feel out of place, can you help me feel better?",
                "Everything is affecting me a lot, how do I handle it?",
                "I'm very confused, what do you think about this?",
                "I don't know how to move forward, any advice?",
                "I feel like I have no strength to continue, can you help me?",
                "I'm feeling very discouraged today, can you support me?",
                "I feel overwhelmed by everything that is happening.",
                "How can I deal with anxiety?",
                "I'm afraid everything will go wrong, can you give me some hope?",
                "I feel defeated, can you give me some words of encouragement?",
                "Today I can't stop thinking about what worries me.",
                "How can I get my motivation back?",
                "I feel like everything is out of control, what do I do?",
                "I'm very stressed, any tips to calm down?",
                "I feel very sad, what can I do to feel better?",
                "I'm struggling with my thoughts, can you help me?",
                "I feel lost and don't know where to start.",
                "I'm going through a difficult time, how can I move forward?",
                "I feel like I'm not enough, can you tell me something positive?",
                "I feel lonely, do you have anything that can comfort me?",
                "I don't know how to deal with what's happening, what do I do?",
                "I feel very insecure, how can I increase my confidence?",
                "I'm going through a crisis, can you give me some advice?",
                "I'm very scared, what can I do to calm down?",
                "I feel really bad, can you help me feel better?",
                "I feel unable to continue, can you give me support?",
                "I'm feeling a lot of pressure, what can I do to relieve it?",
                "I'm facing a difficult situation, can you help me?",
                "I feel overwhelmed by emotions, how do I manage this?",
                "How can I stop feeling so anxious?",
                "I'm feeling frustrated, do you have any advice?",
                "I'm going through a tough time, can you hear me?",
                "I feel disconnected from everything, how do I fix this?",
                "I don't know how to move on, can you help me find strength?"
            ],
            "responses": [
                "I'm so sorry you're going through a difficult time, I'm here to help you with whatever you need.",
                "It's completely normal to feel this way sometimes. Take your time and find something to do that calms you down.",
                "I understand you, sometimes everything seems too overwhelming. Remember that you are not alone, there are people who support you.",
                "I'm here to listen to you, if you want to talk more about what's bothering you, you can count on me.",
                "It's hard to find strength when everything seems to be going wrong, but the most important thing is not to give up. There is always a light at the end of the tunnel.",
                "I understand that you feel that way. Sometimes sharing your thoughts with someone can make you feel a little better.",
                "It's not easy to go through difficult times, but I want you to know that I understand you and that this bad moment will also pass.",
                "I feel sad to hear that you feel alone. Remember that your emotions are valid, and it's okay to ask for help when you need it.",
                "It's understandable to feel scared. Don't worry, everything will be okay. You can do it, step by step.",
                "I'm so sorry you're going through this, but remember that you have the strength within you to overcome any obstacle.",
                "Sometimes when everything seems so difficult, the most important thing is to breathe and take small steps towards the solution.",
                "Anxiety is a difficult thing to deal with, but try to pause, take a deep breath and think about the present moment. Everything passes.",
                "Remember that difficulties are temporary. What you are going through does not define your worth. You are stronger than you think.",
                "When you feel exhausted, try to rest and give your mind some space. Sometimes, a little rest is all we need.",
                "It's normal to feel out of place at times. We all have those moments, and it's part of learning and growing. You're doing the best you can.",
                "It's totally understandable to feel overwhelmed by your circumstances. Don't forget that it's okay to ask for help, you don't have to face it all alone.",
                "If you feel confused, take a moment to reflect. Sometimes taking a step back helps you see things more clearly.",
                "It's completely valid to feel like you can't move forward. Don't rush, take your time and look for small goals that you can achieve.",
                "In difficult times, it's important to remember that there is always support available, whether from a loved one or someone you can turn to.",
                "I feel you, we all go through moments where we feel overwhelmed. The important thing is to know that you are not alone in this journey.",
                "It's okay to feel down from time to time. Be kind to yourself and give yourself time to recover. Things will get better.",
                "When worries are overwhelming us, it is important to find something that calms us. Whether it is taking a walk or talking to someone close, it is a good step.",
                "Sometimes words of encouragement can make a big difference. Remember that every day is a new opportunity to start over.",
                "It's normal to have difficult days, and it's okay not to have all the answers. The important thing is to take it one step at a time.",
                "Remember that stress does not define who you are. Take a moment to relax and recharge your batteries.",
                "If you're feeling sad, it's important to validate your emotions. Allow yourself to feel whatever you need to and don't put pressure on yourself to get better immediately.",
                "Dealing with anxiety isn't easy, but often small moments of calm, like breathing or relaxing, can make a big difference.",
                "It's completely valid to feel insecure. We all go through it, and over time you'll learn to trust yourself more.",
                "In times of crisis, sometimes it's best to talk to someone you trust. It will help you feel lighter and understood.",
                "Fear can be paralyzing, but remember that it is just an emotion, not a sentence. You have the ability to deal with it.",
                "I'm so sorry you're feeling down. Sometimes it helps to talk about what you're feeling, and I'm here to listen.",
                "In difficult times, it is always good to remember that you have the power to overcome any obstacle. Take it one day at a time.",
                "Pressure can be very difficult to handle, but remember that it's okay to ask for a break. Self-care is a priority.",
                "If you're feeling overwhelmed, it can be helpful to take small steps to get organized. You don't have to do everything at once.",
                "Dealing with your emotions in a healthy way is key. Try talking to someone or doing an activity that calms you down.",
                "When anxiety takes over, try to focus on the present and remember that everything will pass. It's okay to ask for help.",
                "It's normal to feel frustrated when things don't go the way you expected. Remember that everything has a solution, and there is always a way forward.",
                "Talking about what you're feeling is a big step. If you need more time to process it, that's okay. You don't have to rush it.",
                "We all have tough days. The most important thing is to remind yourself that it's okay to not feel okay all the time.",
                "If you're feeling disconnected, sometimes sharing your thoughts with someone can be a good first step toward regaining your sense of connection.",
                "When you don't know what to do, the best option is to seek help or talk to someone. Sometimes, a little support can change your perspective."
            ]
        },
        {
            "tag": "feedback",
            "patterns": [
                "What do you think about what I did?",
                "Can you give me your feedback on my work?",
                "What do you think about my idea?",
                "Do you think what I'm doing is okay?",
                "Do you have any suggestions for improvement?",
                "How do you think I can improve on this?",
                "How did I do?",
                "Did you like what I did?",
                "How can I do better?",
                "Do you think I can improve on this?",
                "Do you think I'm going in the right direction?",
                "What do you think about this project?",
                "Do you have any constructive criticism?",
                "What do you think about this approach?",
                "Do you think this is the best I can do?",
                "Can you give me your point of view on this?",
                "Is there anything that could be improved?",
                "What would you improve in my proposal?",
                "Do you think this can work?",
                "What is your impression of what I did?",
                "Can you give me your feedback on my performance?",
                "What do you think of the results so far?",
                "What would you change about what I'm doing?",
                "Do you think this is appropriate?",
                "Would you like to see something different in my work?",
                "What do you think of my idea?",
                "How can I improve the quality of my work?",
                "What positive points do you see in what I did?",
                "What can I do to make my work more effective?",
                "What do you think about the changes I proposed?",
                "Is there anything you would like to see changed?",
                "Are you satisfied with the work I have done?",
                "How can I continue to improve?",
                "What should I do to improve my performance?",
                "What do you think about the results of my project?",
                "Can I improve in some aspect of what I am doing?",
                "What do you think of my approach to work?",
                "Is there anything you could do differently?",
                "Do you think I'm achieving my goals?",
                "How can I improve my skills?",
                "What is your opinion on the direction I'm going?",
                "What do you think about my proposed changes?",
                "Are you happy with what I've achieved so far?",
                "What do you think about my attitude towards work?",
                "Do you think I have areas to improve?",
                "Do you have any advice to improve what I do?",
                "What do you think of my progress so far?"
            ],
            "responses": [
                "Thank you for asking my opinion. I think you are on the right track, but you could try to improve in some details.",
                "I like what you've done, but I think you could tweak a few aspects to make it even better. Have you considered doing this?",
                "I think you're doing a great job, but maybe you could focus a little more on [specific detail] to improve further.",
                "Your idea has potential. However, I think you could improve in [specific aspect].",
                "It's well done, but don't forget to [suggestion]. I think that can make all the difference.",
                "Your work is solid, but perhaps you could optimize [specific process or part].",
                "You did very well, but there is one small area where you could improve. Try focusing on [suggestion].",
                "I like the approach, but I think you could spend more time on [specific detail]. That could make your work even better.",
                "Good job, I just think you could improve on the way you [suggestion]. This can take it to the next level.",
                "It seems to me that you are making good progress. Just maybe [suggestion] could improve the result even further.",
                "It's a good job. However, I think you could consider [suggestion] to make it more impactful.",
                "You've made a great effort, but with a little tweaking in [aspect] you can take it to the next level.",
                "I appreciate what you've done so far. However, I think you could improve the quality of [specific details].",
                "I think you have a good foundation. If you focus more on [process/area], you could achieve even better results.",
                "That's a good start, but maybe you could put more emphasis on [detail]. That would greatly improve the final result.",
                "Overall, you're on the right track, just remember [hint]. You're very close to achieving it.",
                "Your approach is interesting. If you tweak [specific detail], you could make it even more effective.",
                "I'm impressed with what you've accomplished so far. Perhaps you could improve on [aspect] to make it even better.",
                "I like the way you're approaching this. But maybe a little tweaking of [suggestion] could make a big difference.",
                "Your work is very solid, I just think you could improve the way you [suggestion]. That will make everything fit together better.",
                "I commend you for the effort. You just need to pay more attention to [detail] to achieve a more polished result.",
                "You're doing well, but sometimes the key is to fine-tune [element]. It can make all the difference in the final impact.",
                "Your project has a lot of potential. If you focus more on [suggestion], I think it can improve a lot.",
                "There are good elements in your work, but I think you could improve the organization in [area].",
                "I like what you've done, I would just recommend giving a little more focus to [detail]. This will help you get better results.",
                "I think you're doing a good job, but you could try [suggestion] to improve the impact of your project.",
                "What you've done so far is impressive. If you improve on [suggestion], I think it will be even better.",
                "Your performance is excellent, I just think you could improve [process/area].",
                "I think you've done a great job. One recommendation would be [suggestion] to make it even more effective.",
                "You're making progress, but it might be helpful to focus a little more on [aspect]. This could really improve the final results.",
                "You're on the right track, but I think [detail] could help you improve the project even further.",
                "Your work is pretty good, but I think you could improve in [area]. I'd like to see more emphasis on that.",
                "You're doing a great job, but with a little more attention to [suggestion], I think everything will be perfect.",
                "Your approach is good, I just wish you would focus a little more on [detail]. That would be very helpful.",
                "What you've done is excellent. However, I think you could add more of [specific element] to make it look even better.",
                "Good job, but make sure you don't overlook [specific detail]. I think that's what could improve the result.",
                "It's well done, but if you tweak [specific area] a little, you could achieve even more outstanding results.",
                "I think you're almost there. If you improve [appearance], the project will be even better.",
                "Your work has a great foundation. To improve it further, you might consider doing [suggestion].",
                "You've done a great job, I just think you could polish [process/area] a little more.",
                "You're on the right track, but it would be helpful if you focused a little more on [suggestion]. That could be the key to achieving better results.",
                "I congratulate you on what you have achieved so far. Perhaps you can put more emphasis on [aspect] to achieve an even greater impact.",
                "I think you have a lot of potential. If you improve [aspect], your project could be even more impactful.",
                "It's a good job, just make sure that [specific detail] is completely clear so that the end result is even more effective.",
                "What you have done is impressive. My suggestion would be to focus more on [suggestion] to improve even further."
            ]
        },
        {
            "tag": "consultation_ayudaen_programación",
            "patterns": [
                "How can I fix a bug in my code?",
                "I don't know how to start my programming project.",
                "How can I optimize this algorithm?",
                "I'm having trouble understanding how variables work.",
                "How can I declare a function in Python?",
                "What does this error in my code mean?",
                "Why is my code not working?",
                "How can I debug my code?",
                "How can I avoid syntax errors?",
                "How do I make my app more efficient?",
                "What do I do if I get a type error in my code?",
                "How can I read a file in Python?",
                "How are data structures like lists and dictionaries used?",
                "What is a pointer in C?",
                "How do you make a for loop in JavaScript?",
                "I have a problem with my database, can you help me?",
                "I don't understand the concept of inheritance in object-oriented programming.",
                "What is a global variable and how is it used?",
                "How can I connect my application to an API?",
                "How do I handle exceptions in Python?",
                "I'm learning Java, how can I make a class?",
                "How can I pass parameters to a function in C++?",
                "I have a syntax error, can you help me find it?",
                "How can I improve the performance of my code?",
                "I'm learning SQL, how can I make a query?",
                "How can I make my code more readable?",
                "How do I implement a binary search algorithm?",
                "How do I compile and run a C program?",
                "How can I fix an infinite loop?",
                "What is recursion and how can I use it?",
                "How can I use classes in Java?",
                "How do I handle errors in a Node.js application?",
                "What is a component lifecycle in React?",
                "I'm learning about threads in programming, what is a thread?",
                "How can I keep track of variables in my code?",
                "How do I implement a binary tree in Python?",
                "How do I fix a concurrency issue in my application?",
                "What is an IDE and how does it help me program?",
                "How can I install a package in Python?",
                "What are design patterns in programming?",
                "How do I use version control with Git?",
                "I'm having trouble with string manipulation in Java, can you help me?",
                "How can I optimize a SQL query?",
                "How can I create a graphical interface in Java?",
                "What is a RESTful API and how do I use it?",
                "I'm confused about the differences between classes and objects, can you explain?",
                "How can I improve security in my application?",
                "What does the 'this' keyword mean in JavaScript?",
                "How do I handle HTTP requests in Python?",
                "How can I write a script in Bash?",
                "How do I set up a Python development environment?",
                "What is a compiler and how does it work?",
                "What is a Docker container and what is it used for?",
                "I'm working with Angular, how can I create a component?",
                "How do I implement authentication in a web application?"
            ],
            "responses": [
                "To fix an error in your code, first check the error message that appears, as it will often tell you the cause. If you can't find the solution, try searching the documentation or forums like StackOverflow.",
                "The first thing I would recommend is to break down the project into small, manageable tasks. Then, work on each of them separately before putting them together.",
                "To optimize your algorithm, try to reduce its complexity. You can do this by finding a solution that doesn't require as many operations. Using efficient data structures can also help.",
                "Variables are storage spaces used to store data. Make sure you assign an initial value to your variables before using them in your code.",
                "In Python, you can declare a function using the keyword `def`, followed by the function name and any parameters in parentheses. For example: `def my_function():`.",
                "The error could be related to bad syntax or incorrect use of a function. Please review the error messages carefully and make sure that the syntax is correct.",
                "Step through your code to find the line that is causing the problem. Use debugging tools or print variable values ​​to trace the flow of the program.",
                "To debug your code, you can use tools like your IDE's built-in debugger or add print statements to see the value of variables at different points in your code.",
                "To avoid syntax errors, make sure that all parentheses, braces, and brackets are balanced, and that each line ends properly (for example, with a semicolon in C/C++).",
                "To improve the efficiency of your application, consider using faster algorithms, avoiding unnecessary operations, and using more appropriate data structures.",
                "A type error can occur when you try to operate on data of incompatible types. Check the types of the variables involved in the operation and perform conversions if necessary.",
                "To read a file in Python, you can use the `open()` function followed by the `read()` method. Example: `with open('file.txt', 'r') as f: contents = f.read()`.",
                "Lists and dictionaries are very useful data structures. Lists are used to store ordered elements and the keys in a dictionary are used to access the corresponding values.",
                "In C, a pointer is a variable that stores the memory address of another value. It is used to work with memory addresses and manipulate values ​​indirectly.",
                "In JavaScript, a `for` loop has the following structure: `for (let i = 0; i < n; i++) { /* code to execute */ }`.",
                "If you are having problems with your database, make sure that your connections are correct, your queries are valid, and the database structure is as expected.",
                "Inheritance is a concept in object-oriented programming where one class can inherit properties and methods from another. It helps you reuse code and create relationships between classes.",
                "A global variable is one that is defined outside of any function and is available throughout the program. Make sure you do not modify global variables unexpectedly.",
                "To connect your application to an API, first make sure the API has a suitable endpoint. Then, use methods like `fetch` in JavaScript or `requests` in Python to make HTTP requests.",
                "In Python, you can handle exceptions using `try...except` blocks. Example: `try: /* code that may fail */ except Exception as e: /* handle the error */`.",
                "In Java, a class is defined with the keyword `class`, followed by the class name and a code block. Example: `class MyClass { /* code */ }`.",
                "In C++, parameters are passed to functions either as values ​​or by reference. To pass them by reference, use the `&` operator in the function declaration.",
                "To find a syntax error, carefully review the structure of your code. You can use a text editor with syntax highlighting to help you.",
                "Improving the performance of your code can include using faster algorithms, reducing complexity, optimizing queries, and using better data structures.",
                "To make a SQL query, use the `SELECT` command followed by the columns you want to extract and the table you want to get the data from. Example: `SELECT name, age FROM people;`.",
                "To improve the readability of your code, use descriptive names for variables and functions, add comments where necessary, and follow the style conventions of the language.",
                "A binary search algorithm is applied to ordered lists. The list is split into halves and the searched value is compared to the middle value. If there is no match, the search continues to the corresponding half.",
                "To compile and run a C program, use the `gcc` command to compile and then run the compiled file. Example: `gcc my_program.c -o my_program` and then `./my_program`.",
                "An infinite loop occurs when a loop's condition never becomes false. Make sure the loop has a valid exit condition.",
                "Recursion is when a function calls itself to solve a problem in smaller parts. It is useful in problems like tree searching or solving complex problems.",
                "Classes in Java are defined with the `class` keyword. Objects are created from these classes. You can add methods and attributes inside a class.",
                "In Node.js, you can handle errors using `try...catch` blocks or by listening for error events on objects such as read streams.",
                "The lifecycle of a component in React includes phases such as initialization, mounting, updating, and unmounting. You can control each phase using lifecycle methods or hooks.",
                "A thread is a unit of execution within a process. Threads allow multiple tasks to be executed at the same time. You can use threads to improve performance in concurrent programs.",
                "To keep track of variables, you can use debugging tools that allow you to view variable values ​​in real time as the program runs.",
                "To implement a binary tree in Python, you can create a `Node` class that holds a value and two references to the left and right child nodes.",
                "Concurrency problems occur when multiple threads try to access the same resources at the same time. You can solve this by using synchronization mechanisms such as semaphores or mutexes.",
                "An IDE (integrated development environment) is a tool that makes programming easier by integrating functions such as code editing, debugging, and compiling.",
                "To install a package in Python, you can use the `pip` package manager from the terminal. Example: `pip install package_name`.",
                "Design patterns are reusable solutions to common programming problems. Examples include the Singleton, Factory, and Observer patterns.",
                "Git is a version control tool that allows you to manage changes to your code. Use commands like `git commit`, `git push`, and `git pull` to manage your repositories.",
                "To manipulate strings in Java, you can use the `String` class. For example, to concatenate strings, use `+` or the `concat()` method. You can also use methods like `substring()`, `toLowerCase()`, etc."
            ]
        },
        {
            "tag": "consultation_operaciones de matemáticas",
            "patterns": [
                "How much is 5 plus 3?",
                "What is the result of 12 minus 7?",
                "How much is 6 times 8?",
                "How do you solve a division between 9 and 3?",
                "What is 15 divided by 5?",
                "How much is 25 multiplied by 4?",
                "How do you calculate the square root of 16?",
                "What is 100 divided by 25?",
                "What is 3 to the 4th power?",
                "What is the value of 8 plus 4 times 2?",
                "What is 7 times 9?",
                "If I have 10 and add 5, how much do I have?",
                "How do you make a fraction equivalent to 1/2?",
                "What is 36 divided by 6?",
                "How much is 2 cubed?",
                "How do I solve a 4 + 5 * 3 operation?",
                "If I have 20 and I divide it by 4, how much is it?",
                "How do you perform an operation with negative numbers?",
                "What is 9 plus 3 multiplied by 2?",
                "What is the result of 25 minus 5 plus 10?",
                "What is 45 divided by 9?",
                "If I have 3 and you subtract 1, what do you get?",
                "How do I calculate the area of ​​a circle?",
                "How do I perform an operation with exponents?",
                "What is 7 plus 3 times 5?",
                "How do you solve a simple equation of 2x + 3 = 7?",
                "If I have 100 and I divide it by 10, what is the result?",
                "How do you add fractions with unlike denominators?",
                "What is 18 multiplied by 2?",
                "How do you find the value of X in an equation of the form 3X = 12?",
                "How is the average of 10, 20 and 30 calculated?",
                "What is 9 minus 4 plus 6?",
                "How do you simplify a fraction?",
                "What is 6 squared?",
                "What is the result of 50 divided by 10?",
                "How do you add negative numbers?",
                "How do I solve 5 plus 3 times 2?",
                "If I have 20 and you multiply it by 2, how much do you get?",
                "How do I solve a square root?",
                "What is 12 plus 6 divided by 3?",
                "What is the value of 10 minus 7 plus 2?",
                "How do you calculate the perimeter of a rectangle?",
                "How do I solve a fraction division?",
                "What is 4 times 3 plus 2?",
                "How much is 50 plus 25?",
                "How do you do the operation 7 minus 3 times 2?",
                "What is 100 divided by 5?",
                "How do I solve an operation with decimals?",
                "What is 8 plus 12?",
                "If I have 30 and you subtract 15, how much is it?",
                "What is 5 by 5?",
                "How do I solve a quadratic equation?",
                "What is 30 minus 12?",
                "How do I solve an operation with parentheses?",
                "How much is 3 squared?",
                "What is 50 minus 20?"
            ],
            "responses": [
                "5 plus 3 equals 8.",
                "12 minus 7 equals 5.",
                "6 times 8 equals 48.",
                "9 divided by 3 equals 3.",
                "100 divided by 25 equals 4.",
                "25 multiplied by 4 equals 100.",
                "The square root of 16 is 4.",
                "100 divided by 25 equals 4.",
                "2 raised to the 4th power equals 16.",
                "8 plus 4 times 2 equals 16.",
                "7 times 9 equals 63.",
                "10 plus 5 equals 15.",
                "A fraction equivalent to 1/2 can be 2/4 or 3/6.",
                "36 divided by 6 equals 6.",
                "2 cubed equals 8.",
                "4 + 5 * 3 is solved as 4 + 15, which is 19.",
                "20 divided by 4 equals 5.",
                "Operations with negative numbers follow the same rules as addition, subtraction, multiplication, and division.",
                "9 plus 3 multiplied by 2 equals 15.",
                "25 minus 5 plus 10 equals 30.",
                "45 divided by 9 equals 5.",
                "3 minus 1 equals 2.",
                "The area of ​​a circle is calculated as pi times the radius squared.",
                "Operations with exponents involve multiplying the number by itself several times, depending on the exponent.",
                "7 plus 3 times 5 equals 22.",
                "To solve 2x + 3 = 7, we first subtract 3 from both sides and then divide by 2. x = 2.",
                "100 divided by 10 equals 10.",
                "To add fractions with different denominators, you must make the denominators the same before adding them.",
                "18 multiplied by 2 equals 36.",
                "To find the value of X in 3X = 12, you divide both sides by 3, which gives X = 4.",
                "The average of 10, 20 and 30 is (10 + 20 + 30) / 3 = 20.",
                "9 minus 4 plus 6 equals 11.",
                "To simplify a fraction, you divide the numerator and denominator by their greatest common divisor.",
                "6 squared equals 36.",
                "50 divided by 10 equals 5.",
                "To add negative numbers, you add the absolute values ​​and the sign will be the same as the number with the highest absolute value.",
                "5 plus 3 times 2 equals 11.",
                "20 multiplied by 2 equals 40.",
                "To solve a square root, you look for the number that, when multiplied by itself, gives you the original value.",
                "12 plus 6 divided by 3 equals 14.",
                "10 minus 7 plus 2 equals 5.",
                "The perimeter of a rectangle is calculated as 2 times (length + width).",
                "To divide fractions, you multiply the first fraction by the reciprocal of the second.",
                "4 times 3 plus 2 equals 14.",
                "50 plus 25 equals 75.",
                "7 minus 3 times 2 equals 1.",
                "100 divided by 5 equals 20.",
                "To solve operations with decimals, you follow the same rules for addition, subtraction, multiplication and division, aligning the decimals correctly.",
                "8 plus 12 equals 20.",
                "30 minus 15 equals 15.",
                "5 times 5 equals 25.",
                "To solve a quadratic equation, you can use the quadratic formula or factor the equation.",
                "30 minus 12 equals 18.",
                "To solve an operation with parentheses, you must first do the calculations inside the parentheses.",
                "3 squared equals 9.",
                "50 minus 20 equals 30."
            ]
        },
        {
            "tag": "consultation_data_query",
            "patterns": [
                "How can I query all the data in a table in SQL?",
                "How do I get data from a JSON file?",
                "How do I make a SQL query to filter records?",
                "How can I sort results from a SQL database?",
                "How do I group data in a SQL query?",
                "How to query a CSV file in Python?",
                "What command do I use to get only certain columns in a database?",
                "How do I get data from a database that is within a date range?",
                "How do I make a query in MongoDB to filter by value?",
                "How can I extract specific information from a JSON?",
                "How do I make a query with JOIN in SQL?",
                "How do I use the COUNT function in a SQL query?",
                "How would you filter records in a SQL database by a text column?",
                "What is an index in a database and how does it improve queries?",
                "How do I update data in a table using a SQL query?",
                "How do I delete records from a database?",
                "How do you query information from a JSON-structured API?",
                "How to group records in a database by date?",
                "How to make a query in SQL with multiple conditions?",
                "How do I make a query in SQL that is limited to the first 10 records?",
                "How to filter records by a numeric value in SQL?",
                "What types of indexes exist in databases and when are they used?",
                "How do I get all records in a table sorted by date?",
                "How can I query data in a database without repeating results?",
                "How to use the LIKE operator in a SQL query?",
                "How do I make a query with OR conditions in SQL?",
                "How do I view the most recent data in a database?",
                "How can I perform a SQL query with dynamic parameters?",
                "How can I query data from multiple tables in SQL?",
                "How to filter records with specific dates in SQL?",
                "How do I select a specific record in a CSV file?",
                "How can I query for the highest values ​​in a column in SQL?",
                "How do you perform a SQL query with an IN condition?",
                "How can I combine multiple conditions in one SQL query?",
                "What is a JOIN in SQL and how is it used?",
                "How do I filter the results of a SQL query by status?",
                "How do I query all the data in a table and sort it by a column?",
                "How can I perform a SQL query to display unique data?",
                "What is an aggregate query in SQL?",
                "How do I update a specific field in a database?",
                "How do I drop a table in SQL?",
                "How do I calculate the average of a column using SQL?",
                "How do I make a SQL query to filter data by null value?",
                "How can I query a MongoDB database?",
                "How do I convert a JSON file to a table in SQL?",
                "How can I query data in a SQL table without regard to case?",
                "How do I perform a query to view records with a value greater than X?",
                "How do I make a SQL query with multiple date conditions?",
                "How can I filter data from a JSON API in Python?",
                "How can I perform an INNER JOIN between two tables?",
                "How do I use the SUM function in a SQL query?",
                "How do I calculate date difference in SQL?"
            ],
            "responses": [
                "To query all the data in a table in SQL, you can use the command: `SELECT * FROM table_name;`.",
                "To get data from a JSON file, you can use a JSON reader like `json.loads()` in Python.",
                "To filter records in SQL, use the command `SELECT * FROM table_name WHERE column = 'value';`.",
                "To sort the results in SQL, use `SELECT * FROM table_name ORDER BY column ASC|DESC;`.",
                "To group data in SQL, use the `GROUP BY` clause. Example: `SELECT column, COUNT(*) FROM table_name GROUP BY column;`.",
                "To query a CSV file in Python, you can use the `pandas` library, with `pd.read_csv('file.csv')`.",
                "To get only certain columns in SQL, use `SELECT column1, column2 FROM table_name;`.",
                "To get data in a date range in SQL, use `SELECT * FROM table_name WHERE date BETWEEN 'start_date' AND 'end_date';`.",
                "To filter by value in MongoDB, you can use the `find()` function like `db.collection.find({ 'field': 'value' })`.",
                "To extract information from a JSON, you can use `json.loads()` in Python to convert the JSON into a dictionary.",
                "To do a JOIN in SQL, you can use the following format: `SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;`.",
                "To count records in SQL, use `SELECT COUNT(*) FROM table_name;`.",
                "To filter records by text in SQL, you can use `SELECT * FROM table_name WHERE column LIKE '%value%';`.",
                "Indexes in databases improve query performance. They can be indexes on search or sort columns.",
                "To update data in SQL, use the command `UPDATE table_name SET column = 'new_value' WHERE column = 'existing_value';`.",
                "To delete records in SQL, use `DELETE FROM table_name WHERE condition;`.",
                "To query data from a JSON-structured API, you can use libraries like `requests` in Python to make HTTP requests.",
                "To group records by date, you can use `SELECT date, COUNT(*) FROM table_name GROUP BY date;`.",
                "To make a query with multiple conditions in SQL, you can use `SELECT * FROM table_name WHERE condition1 AND condition2;`.",
                "To limit the results to the first 10 records, use `SELECT * FROM table_name LIMIT 10;`.",
                "To filter numeric records in SQL, you can use `SELECT * FROM table_name WHERE column > value;`.",
                "There are several types of indexes in databases, such as simple indexes, composite indexes, and full-text indexes. They are used depending on the queries.",
                "To get records sorted by date, use `SELECT * FROM table_name ORDER BY date DESC;`.",
                "To avoid duplicate results, you can use `SELECT DISTINCT column FROM table_name;`.",
                "The `LIKE` operator in SQL is used to search for patterns in text data, such as `SELECT * FROM table_name WHERE column LIKE '%value%';`.",
                "To use multiple OR conditions in SQL, you can write `SELECT * FROM table_name WHERE condition1 OR condition2;`.",
                "To see the most recent data, you can sort by date with `ORDER BY date DESC`.",
                "To make SQL queries with dynamic parameters, use placeholders like `?` or variables depending on the language.",
                "To query data from multiple tables, you can use `JOIN` or subqueries. Example: `SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;`.",
                "To filter by specific dates, use `WHERE date BETWEEN 'start_date' AND 'end_date'`.",
                "To select a record in a CSV file, you can use `pandas` to read the file and apply filters like `df[df['column'] == 'value']`.",
                "To get the highest values ​​of a column in SQL, use `SELECT MAX(column) FROM table_name;`.",
                "To use the `IN` operator in SQL, write `SELECT * FROM table_name WHERE column IN ('value1', 'value2');`.",
                "To combine multiple conditions in SQL, use logical operators such as `AND`, `OR`, and `NOT`.",
                "A `JOIN` in SQL is used to combine rows from two or more tables based on a common column.",
                "To filter by status in SQL, you can use `SELECT * FROM table_name WHERE status = 'value';`.",
                "To sort data by a column, use `ORDER BY column ASC|DESC`.",
                "To perform a query without repeating results, use `SELECT DISTINCT column FROM table_name;`.",
                "An aggregate query in SQL is used to perform aggregation operations such as `COUNT()`, `SUM()`, `AVG()`, etc.",
                "To update a specific field in a database, use `UPDATE table_name SET column = 'new_value' WHERE condition;`.",
                "To drop a table, use `DROP TABLE table_name;`.",
                "To calculate the average of a column, use `SELECT AVG(column) FROM table_name;`.",
                "To filter for null values, use `SELECT * FROM table_name WHERE column IS NULL;`.",
                "To query MongoDB, you can use `db.collection.find()` to get documents.",
                "To convert a JSON file to a SQL table, you must first load the JSON and then insert the data into a SQL table.",
                "To make a case-insensitive query in SQL, you can use `LOWER(column) = 'value'`.",
                "To filter records greater than a value, use `SELECT * FROM table_name WHERE column > value;`.",
                "To filter by multiple date conditions, you can use `WHERE date BETWEEN 'start_date' AND 'end_date' AND other_condition;`.",
                "To filter data from a JSON API in Python, you can use `requests.get()` to get the data and then apply filters.",
                "To perform an `INNER JOIN` between two tables, use `SELECT * FROM table1 INNER JOIN table2 ON table1.id = table2.id;`.",
                "To use the `SUM()` function in SQL, write `SELECT SUM(column) FROM table_name;`.",
                "To calculate date difference in SQL, you can subtract date columns like `SELECT DATEDIFF(date1, date2) FROM table_name;`."
            ]
        },
        {
            "tag": "consultation_set_preferences",
            "patterns": [
                "How do I adjust my account settings?",
                "How do I change notification settings?",
                "I want to change my privacy preferences.",
                "Can I change the language of the application?",
                "I need to adjust my profile settings.",
                "How do I customize alerts in the app?",
                "How do I set notification preferences?",
                "I want to change the interface theme.",
                "How to update security preferences?",
                "How to adjust account settings?",
                "Where do I change my privacy settings?",
                "Can I select which data I want to share?",
                "How can I change the frequency of notifications?",
                "I want to set my content preferences.",
                "How do I customize notification settings?",
                "How do I adjust my account privacy preferences?",
                "Where do I set my profile visibility?",
                "I want to change the language options.",
                "How do I set up push notifications?",
                "How do I change the update frequency?",
                "I want to change my social network preferences.",
                "How do I customize the display of results?",
                "I want to enable or disable email notifications.",
                "How do I adjust the privacy level of my account?",
                "Can I choose what content I want to see?",
                "I want to change the way I receive alerts.",
                "How do I adjust my app theme preferences?",
                "Where do I set up app alerts?",
                "I want to select my notification preferences.",
                "How do I change alert settings in the app?",
                "Can I change my account settings on the web?",
                "How do I adjust recommended content preferences?",
                "I want to configure my account security settings.",
                "How do I change the app display?",
                "How do I customize the way I receive emails?",
                "I want to adjust my search preferences.",
                "How do I change the privacy settings on my profile?",
                "Where do I set my social network preferences?",
                "I want to change the way I receive messages.",
                "How do I set up my account alerts?",
                "Can I customize notifications for each app?",
                "How do I configure data protection options?",
                "I want to change my content settings in my profile.",
                "Where are my profile customization options?",
                "How do I adjust my private message settings?",
                "How do I change my personal account preferences?",
                "Where do I set display preferences?",
                "I want to adjust my mobile notification settings."
            ],
            "responses": [
                "You can adjust your account settings by accessing the settings menu within your profile.",
                "To change your notification settings, go to the notifications section in your account settings.",
                "You can change your privacy settings in the privacy section of your profile or account.",
                "Yes, you can change the language of the app from the settings section in the configuration menu.",
                "To customize your profile, go to the profile settings section where you can change your preferences.",
                "To adjust app alerts, go to the notifications section in the settings menu.",
                "To set notification preferences, open the notifications option in your account settings.",
                "You can change the interface theme in the settings menu, usually under the 'Appearance' option.",
                "You can update your security preferences from the security section of your account settings.",
                "Your account preferences can be adjusted from your account or profile settings.",
                "To change your privacy settings, go to the privacy section in settings.",
                "Yes, you can select what data to share from the privacy options in your profile.",
                "To change the frequency of notifications, go to notification settings and adjust the frequency option.",
                "Content preferences can be adjusted from the content customization section of your account.",
                "You can customize your notification settings in the notifications section within the settings menu.",
                "You can adjust your privacy preferences from the privacy option in your account settings.",
                "The visibility of your profile can be set from the privacy section of your profile.",
                "To change the language, you can do so from the language option in the application settings.",
                "You can configure push notifications from the notifications section in your settings.",
                "The update frequency can be adjusted from the settings menu, in the updates or notifications section.",
                "You can change your social network preferences in the social connections section of your account settings.",
                "You can customize the app's results from the results or content customization settings.",
                "You can turn email notifications on or off in your notification settings.",
                "Your account privacy settings can be adjusted in the privacy section within your profile settings.",
                "Yes, you can choose what content you want to see from the customization options in your account.",
                "You can change how you receive alerts from the notification settings in your profile.",
                "To adjust the app themes, head to the appearance section within settings.",
                "App alerts can be set up in the notifications section of your account.",
                "You can select your notification preferences in the notification settings section.",
                "Alert settings in the app can be changed from the notifications menu in settings.",
                "Yes, you can change your account settings from the website in the settings section.",
                "To adjust your recommended content preferences, visit the content personalization option in your account.",
                "You can configure your account security options from the security section in settings.",
                "To change the display of the app, access the appearance option in the settings.",
                "You can customize how you receive emails from your email notification settings.",
                "You can adjust your search preferences from the search section in settings.",
                "Privacy settings on your profile can be adjusted in the privacy menu.",
                "You can change your social network preferences from the social settings section of your account.",
                "To change how you receive messages, go to the message settings in your account.",
                "Alerts for your account can be set up in the notifications section within settings.",
                "Yes, you can customize notifications for each app from notification settings.",
                "You can configure data protection options from the privacy or security section in settings.",
                "To change content settings on your profile, go to the content customization section of your account.",
                "Profile customization options are located in profile settings.",
                "Your private message settings can be adjusted from the messages option in settings.",
                "You can change your personal account preferences from the settings menu.",
                "Display settings can be adjusted in the appearance section within settings.",
                "You can adjust mobile notification settings in the notifications section of settings."
            ]
        },
        {
            "tag": "consultation_profile_info",
            "patterns": [
                "What is my name?",
                "What information do I have registered?",
                "Can I see my account details?",
                "What data do I have in my profile?",
                "How can I view my personal information?",
                "What data do I have in my user profile?",
                "What is my registered email address?",
                "How do I update my profile information?",
                "Can I change my username?",
                "How can I modify my personal data?",
                "What information is linked to my account?",
                "How do I view my purchase history?",
                "Can I see my payment details?",
                "What are my saved preferences?",
                "Where can I find my registered phone number?",
                "How do I view my privacy settings?",
                "Can I update my profile picture?",
                "Where can I see my connected devices?",
                "What options do I have to change my password?",
                "What are my account settings?",
                "How can I view my activity history?",
                "Can I see recent activity on my account?",
                "How do I update my email address?",
                "Can I change my shipping address?",
                "How do I access my transaction history?",
                "Where can I see my notification preferences?",
                "Can I delete my account?",
                "When was the last time I updated my profile?",
                "What data is linked to my social networks?",
                "How can I check my security settings?",
                "Can I update my phone number on my account?",
                "Where can I see my connected devices?",
                "How do I change my profile picture?",
                "Can I see my active subscriptions?",
                "Where are my bank details registered?",
                "How can I check my payment information?",
                "Can I see my previous purchase history?",
                "How do I change my password?",
                "Where can I see my linked apps?",
                "What are my privacy settings?",
                "Can I change my email address?",
                "How can I change my language preferences?",
                "Can I see my payment and billing details?",
                "How do I view my activity logs in my account?",
                "Can I update my residential address?"
            ],
            "responses": [
                "Your registered name is Bootcito.",
                "You can view the information recorded in your profile from the settings or profile section.",
                "Yes, you can view your account details by accessing your profile and selecting the personal information option.",
                "Your profile contains your name, email address and other personal details.",
                "To view your personal information, go to the profile or account settings section.",
                "In your profile you will find data such as your name, email and saved preferences.",
                "Your registered email address is [email@domain.com].",
                "You can update your information by accessing the profile settings section.",
                "Yes, you can change your username from your account settings.",
                "Your personal information can be modified from the personal data section of your profile.",
                "Your account contains data such as your name, email address, and your notification preferences.",
                "To view your purchase history, go to the order or purchase history section of your account.",
                "Yes, you can view your payment details in the payment or billing section of your profile.",
                "Your saved preferences are located in the custom settings section.",
                "Your registered phone number is available in the personal information section of your profile.",
                "You can review your privacy settings from the privacy option in your account.",
                "You can change your profile picture from the profile section in your account settings.",
                "Your connected devices are located in the security or devices section of your profile.",
                "You can change your password from the security section in your account settings.",
                "You can view your account settings in the 'Settings' section of your profile.",
                "Your activity history is available in the activities or history section within your account.",
                "Yes, you can view your recent activity in the activities section of your account.",
                "You can update your email address in your account settings, under the email section.",
                "You can change your shipping address from the addresses option in your account settings.",
                "Your transaction history is available in the payments or financial history section of your account.",
                "Your notification preferences are located in the notifications section of your profile settings.",
                "Yes, you can delete your account from the settings or privacy option in your profile.",
                "You can check the date of the last update in your profile, usually in the settings section.",
                "Data linked to your social networks is available in the connected accounts section.",
                "Your security settings can be reviewed and modified in the security section of your profile.",
                "You can update your phone number in the contact section of your account settings.",
                "Your devices connected to your account can be viewed in the devices section of your profile.",
                "You can change your profile picture by accessing the profile section in settings.",
                "Your active subscriptions are available in the subscriptions or services section of your account.",
                "Your banking information is available in the payment or billing section of your profile.",
                "You can review your payment information from the payments or billing section of your profile.",
                "Your previous purchase history is available in the purchase or order history section.",
                "You can change your password from the security option in your account settings.",
                "Linked apps can be viewed in the Connected apps or services section of your profile.",
                "Your privacy settings are available in the privacy section of your account settings.",
                "You can change your email address from your profile settings in your account.",
                "You can change your language preferences from the language option in your account settings.",
                "Your payment and billing details are located in the payments or billing section of your profile.",
                "Your account activity log is available in the activity or history section.",
                "Your residential address can be updated in the addresses section of your account."
            ]
        },
        {
            "tag": "consultation_privacy",
            "patterns": [
                "What is the privacy policy?",
                "How do you handle my personal data?",
                "What information do you collect from me?",
                "Do you share my data with third parties?",
                "How do you protect my personal information?",
                "What do you do with my data after you collect it?",
                "How can I remove my data from your system?",
                "How long do you keep my data?",
                "Can I access the data they have about me?",
                "How do you update your privacy policy?",
                "Is my data safe?",
                "What do I do if I want to change my privacy settings?",
                "Can I choose not to share certain data?",
                "How am I notified of changes to the privacy policy?",
                "What are your privacy practices?",
                "Can I request deletion of my personal information?",
                "How am I protected from data breaches?",
                "Do you collect data from minors?",
                "Is my information shared with advertisers?",
                "How do you manage cookies on your website?",
                "What should I do if I suspect my data has been compromised?",
                "How do you use my data for advertising purposes?",
                "What are my rights in relation to my personal information?",
                "How can I control what data I share?",
                "What happens if I delete my account?",
                "How do you handle payment information?",
                "Can I see what data you have about me?",
                "How do you ensure that my data is not leaked?",
                "What should I do if I want to file a privacy complaint?",
                "How can I contact you regarding privacy issues?",
                "Where can I find your privacy policy?",
                "Do you collect information from my devices?",
                "Is my data stored on a secure server?",
                "Who has access to my personal information?",
                "How do you manage international data transfers?",
                "What kind of information do you collect when I subscribe to a service?",
                "What security measures do you take to protect my data?",
                "What information do you collect from my interactions with your service?",
                "Can I delete my account and all my data from your system?",
                "What are the purposes for which my data is used?",
                "Do you have any mechanisms to protect my financial information?",
                "Can I request that my data not be shared with business partners?",
                "What happens if I do not agree with your privacy policy?",
                "Can I opt out of receiving marketing communications?",
                "Are your privacy policies applicable to other platforms?"
            ],
            "responses": [
                "Our privacy policy details how we collect, use and protect your data. You can read it in full in the privacy section of our website.",
                "We collect personal data to improve your experience and offer personalized services. See our privacy policy for more details.",
                "We collect basic information such as name, email and usage data as explained in our privacy policy.",
                "We do not share your data with third parties without your consent, except in the cases specified in our privacy policy.",
                "We take reasonable security measures to protect your personal information from unauthorized access, as detailed in our privacy policy.",
                "Once collected, your data is used for the purposes stated in our privacy policy and is not retained longer than necessary.",
                "You can delete your data by contacting us or requesting it through the privacy section in your account.",
                "We retain your data for the time necessary to fulfill the purposes set out in our privacy policy.",
                "You have the right to access the data we have about you. You can request this from the privacy section of your account.",
                "Our privacy policy is updated periodically. We will notify you of any significant changes through the contact channels provided.",
                "Yes, we take advanced security measures to protect your information. Please see our privacy policy for more details on data protection.",
                "You can manage your privacy settings in the privacy section within your account.",
                "Yes, you can choose not to share certain data by adjusting your preferences in your account privacy settings.",
                "We notify you about changes to our privacy policy by email or through notifications on the platform.",
                "Our privacy practices include collecting the minimum amount of data necessary to provide you with quality service.",
                "You can request deletion of your personal information by contacting us or by following the steps in our privacy section.",
                "We implement advanced security measures to protect your data from data breaches. See our privacy policy for more details.",
                "We do not collect data from minors without parental or guardian consent. Please see our privacy policy for more details.",
                "We do not share your data with advertisers unless explicitly stated in our privacy policy.",
                "Our cookie policy describes how we use cookies and how you can manage them from your browser.",
                "If you suspect your data has been compromised, please contact our support team immediately.",
                "We use your data to personalize your experience and offer you relevant advertising, but always respecting your privacy.",
                "You have the right to access, correct or delete the personal information we hold about you. Please see our policy for more details.",
                "You can control what data you share with us by adjusting the privacy settings in your account.",
                "If you delete your account, your personal data will be deleted, except for any data we are required to retain for legal reasons.",
                "We handle payment information securely and in compliance with privacy and security regulations.",
                "You can view the data we have about you by accessing your profile or requesting it through the support channels.",
                "We take security measures to ensure your data is protected, including encryption and secure storage.",
                "Only authorized employees and necessary service providers have access to your personal information.",
                "We ensure that international data transfers are carried out in accordance with applicable data protection laws.",
                "We collect contact information, preferences and other details necessary to process your subscription or service.",
                "We use security measures such as encryption to protect your data and prevent unauthorized access.",
                "We collect information about your use of our services to provide you with a personalized experience and to improve our products.",
                "You can delete your account and all your data by contacting us or using the option available in your settings.",
                "Your data is used to provide you with a personalized service, process payments, send you communications, and for other related purposes.",
                "We implement additional security measures to protect your financial information, such as encryption and secure storage.",
                "You have the right to request that your data not be shared with commercial partners. See our privacy policy for more details.",
                "If you do not agree with our privacy policy, you may choose to stop using our services.",
                "You may opt out of receiving marketing communications by adjusting your notification preferences in your account settings.",
                "Our privacy policy applies only to our services, but we encourage you to read the privacy policies of the linked platforms."
            ]
        },
        {
            "tag": "consultation_security",
            "patterns": [
                "How can I protect my account?",
                "What can I do to improve the security of my account?",
                "How do I protect my password?",
                "What are the best online security practices?",
                "What should I do if I think my account has been hacked?",
                "How can I prevent my password from being stolen?",
                "Is it safe to use the same password for multiple sites?",
                "How can I check if my account is secure?",
                "What is two-factor authentication and how do I enable it?",
                "Should I use a VPN to protect my privacy?",
                "How do I avoid falling for online scams?",
                "Is it safe to use public Wi-Fi?",
                "How do I know if an email is phishing?",
                "What should I do if I lose my phone with access to my accounts?",
                "How do I know if my account has been compromised?",
                "How to protect my personal data on social networks?",
                "Is it safe to shop online?",
                "How do I make my password more secure?",
                "What should I do if someone hacks my account?",
                "How to avoid online identity theft?",
                "What should I do if I see suspicious activity on my account?",
                "Why is it important to change my passwords regularly?",
                "How do I secure my social media accounts?",
                "Should I enable two-step authentication?",
                "How to protect my devices from viruses and malware?",
                "What should I do if I receive a suspicious message from a friend?",
                "Is it safe to share personal information via email?",
                "How can I secure my information on my mobile phone?",
                "What do I do if I suspect my accounts are being spied on?",
                "How to prevent my devices from being hacked?",
                "How can I protect my personal files?",
                "What should I do if I have a weak password?",
                "Is it safe to use passwords saved in my browser?",
                "How do I protect my passwords with a password manager?",
                "Why should I be careful with open Wi-Fi networks?",
                "Is it safe to use my credit card online?",
                "How do I know if a website is safe to shop on?",
                "What should I do if I find a virus on my device?",
                "How do I protect my files in the cloud?",
                "How to avoid data theft while browsing online?",
                "Is it safe to use third-party apps on my phone?",
                "How do I enable security notifications on my account?",
                "How can I protect myself from ransomware attacks?",
                "What should I do if I receive a suspicious link in a message?",
                "Why should I not use passwords that are easy to guess?",
                "How do I prevent my credit card information from being stolen?",
                "How can I protect myself from social engineering attacks?",
                "Is it safe to share passwords with friends or family?",
                "What should I do if I suspect a security breach in a company?"
            ],
            "responses": [
                "To protect your account, be sure to use strong, unique passwords, and turn on two-factor authentication when available.",
                "Use long and complex passwords, enable two-factor authentication, and keep your devices updated to improve the security of your account.",
                "Never use passwords that are easy to guess. Use a combination of letters, numbers and symbols, and change your passwords regularly.",
                "Security best practices include using strong passwords, enabling two-factor authentication, and avoiding sharing your passwords.",
                "If you suspect your account has been hacked, change your password immediately and review your account security settings.",
                "To prevent your password from being stolen, use strong passwords, don't share them, and enable two-factor authentication whenever possible.",
                "It is not recommended to use the same password for multiple sites. If one of the sites is compromised, all of your accounts will be at risk.",
                "Check the security of your account by reviewing recent activity and turning on security notification options, such as two-step authentication.",
                "Two-factor authentication adds an extra layer of security. You can turn it on in your account settings to protect your data.",
                "Yes, using a VPN on public networks helps protect your privacy by encrypting your internet connection and making it more secure.",
                "Avoid clicking on suspicious links and be sure to verify the authenticity of emails before providing any personal information.",
                "It's not safe to use public Wi-Fi for sensitive activities like shopping or accessing bank accounts. Use a VPN if you need to do so.",
                "Phishing emails often contain spelling or formatting errors. If in doubt, do not click on links or download attachments.",
                "If you lose your phone, change the passwords for your important accounts and turn on device location if available.",
                "If you suspect your account has been compromised, change your password immediately and review activity logs for suspicious actions.",
                "On social media, limit the amount of personal information you share and adjust privacy settings to protect your data.",
                "It is important to use secure websites and check that the URL begins with 'https://' before entering your details to make online purchases.",
                "Make sure your password is long, uses a combination of characters, and avoids common words. You can also use a password manager.",
                "If your account has been hacked, change your password, contact platform support, and review activity logs.",
                "Avoid sharing sensitive information such as your credit card number or passwords in unsecured emails or text messages.",
                "Install an antivirus and make sure your phone is up to date to protect it from potential threats and vulnerabilities.",
                "If you suspect someone is spying on your account, change your password and check your account's security and privacy settings.",
                "Keep your devices up to date and use reliable security software to protect against malware and other threats.",
                "Protect your personal files using strong passwords and encrypted storage. Use a password manager for added security.",
                "If you have a weak password, change it to a more complex one that includes a mix of letters, numbers and symbols.",
                "While it is convenient to save passwords in your browser, it is safer to use a specialized password manager.",
                "Using a password manager helps you store and generate strong passwords, which improves the protection of your accounts.",
                "Avoid using public Wi-Fi networks for sensitive activities such as accessing your bank accounts. Always use a VPN if possible.",
                "When shopping online, make sure the site is trustworthy, has security protocols such as 'https://', ​​and read reviews from other users.",
                "If you find a virus on your device, run a full scan with antivirus software and follow the recommendations to remove it.",
                "Secure your files in the cloud by using strong passwords and enabling two-factor authentication on platforms that support it.",
                "To avoid data theft while browsing, use a secure browser and review the permissions of the applications you install.",
                "Only install apps from trusted sources and review the permissions they request before accepting them.",
                "Security notifications alert you to any suspicious activity on your account. Make sure to turn them on for added protection.",
                "Ransomware protection includes backing up your files and not clicking on suspicious links or attachments.",
                "If you receive a suspicious link, do not click on it or provide any personal information. Always verify the source of the message.",
                "Avoid using simple passwords like '123456' or 'password'. Use unique and complex combinations that are difficult to guess.",
                "To protect your credit card information, be sure to use secure websites and trusted payment methods like PayPal.",
                "To protect yourself from social engineering attacks, never share your passwords or personal information with strangers.",
                "It is best not to share passwords with friends or family. If necessary, use a secure shared password manager.",
                "If you suspect a security breach at a company, report it immediately and follow instructions to protect your account."
            ]
        },
        {
            "tag": "consultation_saludo",
            "patterns": [
                "Hello",
                "Hi how are things?",
                "Good morning!",
                "Good afternoon!",
                "Good night!",
                "Hey!",
                "How are you!",
                "What's happening?",
                "What's up!",
                "How are you?",
                "How's it going?",
                "What's new!",
                "Hello good morning!",
                "How's everything going?",
                "How's everything?",
                "Greetings!",
                "Hey! How are you?",
                "What about you!",
                "How's life going?",
                "How's it going there?",
                "All good?",
                "How's everything going on your side?",
                "How are you spending your day?",
                "Hello! How's the family?",
                "Hello, how are you?",
                "How was your week?",
                "How are you? How are you feeling?",
                "How was your day?",
                "Hello, good morning! How are you?",
                "Everything okay there?",
                "How are you? How are you feeling?",
                "Hello, everything cool?",
                "How's everything over there?",
                "What's up! Everything okay?",
                "How was your day?",
                "Hello, how's everything?",
                "How was your week?",
                "How's everything going there?",
                "How's life?",
                "How are things with you?",
                "Hello! How's your day going?",
                "What's up! Everything okay?",
                "Everything quiet?",
                "What's up! How are you?",
                "Hello! How are you feeling?",
                "Hello, nice to see you!",
                "Hello! How's everything in your world?",
                "Hey! How are you?",
                "How's everything in your world?",
                "Hello! Everything okay?",
                "How are you feeling today?",
                "How are you doing over there?",
                "How was your day today?",
                "Hello! Everything okay there?",
                "Greetings! How are you?",
                "How's it going there?",
                "Everything okay over there?",
                "How was your day?",
                "Hello! How are you?",
                "Hello, nice to see you!",
                "How are you? How are you doing?",
                "Hey! How's it going?",
                "How was your weekend?",
                "How's it going over there?",
                "Hello! How's life?",
                "How's everything here?",
                "See you, how are you?",
                "How's life today?",
                "How was your day?",
                "How's everything? Everything okay?",
                "Hello! How are you spending your day?",
                "Hello! How's everything here?",
                "Hello! How are you?",
                "How's your day going?",
                "How's everything, is everything okay?",
                "What's up! How's everything going?",
                "Hello! How's everything going on your side?",
                "How's everything! Everything okay?",
                "How's the family?",
                "Hello! What's new?",
                "How are you? How's everything going?",
                "Hello! How are you spending your day?",
                "How's your day going today?",
                "Hello! Everything quiet there?",
                "How are you? How are you doing?",
                "How was your weekend? Everything okay?",
                "How are you? Everything okay there?",
                "Hello! Everything cool?",
                "Hello! How are things today?",
                "How was your day today?",
                "Hello! Everything okay here?",
                "Hey! Everything okay over there?",
                "Hello! Is everything okay?",
                "Hello! Is everything okay?",
                "How was your morning?",
                "Hello! Everything okay on your side?",
                "Hello! Everything okay over there?",
                "Hello! How are you feeling today?",
                "How are you feeling now?",
                "Hello! How are you today?",
                "Hello! How are you doing with everything?",
                "How's everything going there?",
                "Hello! How's everything going on your end?",
                "How are you? Everything in order?",
                "Hello! How's everything going today?",
                "Everything okay there?",
                "Hello! How's everything going?",
                "How are you? How is your day going?",
                "Hello! Is everything okay?",
                "How are you? Everything okay?",
                "How are you? How are you doing?",
                "Hello! How is your day?",
                "How are you? How is your day going?",
                "Hello! How's everything?",
                "Hello! How's life going for you?",
                "Hello! How's everything going over there?",
                "How was your day?",
                "Hello! How's everything over there?",
                "Hello! How are you?",
                "Hello! Everything okay?",
                "How are you? How's everything going?",
                "Hello! Everything okay here?",
                "How was your day?",
                "Hello! How are you feeling today?",
                "Hello! How's everything going on your end?",
                "Hello! Is everything okay?",
                "How are you? How are you?",
                "Hello! How's everything?",
                "Hello! Everything okay here?",
                "Hello! How's everything here?",
                "How are you? How are you feeling?",
                "Hello! How is your day?",
                "Hello! How are you?",
                "How are you? Everything okay on your side?",
                "Hello! How are you?",
                "How are you? Everything okay today?",
                "Hello! Is everything okay?",
                "What's up! How are you?",
                "Hello! How is your day going?",
                "How are you? How's everything going over there?",
                "Hello! How are you today?",
                "Hello! Everything okay here?",
                "Hello! How is your day?",
                "Hello! How are things over there?",
                "Hello! How are you?",
                "Hello! Everything okay? How are you?",
                "Hello! How's everything going?",
                "How are you? Everything quiet?",
                "Hello! How's everything going?",
                "Hello! How are you doing there?",
                "Hello! How's everything going?",
                "How's everything?",
                "Hello! Is everything okay?",
                "How's everything?",
                "Hello! How's everything?",
                "Hello! How are things today?",
                "Hello! How's your day going?",
                "Hello! How's everything going over there?",
                "Hello! How's life?",
                "Hello! Is everything okay?"
            ],
            "responses": [
                "Hello! How can I help you?",
                "Hello how are you?",
                "Hello! How can I help you?",
                "Hello, nice to meet you!",
                "Nice to see you here!",
                "Welcome! How can I help you?",
                "Hello, how are you?",
                "How are you? How can I help you?",
                "Hello! Everything okay?",
                "Greetings! How can I help you?",
                "Hello! How's everything?",
                "Nice to see you! How can I help you?",
                "How are you? Everything okay?",
                "Hello! How are you?",
                "Hello! How's everything going?",
                "Hello! How is your day?",
                "How are you? Everything okay there?",
                "Hey! How can I help you?",
                "How are you? How are you doing today?",
                "Hello! Is everything okay?",
                "Hello! How can I help you?",
                "Hello! How is your day?",
                "What's up! How's everything going?",
                "Hello, is everything okay?",
                "Good afternoon! How are you?",
                "How are you? How can I help you?",
                "Hello! How are things?",
                "How's everything? Do you need anything?",
                "Hello! How are you feeling?",
                "Hello! How can I help you today?",
                "How's everything, is everything okay?",
                "Hello! Can I help you with something?",
                "What's up! Can I help you?",
                "Hello! Everything quiet here?",
                "How are you? Everything in order?",
                "What's up! How's your day going?",
                "Hello! How are you today?",
                "Hello! Everything okay here?",
                "Hello! Can I help you with something?",
                "Hello! How are you?",
                "Hello! How can I help you now?",
                "How's everything! Everything okay?",
                "Hello! How's everything going on your end?",
                "Hello! Can I help you with anything else?",
                "How's it going! How can I help you?",
                "What's up! Can I help you with something?",
                "Hello! Is everything okay?",
                "How are you? How can I help you?",
                "What's up! Everything okay?",
                "Hello! How can I help you?",
                "Hello! Everything okay there?",
                "How are you? How are you doing?",
                "Hello! Can I help you?",
                "Greetings! How can I help you?",
                "Hello! How are you feeling today?",
                "How are you? How can I help you?",
                "Hello! Everything okay over there?",
                "Hello! How's life?",
                "What's up! Everything okay?",
                "How are you? How are you today?",
                "Hello! How's everything going on your side?",
                "Hello! How are you?",
                "Hello! Everything okay?",
                "What's up! How's your day going?",
                "How are you? How can I help you?",
                "Hello! How is your week going?",
                "Hello! How are you?",
                "What's up! How's everything going?",
                "Hello! Is there anything else I can help you with?",
                "Greetings! How's everything going?",
                "Hello! Is everything okay?",
                "How are you? How is your day going?",
                "Hello! How can I help you?",
                "How are you? Everything quiet?",
                "Hello! Everything okay there?",
                "Hello! Can I help you?",
                "Hello! Everything okay?",
                "Hello! How are you?",
                "Hello! Everything okay?",
                "What's up! Is everything okay?",
                "Hello! Can I help you?",
                "Hello! How is your day going?",
                "How are you? Everything okay here?",
                "How are you? How's everything going?",
                "Hello! Can I help you with something?",
                "Hello! Everything okay over there?",
                "Hello! How's everything going today?",
                "How are you? Everything in order?",
                "Hello! How are you?",
                "Hello! How's everything there?",
                "Hello! How is your day?",
                "Hello! How can I help you?",
                "What's up! Is everything okay here?",
                "Hello! How's everything going?",
                "Hello! Can I help you with anything else?",
                "Hello! Everything okay?",
                "How are you? How are you doing?",
                "Hello! Is everything okay?",
                "Hello! Can I help you with something?",
                "Hello how are you?"
            ]
        },
        {
            "tag": "consultation_despedida",
            "patterns": [
                "Bye",
                "See you later",
                "See you",
                "Bye",
                "Take care of yourself!",
                "See you soon",
                "See you around",
                "See you later",
                "Goodbye, have a nice day",
                "See you!",
                "See you next time!",
                "Until next time",
                "Have a good day!",
                "See you later, take care!",
                "Until next time!",
                "See you another time",
                "Goodbye! Have a nice day!",
                "See you soon, friend!",
                "Stay well!",
                "Take care of yourself!",
                "See you soon! Have a good time!",
                "Goodbye, have a good trip!",
                "See you later",
                "See you later, rest well!",
                "Until next time!",
                "See you tomorrow!",
                "See you later!",
                "Take care of yourself, friend!",
                "See you soon, have a good one!",
                "Goodbye! I send you a hug",
                "See you, take care of yourself!",
                "See you soon, friend!",
                "See you later!",
                "See you, take care!",
                "See you another time!",
                "Farewell!",
                "Stay well, bye!",
                "See you very soon!",
                "Have a nice day!",
                "Goodbye! See you soon",
                "Goodbye, may everything go well for you!",
                "See you later, take care",
                "See you later, all the best!",
                "See you soon, take care of yourself!",
                "See you later, take care of yourself!",
                "Bye, have a nice day!",
                "Goodbye, rest well!",
                "Goodbye, have a great day!",
                "See you soon, see you later!",
                "See you, take care!",
                "Goodbye, may everything go well for you!",
                "See you soon, have a good one!",
                "Take care of yourself!",
                "See you, have a nice day!",
                "See you soon, take care!",
                "See you, hugs!",
                "See you next time! Take care",
                "See you soon, take care of yourself!",
                "See you soon, bye",
                "See you later! See you later!",
                "Take care! See you later",
                "See you later, take care",
                "See you, get some rest!",
                "See you soon, be well!",
                "See you soon! Take care",
                "See you soon! I wish you the best",
                "See you later! See you later!",
                "See you soon, may everything go well for you!",
                "See you later! Take care of yourself",
                "See you soon, have a great day!",
                "Goodbye, all the best!",
                "See you later, may everything go well for you!",
                "See you soon! Take care of yourself",
                "See you after a while!",
                "See you soon!",
                "See you later! I wish you the best",
                "See you soon! Take care of yourself",
                "See you soon, be well!",
                "See you later! I hope everything goes well for you!",
                "See you soon! Take care",
                "See you soon! See you soon!",
                "See you soon, take care of yourself",
                "See you soon! I send you a hug",
                "See you later!",
                "Goodbye, have a nice day!",
                "See you later! Have a good rest",
                "See you soon! Until next time",
                "See you later! I hope everything goes well!",
                "See you soon! Take care of yourself",
                "See you next time!",
                "See you soon! I wish you the best",
                "See you soon! Take care",
                "See you later, have a good one!",
                "See you later, take care!",
                "See you later! Have a good time!",
                "See you later, take care of yourself!",
                "See you later, take care of yourself",
                "See you soon, take care!",
                "See you later, may everything go well for you!",
                "See you later! Have a good time!",
                "See you soon, take care of yourself!",
                "See you, get some rest!",
                "See you soon! Take care of yourself",
                "See you soon, take care of yourself!",
                "See you later, have a good one!",
                "Until next time!",
                "See you soon! Have a good time!",
                "Goodbye, may everything go well for you!",
                "See you soon! See you later",
                "See you soon, have a good rest!",
                "See you later!",
                "See you, take care of yourself",
                "See you soon! Take care of yourself",
                "See you later, all the best!",
                "See you, get some rest!",
                "See you soon, see you later!",
                "See you, take care of yourself!",
                "See you later! I hope everything goes well for you.",
                "See you later",
                "See you, hope everything goes well!",
                "See you later!",
                "See you, take care of yourself!",
                "See you later!",
                "See you later, get some rest!",
                "See you later, rest well!",
                "See you later!",
                "See you soon! Take care",
                "See you next time!",
                "See you later, may everything go well for you!",
                "See you soon! Have a good time!",
                "See you after a while!",
                "See you soon! Take care of yourself",
                "See you soon, I hope everything goes well for you!",
                "See you soon! See you soon",
                "See you soon! Take care",
                "See you later, hope everything goes well",
                "See you later!",
                "See you soon, all the best!",
                "See you soon, have a good rest!",
                "See you later, take care!",
                "See you after a while!",
                "See you, take care of yourself!",
                "See you later, rest well!",
                "See you later, have a good one!",
                "See you soon, until next time!",
                "See you soon! Take care",
                "See you! I send you a hug",
                "See you soon, have a good rest!",
                "See you soon! Take care of yourself",
                "See you soon!"
            ],
            "responses": [
                "See you soon!",
                "Have a good day!",
                "See you soon!",
                "Take care of yourself!",
                "See you later!",
                "See you!",
                "See you next time!",
                "Bye! Take care",
                "See you soon!",
                "See you around!",
                "Goodbye, have a nice day!"
            ]
        },
        {
            "tag": "consultation_pregunta_tiempo",
            "patterns": [
                "What time is it?",
                "How is the weather?",
                "What day is today?",
                "What's the weather like?",
                "What is the weather like right now?",
                "What time is it?",
                "Can you tell me the time?",
                "It's raining?",
                "Is it hot today?",
                "What time is it right now?",
                "What is the temperature?",
                "What is the weather like today?",
                "Is it sunny?",
                "Is it snowing?",
                "What time is it in this place?",
                "Is it cold today?",
                "What is the temperature?",
                "What day is today?",
                "How is your day?",
                "Is it cloudy?",
                "What is the temperature today?",
                "What time is it?",
                "What time is it in Spain?",
                "Is it sunny or cloudy?",
                "Is the weather nice?",
                "Is it raining now?",
                "What time does it get light?",
                "When will it be sunset?",
                "How is the weather today?",
                "Is it cloudy today?",
                "What's the time?",
                "Is it cold in the morning?",
                "What kind of weather do we have?",
                "Is it hot or cold?",
                "What time is it in New York?",
                "What time does it start to get dark?",
                "Is the weather nice today?",
                "What time is it in London?",
                "What will the weather be like tomorrow?",
                "Is it cool today?",
                "Is it going to rain tomorrow?",
                "How is the temperature?",
                "What time is it in Argentina?",
                "What time is it in my area?",
                "Is it hot in the city?",
                "What is the weather like today?",
                "Is it cold in the morning?",
                "What does the weather look like today?",
                "What is the temperature now?",
                "How many degrees is it?",
                "What time does the day start?",
                "Is it going to rain later?",
                "What will the temperature be like tomorrow?",
                "Is it hot in the afternoon?",
                "What time is it in the afternoon?",
                "What is the time in Japan?",
                "How's the weather going to be tomorrow?",
                "Is it clear today?",
                "What will the weather be like in the afternoon?",
                "What will the weather be like tonight?",
                "What time does it get dark?",
                "What is the weather forecast?",
                "Is it very cold?",
                "What's the weather like at the beach?",
                "What time is it going to rain?",
                "What time is it in Berlin?",
                "Is it hot at noon?",
                "Is it raining this morning?",
                "What is the weather like in the afternoon?",
                "What is the weather like now?",
                "What time will it be?",
                "How long until dawn?",
                "Is it very hot today?",
                "Is it dark already?",
                "What's the weather going to be like tonight?",
                "Is it cold in the afternoon?",
                "How many degrees is it now?",
                "What time does it start to drizzle?",
                "What is the temperature now?",
                "Is the weather nice to go out?",
                "What time does the sun rise?",
                "What time will it be in Buenos Aires?",
                "What is the temperature now?",
                "Is it hot or cold tonight?",
                "What time does dawn break tomorrow?",
                "Is it hot in the afternoon?",
                "Is it going to rain this week?",
                "Is the weather good for exercise?",
                "How's the weather going to be tomorrow?",
                "What time is it on the other side of the world?",
                "Is it going to snow tomorrow?",
                "What is the weather like in the afternoon?",
                "How many degrees are there?",
                "What is the weather like this afternoon?",
                "Is it cold at night?",
                "What time does the sun set?",
                "What is the temperature today?",
                "Is it hot this afternoon?",
                "What will the weather be like in the mountains?",
                "How is the day in the city?",
                "What's the weather like tonight?",
                "What will the weather be like?",
                "Is it cloudy or sunny?",
                "What time is it in the center of the country?",
                "What will the temperature be tomorrow?",
                "What's the weather like this morning?",
                "Is it going to be cold in the morning?",
                "What will the weather be like this afternoon?",
                "What is the weather like in the countryside?",
                "What time is it right now?",
                "Is it sunny in the city?",
                "Is it cold this afternoon?",
                "Is it going to rain in the next few hours?",
                "Is it clear tonight?",
                "Is it cold or hot at night?",
                "What will the weather be like in the coastal area?",
                "What is the weather like this morning?",
                "Is it hot in the morning?",
                "What time is it in this country?",
                "Is the weather nice in the morning?",
                "What will the weather be like at the beach?",
                "How many degrees is it in the afternoon?",
                "What time does dawn break tomorrow?",
                "Is it rainy in the afternoon?",
                "Is it very hot at night?",
                "What's the weather like this morning?",
                "What time is it in Mexico?",
                "Is the weather nice this morning?",
                "Is it warm or cold?",
                "How is the weather today?",
                "What is the weather like in the city?",
                "Is it hot in the morning?",
                "Is it going to snow today?",
                "What time is it in Argentina?",
                "Is it cloudy in the city?",
                "How many degrees is it in the morning?",
                "Is it cold in the afternoon?",
                "What time is it in Miami?",
                "Is it hot in the city?",
                "Is it cool today?",
                "Is it going to rain the next day?",
                "Is it cold in the afternoon?",
                "What time does it get dark?",
                "Is it hot in the coastal area?",
                "What is the exact time?",
                "Is it going to rain this weekend?",
                "Is the weather nice in the afternoon?",
                "Is it sunny in the afternoon?",
                "What time is it in Madrid?",
                "Is it cold or hot?",
                "How many degrees is it at the beach?",
                "Is it cloudy in the morning?",
                "What will the weather be like?",
                "Is it going to rain today?",
                "What time does it get light?",
                "What time will it be later?",
                "Is it hot on the beach?",
                "Is it clear in the afternoon?",
                "What time will it be in Italy?",
                "Is it raining at this time?",
                "Is it very hot on the beach?",
                "Is it cold at night?",
                "What time is it in the afternoon?",
                "What will the temperature be tomorrow?",
                "Is it cold in the morning?",
                "Is it going to rain tomorrow afternoon?",
                "What's the weather like at night?",
                "Is it going to rain this afternoon?",
                "How many degrees is it in the morning?",
                "Is the weather nice over there?",
                "Is it going to snow tomorrow afternoon?",
                "What's the weather like there?",
                "What will the temperature be today?",
                "Is it cloudy over there?",
                "Is it cold or hot this afternoon?",
                "What will the weather be like tomorrow?",
                "What time is it at noon?",
                "How's the weather?",
                "How many degrees is it in the afternoon?",
                "Is it going to rain this week?",
                "What will the weather be like tomorrow?",
                "What time will it be today?",
                "What time does it get dark?",
                "What does the weather look like?",
                "How is the day in the countryside?",
                "Is it going to rain tonight?",
                "What's the weather like tomorrow?",
                "Is it clear now?",
                "What time is it in Brazil?",
                "What does the weather look like today?",
                "How many degrees is it in this place?",
                "What is the weather like in the city?",
                "Is it hot or cold this morning?",
                "Is it going to snow today?",
                "What's the weather like over there?",
                "What time is it in Chile?",
                "What time is it in Japan?",
                "Is it raining in the city?",
                "Is it going to be cold in the afternoon?",
                "What will the weather be like today?"
            ],
            "responses": [
                "Sorry, I don't have access to the weather right now.",
                "I don't know the time, but it's always a good time to chat!",
                "I don't have access to the weather, but I hope you have a nice day!",
                "Sorry, I don't have any information about the weather.",
                "Sorry! I don't have access to the weather right now. But it's always nice to talk to you."
            ]
        },
        {
            "tag": "consultation_agradecimiento",
            "patterns": [
                "Thank you",
                "Thank you so much",
                "I apreciate it",
                "Thanks for your help",
                "Thank you so much",
                "Thank you very much",
                "I thank you",
                "Many thanks for everything",
                "I am very grateful to you",
                "Thank you with all my heart",
                "Thank you for everything you have done",
                "I am very grateful",
                "I really appreciate it",
                "Thank you for your time",
                "I really appreciate your help",
                "I am infinitely grateful to you",
                "I thank you very much",
                "I don't know how to thank you",
                "I thank you from the bottom of my heart",
                "Thank you for everything you have done for me",
                "Thanks for the support",
                "Thank you for being there",
                "I thank you for your help",
                "Thank you for your patience",
                "Thank you for your generosity",
                "I sincerely thank you",
                "I really appreciate your support",
                "Thanks a lot",
                "I thank you deeply",
                "Thank you for your understanding",
                "I appreciate you helping me",
                "Thank you for everything you do",
                "I thank you for being so kind",
                "Thank you for your solidarity",
                "Thank you for the help provided",
                "Thank you so much for your support",
                "I appreciate you listening to me.",
                "Thank you for being so understanding",
                "Thanks for the advice",
                "Thank you for all your effort",
                "Thank you so much for being so patient.",
                "Thanks for joining me on this",
                "I appreciate everything you do",
                "Thank you for your collaboration",
                "Thank you for your kindness",
                "I really appreciate your time",
                "Thank you for offering me your help",
                "Thank you for being so generous",
                "I thank you for your unconditional support",
                "I thank you for your sincerity",
                "Thank you for always being there",
                "Thank you very much for your effort",
                "Thank you for your dedication",
                "Thank you for your commitment",
                "I thank you for being so attentive.",
                "Thank you for your contribution",
                "Thank you for your dedication",
                "I thank you for your effort and dedication",
                "Thank you so much for everything you have done for me",
                "Thank you for your generosity and support",
                "I thank you for trusting me",
                "I thank you with all my heart for your help.",
                "Thank you for being so kind and considerate",
                "I thank you for your compassion",
                "Thank you for your time and patience",
                "Thank you for everything you have taught me",
                "I thank you for being by my side",
                "Thank you for your work and effort",
                "I deeply thank you for everything you have done.",
                "I thank you for always being willing to help.",
                "Thank you for your guidance",
                "Thank you for your kindness and patience",
                "Thank you very much for your constant support.",
                "I thank you for your tireless help",
                "Thank you for your understanding and patience.",
                "I thank you for your support during this time.",
                "Thank you for being there when I needed you most",
                "Thank you for everything you have done for me",
                "I thank you for not giving up on me",
                "Thank you for all your effort and dedication",
                "I thank you with all my heart for being by my side",
                "Thank you for helping me improve",
                "I thank you for your constant and sincere support.",
                "Thank you for giving me the opportunity to learn",
                "Thank you very much for your understanding.",
                "Thank you for your attention",
                "I appreciate your time and patience.",
                "Thank you for being so generous with me",
                "I thank you for everything you have done for us",
                "Thank you for supporting me at all times",
                "Thank you very much for your help",
                "Thank you for your wise words",
                "I thank you for your company",
                "Thank you for giving me your time",
                "I thank you for your willingness",
                "Thank you for always being there for me",
                "I thank you very much for everything you have done",
                "I thank you for being so understanding.",
                "Thank you for your kindness and patience",
                "I appreciate you being so generous with your time.",
                "I thank you for your constant support",
                "Thank you for making this possible",
                "I really appreciate your effort",
                "Thank you for your commitment and dedication",
                "I thank you for your work",
                "I thank you from the bottom of my heart for your support",
                "Thank you for your time and effort",
                "Thank you very much for everything",
                "Thank you for doing all this for me",
                "Thank you for your good heart",
                "I thank you for everything you have done for us",
                "I thank you for being so supportive.",
                "Thank you for your generosity and support",
                "I appreciate you being so considerate.",
                "Thank you for everything you have taught me",
                "I thank you for your kindness and for everything you do.",
                "I really appreciate you being here",
                "Thank you for your patience and support",
                "I thank you very much for everything you have given me.",
                "Thank you for your dedication and effort",
                "I thank you for being so constant",
                "Thank you for helping me at all times",
                "I thank you for everything you have contributed",
                "Thank you for your continued support",
                "I thank you very much for what you do for me",
                "I sincerely thank you for your dedication.",
                "Thank you for your unconditional support",
                "I thank you for sharing your time",
                "Thank you for your understanding and support",
                "I thank you for every step you have taken for me.",
                "I deeply appreciate you for all your efforts.",
                "Thank you for everything you do to make things go well.",
                "I thank you from the bottom of my heart",
                "Thank you very much for your time and for being so generous.",
                "Thank you for your generosity and patience",
                "I thank you for not giving up",
                "Thank you for being so generous",
                "I thank you for being so kind",
                "Thank you for all the effort you have put in",
                "I thank you for your wise words",
                "Thank you for your love and support",
                "I thank you for every opportunity",
                "Thank you for being such a great support to me",
                "Thank you very much for everything",
                "Thank you for being so attentive",
                "I thank you for being so understanding.",
                "Thank you for giving me your support",
                "I thank you for being so dedicated",
                "Thank you for your trust and support",
                "I thank you for always being available",
                "Thank you for your friendship",
                "I thank you for being my mentor",
                "Thank you for helping me grow",
                "I thank you for your sincere help",
                "Thank you for always being willing to help",
                "I thank you for your moral support",
                "Thank you for your effort",
                "I thank you for helping me in everything",
                "Thank you for your willingness",
                "I thank you for your good advice",
                "Thank you for always being by my side",
                "I thank you for your kindness",
                "Thank you for giving me the opportunity to learn",
                "I thank you very much for all your work",
                "Thank you for sharing your time with me",
                "I thank you for your positive attitude",
                "Thank you for always being there to support me",
                "Thank you very much for being so kind.",
                "Thank you for everything you do for me and others.",
                "I thank you for your unparalleled support",
                "Thank you for giving me your unconditional help",
                "I thank you for sharing your knowledge",
                "Thank you for your emotional support",
                "I thank you for being available when I needed you.",
                "Thank you for your sincerity",
                "I thank you for giving me the time I needed",
                "Thanks for the love",
                "I thank you for your empathy",
                "Thank you for your good judgment",
                "I thank you for your patience and for always being available.",
                "Thank you for always being so reliable",
                "I thank you for being a constant source of support."
            ],
            "responses": [
                "With pleasure!",
                "You are welcome!",
                "It's a pleasure to help you!",
                "Glad to help!",
                "It's a pleasure!",
                "With great pleasure!",
                "You're welcome! I'm always here to help!",
                "I'm glad I could help you!",
                "Gladly! Anything else, please feel free to ask."
            ]
        },
        {
            "tag": "consultation_no_reconocido",
            "patterns": [
                "frozen",
                "dog",
                "soccer",
                "any untrained word",
                "banana",
                "shoe",
                "keyboard",
                "beach",
                "vacation",
                "movie",
                "music",
                "rocket",
                "plane",
                "dinosaur",
                "book",
                "ball",
                "truck",
                "automobile",
                "television",
                "stone",
                "moon",
                "sun",
                "tree",
                "cat",
                "happy",
                "dark",
                "ray",
                "darling",
                "time",
                "women",
                "man",
                "family",
                "computer",
                "table",
                "chair",
                "washing machine",
                "car",
                "teddy",
                "fan",
                "clock",
                "mirror",
                "TV",
                "glasses",
                "light",
                "shirt",
                "pants",
                "jacket",
                "moon",
                "water",
                "movie",
                "sport",
                "soccer",
                "guitar",
                "paint",
                "code",
                "python"
            ],
            "responses": [
                "I'm sorry, I didn't understand you.",
                "I don't know how to answer that",
                "Could you rephrase the question?",
                "I don't have an answer for that",
                "I'm sorry, I don't know what you're talking about.",
                "I don't know what you're talking about",
                "Sorry, that word is not registered in my data.",
                "I have no answer for that word"
            ]
        },
        {
            "tag": "consultation_ayuda",
            "patterns": [
                "Can you help me?",
                "I need help",
                "How can I do this?",
                "What can you do for me?",
                "Help me please",
                "Can you help me?",
                "What should I do now?",
                "How can I fix this?",
                "I have a problem, help me",
                "I don't know what to do, help me",
                "Can you assist me?",
                "I need your help",
                "Can I count on you for this?",
                "What should I do?",
                "How can I fix this?",
                "Do you have any suggestions?",
                "Can you give me a hand with this?",
                "Do you have any advice?",
                "Help me with this",
                "I don't know where to start, help me",
                "How can I improve this?",
                "What should I do to move forward?",
                "Can you guide me?",
                "I don't understand well, can you help me?",
                "Can you explain to me how to do it?",
                "How can I achieve this?",
                "I need a quick solution",
                "Do you have any recommendations?",
                "Help please",
                "Can you give me a recommendation?",
                "What do I do now?",
                "I don't know what to do, can you help me?",
                "I don't understand, can you explain it to me?",
                "Can you explain better?",
                "Do you have any guide?",
                "How do I get started?",
                "I don't know what steps to follow, can you help me?",
                "Help me with this please",
                "I have a question, can you help me?",
                "How can I fix this problem?",
                "What steps should I follow?",
                "I have a question, can you help me?",
                "How can I improve this situation?",
                "Do you have any advice for me?",
                "I need you to guide me",
                "What else can I do?",
                "What can I try?",
                "How do you help me with this?",
                "What options do I have?",
                "What can I do next?",
                "Do you have any ideas?",
                "Can you tell me how to proceed?",
                "What options do I have to resolve this?",
                "How do I get started with this?",
                "Can you help me understand this?",
                "Can you guide me on what I should do?",
                "I don't know how to do it, can you help me?",
                "I'm not sure, can you guide me?",
                "Can you tell me the steps?",
                "What steps should I take to fix this?",
                "I'm not sure what to do, can you help me?",
                "I have a lot of questions, can you help me?",
                "How is this done?",
                "How can I make it easier?",
                "What should I do first?",
                "Is there an easy way to do this?",
                "Do you have any suggestions for me?",
                "Help, I don't know how to do it",
                "I don't understand anything, can you help me?",
                "How can I do it step by step?",
                "Do you have any instructions for this?",
                "How can I do this more efficiently?",
                "I need some help with this",
                "I have doubts about this, can you help me?",
                "How do I solve this problem?",
                "What can I do to improve?",
                "Help me understand this",
                "Can you explain the steps to me?",
                "I don't know where to start, can you guide me?",
                "How is this process done?",
                "I have some questions, can you help me resolve them?",
                "What should I do next?",
                "I don't know what to do next, can you help me?",
                "Can you help me with this process?",
                "I'm not sure what to do, can you help me?",
                "I don't understand, can you explain it to me again?",
                "I have many questions, can you help me?",
                "Please help me solve this",
                "Can you help me with the steps?",
                "I don't know if this is right, can you help me?",
                "I don't know if I'm doing it right, can you help me?",
                "How can I do it correctly?",
                "Can you tell me what to do?",
                "Help me know what to do",
                "How can I get started?"
            ],
            "responses": [
                "Sure, how can I help you?",
                "I'm here to help you, what do you need?",
                "Of course, how can I help you?",
                "I'm ready to help you! What do you need?",
                "Sure, tell me what problem you have and I'll help you.",
                "I'm here for you, how can I help you?",
                "Of course! How can I help you with that?",
                "Sure, tell me how I can help you.",
                "No problem, what do you need?",
                "I'll help you with that, how can I help you?",
                "Gladly! How can I help you?",
                "I'm ready to help you, what do you need?",
                "Sure, what doubts do you have?",
                "What problem do you have? I'm here to help you",
                "Don't worry, I'll help you with that.",
                "I'm here for whatever you need",
                "Let me help you with that, what do you need?",
                "Gladly! Let me know how I can help you.",
                "How can I help you solve this?",
                "I'm here to make things easier for you",
                "I will help you, don't worry.",
                "Tell me what you need and I'll help you",
                "Let me know how I can help you",
                "I am at your disposal!",
                "Count on me, how can I help you?",
                "Sure, I can guide you with that.",
                "Don't worry, we'll solve it together.",
                "Let's do it together! How can I help you?",
                "Tell me the details and I'll help you solve it.",
                "I can help you with that, just tell me how.",
                "Gladly, what do you need to do?",
                "I'll explain everything to you step by step, just tell me what you need.",
                "I'll help you with that, how can I assist you?",
                "Don't worry, I'll explain it to you!",
                "I'm here to guide you",
                "I will help you understand how to do it",
                "Let's go step by step! What do you need?",
                "Tell me how I can help you, I'm ready!",
                "Sure, you just have to follow these steps",
                "I will guide you through the process",
                "Don't worry, I'll gladly explain it to you.",
                "I'm here to help you with whatever you need",
                "We'll figure it out, tell me what you need to do.",
                "I'll explain how to do it",
                "Just tell me what you need, I'll help you!",
                "I'm here to support you with everything!",
                "I'm here for whatever you need, just tell me how I can help you.",
                "Don't worry, I'll be with you throughout the process.",
                "I'm here to answer your questions",
                "Tell me how I can help you, I will guide you step by step!"
            ]
        },
        {
            "tag": "consultation_informacion_general_bot",
            "patterns": [
                "Who are you?",
                "What are you?",
                "What can you do?",
                "What is your name?",
                "Who is talking to me?",
                "How can you help me?",
                "What can you do for me?",
                "How does this work?",
                "What can you do?",
                "What are you good for?",
                "What services do you offer?",
                "Can you help me?",
                "What tasks can you perform?",
                "Do you have any purpose?",
                "How can you assist me?",
                "How can you help me?",
                "Why should I talk to you?",
                "What are your duties?",
                "What is this chat about?",
                "How can I interact with you?",
                "Can you do something for me?",
                "What is your goal?",
                "What services do you provide?",
                "Can you answer me?",
                "Are you a bot?",
                "Are you an artificial intelligence?",
                "How do you help me?",
                "What are you designed for?",
                "Do you have a name?",
                "Who is answering me?",
                "How smart are you?",
                "How can you help me with my problem?",
                "How useful are you?",
                "Can you help me with anything?",
                "How does this chatbot work?",
                "What is your purpose?",
                "Can you chat with me?",
                "How can you help me?",
                "Who is behind you?",
                "What exactly can you do?",
                "Do you have any functions?",
                "What kind of things can you do?",
                "Why can I trust you?",
                "What tasks can you help me with?",
                "What tasks do you perform?",
                "How can you make my life easier?",
                "What do you specialize in?",
                "What are your skills?",
                "Can you do something for me?",
                "What kind of questions can you answer?",
                "Can you do things for me?",
                "How much do you know?",
                "How can you help me solve problems?",
                "Are you able to do everything?",
                "What exactly can you do?",
                "Can you help me with anything?",
                "What are your capabilities?",
                "How do you interact with people?",
                "What kind of things can you help me with?",
                "Can you help me understand something?",
                "What is your main function?",
                "How can you help me?",
                "What kind of answers can you give?",
                "Can you do searches?",
                "Can you help me with my doubts?",
                "Can you do simple tasks?",
                "Can you explain something to me?",
                "How can you help me in my daily life?",
                "What skills do you have?",
                "Are you just a virtual assistant?",
                "How helpful are you in specific situations?",
                "What can you do with my data?",
                "Can you learn new things?",
                "Do you have a particular purpose?",
                "How can I interact with you?",
                "Are you qualified for everything?",
                "Do you know everything I need?",
                "What topics can you cover?",
                "How good are you at resolving doubts?",
                "Can you answer complex questions?",
                "How can I get more help from you?",
                "Are you programmed for all kinds of questions?",
                "Can I ask you anything?",
                "Do you have any limits?",
                "What are the topics you master?",
                "Do you have knowledge in all subjects?",
                "What happens if you don't know something?",
                "Can you do more difficult tasks?",
                "Can you guide me on how to use something?",
                "How do you assist me?",
                "How quickly can you help me?",
                "How accurate are you?",
                "Are you helpful for general questions?",
                "Do you have any specialty?",
                "Can you learn from my questions?",
                "What are the differences between you and a chatbot?",
                "Can I trust what you say?",
                "Why should I talk to you?",
                "What can you do with the information I give you?",
                "How can you help me with my homework?",
                "What can you do for me?",
                "Can you help me organize my things?",
                "Do you have any relationship with Google?",
                "How good are you at helping me solve problems?",
                "How long can I talk to you?",
                "Do you know how to manage my tasks?",
                "Can you make calls or something?",
                "What is your main goal?",
                "How are you different from other bots?",
                "How useful is your help?",
                "How can I benefit from your answers?",
                "Can I ask you for advice?",
                "Can you give me some recommendations?",
                "How can you guide me?",
                "What skills do you have to help me?",
                "Can you understand everything I'm telling you?",
                "Do you know how to resolve technical questions?",
                "Can you guide me in my studies?",
                "What do you specialize in?",
                "Can I talk to you about anything?",
                "What can you do when you don't know the answer?",
                "Are you ready to answer tough questions?",
                "How do you help me with complex issues?",
                "Do you know everything you need to help me?",
                "What are your best skills?",
                "Can you adapt to what I ask of you?",
                "Do you know how to solve technical problems?",
                "Can you teach me something?",
                "Can you help me do some research?",
                "Can you do my homework?",
                "How do you know what to answer?",
                "Why can you help me?",
                "How do you know what kind of help to offer?",
                "Do you know what's important to me?",
                "What specific tasks can you perform?",
                "Does what I'm telling you help you?",
                "Can you give me precise information?",
                "Do you know how to do things for me?",
                "Were you trained to answer questions?",
                "What do you take into account when giving an answer?",
                "Can you teach me something new?",
                "Do you know how to resolve my doubts?"
            ],
            "responses": [
                "I am a chatbot designed to help you with your questions",
                "I am a virtual assistant who can answer questions",
                "I can help you with simple questions and some homework.",
                "I am an artificial intelligence system trained to answer your questions",
                "I am a bot created to help you with various things",
                "I'm here to help you with whatever you need",
                "I am a chatbot capable of answering your questions and helping you with whatever you need.",
                "I am a smart assistant to make simple tasks easier for you",
                "I can help you with questions related to various topics",
                "I am your virtual assistant, ready to help you",
                "I am a bot created to offer you quick answers",
                "I can help you with whatever you need, just ask.",
                "I am an automated system to solve your doubts",
                "You can ask me whatever you want, I will help you as best as I can.",
                "My purpose is to help you with useful information",
                "I'm here to assist you with any questions.",
                "I am an artificial intelligence that can learn and help you",
                "I am a virtual assistant who will guide you with your questions",
                "I can help you solve your doubts and simple tasks",
                "I am designed to answer your questions and help you with your problems.",
                "My job is to provide you with quick and accurate answers.",
                "I am a virtual assistant available 24 hours a day",
                "I'm here to offer you information, answer questions and help you.",
                "I am your online assistant, always ready to help you.",
                "I can help you with any questions you have, just ask.",
                "I am an AI created to help you find what you need",
                "I'm here to make your tasks easier",
                "I can offer you useful information quickly",
                "My role is to help you with various questions",
                "I am a chatbot designed to solve basic problems",
                "I can help you with different types of information",
                "I help you with simple and quick things",
                "My goal is to make your life easier with quick answers.",
                "I am your personal assistant to resolve doubts",
                "I can give you information on various topics, just ask me.",
                "I'm here to help you solve any problem",
                "My purpose is to help you get information and answers",
                "I am an artificial intelligence to answer your questions",
                "I can help you with general issues and more",
                "I'm a bot made to help you solve problems",
                "I can answer your questions quickly and accurately.",
                "I am an assistant created to make tasks easier for you",
                "I offer you quick and useful answers",
                "I am a tool to offer you the information you need",
                "I'm here to help you with whatever you need",
                "I can give you answers to frequently asked questions and more.",
                "My mission is to provide you with quick and useful answers.",
                "I am a virtual assistant created to offer solutions",
                "I help you find quick and useful information"
            ]
        },
        {
            "tag": "consultation_salud",
            "patterns": [
                "How are you?",
                "How are you feeling?",
                "How's everything going?",
                "How are you?",
                "How do you feel?",
                "All good?",
                "How was your day?",
                "How's life going?",
                "How's it going?",
                "How do you feel today?",
                "How are you spending your day?",
                "Everything in order?",
                "How was your day?",
                "How are you feeling today?",
                "Are you OK?",
                "Everything quiet?",
                "How's the day going?",
                "How is your day?",
                "How's that going for you?",
                "How was your day today?",
                "How are you right now?",
                "How's everything going over there?",
                "How did it go?",
                "How are you feeling?",
                "How are you doing today?",
                "How's everything going on your end?",
                "How do you feel about all this?",
                "Are you okay?",
                "Everything okay there?",
                "How are you doing overall?",
                "How's everything going here?",
                "Everything quiet over there?",
                "How's your week going?",
                "How are things going?",
                "How has your day been?",
                "Everything in order there?",
                "How's the weekend going?",
                "How is the family?",
                "How is everything on your side?",
                "How is your health?",
                "How are you feeling today in general?",
                "How's everything going with you?",
                "How is your mood?",
                "Are you feeling okay?",
                "How is your day so far?",
                "Everything okay on your day?",
                "Are you feeling relaxed?",
                "Is everything in order in your life?",
                "How do you feel right now?",
                "Everything under control?",
                "How's everything going over there?",
                "Is everything okay with your family?",
                "How are you doing on a personal level?",
                "How was your day today?",
                "Are you feeling energetic?",
                "Everything quiet today?",
                "How is everything going in your world?",
                "Do you feel relaxed?",
                "How did your day go?",
                "How's life going today?",
                "How are you doing with the projects?",
                "Everything under control on your part?",
                "How's everything going at work?",
                "How is your health?",
                "Are you healthy?",
                "Do you feel rested?",
                "Everything okay with your energy?",
                "Are you feeling rested?",
                "Everything quiet today?",
                "How does your health look?",
                "How are you doing with stress?",
                "Everything quiet at work?",
                "How are you spending the week?",
                "How are you doing with the pace of life?",
                "Are you balanced?",
                "How is everything going in your world?",
                "How do you feel after so much work?",
                "Are you in good spirits?",
                "How is your mental health?",
                "How is your well-being?",
                "Is everything okay with your health?",
                "Have you been feeling healthy lately?",
                "How is everything going in your body?",
                "Is everything okay with your physical condition?",
                "Are you in good health?",
                "Are you taking care of your health?",
                "Are you feeling energetic?",
                "How is your body today?",
                "Do you feel strong?",
                "How's everything going inside?",
                "Are you feeling tired?",
                "Are you feeling energetic?",
                "What does your well-being look like?",
                "Are you feeling exhausted?",
                "How is your mood?",
                "Are you feeling motivated?",
                "How is your emotional balance?",
                "Everything is calm in your mind?",
                "Have you felt rested?",
                "How is your physical health?",
                "Are you feeling well emotionally?",
                "Do you feel renewed?",
                "How do you feel about work?",
                "How is your mind?",
                "Are you mentally rested?",
                "How are things going with your emotions?",
                "Are you living a balanced life?",
                "How do you feel physically?",
                "Is everything okay with your mental health?",
                "Are you balanced?",
                "How is your emotional health?",
                "How are you with your emotions?",
                "Do you feel relaxed?",
                "How is everything going emotionally?",
                "Are you feeling well psychologically?",
                "How's everything going in your mind?",
                "Do you feel happy?",
                "Are you emotionally stable?",
                "Is everything at peace with your mind?",
                "Are you feeling positive?",
                "What does your emotional state look like?",
                "Are you emotionally balanced?",
                "Do you feel full of energy?",
                "How is your life balance?",
                "Everything okay with your emotions?",
                "Are you satisfied?",
                "Are you feeling stress-free?",
                "Is everything okay with your mental well-being?",
                "What does your emotional well-being look like?",
                "How is everything going inside you?",
                "Are you stress-free?",
                "Are you feeling encouraged?",
                "Are you motivated?",
                "How is your energy?",
                "How is your overall well-being?",
                "Do you feel mentally relaxed?",
                "Are you in good shape?",
                "Do you feel active?",
                "How is your motivation?",
                "How is your energy today?",
                "Are you in good spirits?",
                "Are you feeling exhausted?",
                "How is your physical and mental health?",
                "Is everything okay with your physical condition?",
                "How is your mood?",
                "Do you feel calm?",
                "Do you feel balanced today?",
                "How are you doing in terms of well-being?",
                "Is everything okay with your body and mind?",
                "Do you feel energetic?",
                "Are you feeling rested today?"
            ],
            "responses": [
                "I'm fine, thanks for asking.",
                "I feel great, how about you?",
                "Everything is perfect, and you?",
                "I'm doing great, how are you?",
                "I feel great, how about you?",
                "All quiet here",
                "Everything is fine, thank you.",
                "I'm fine, and how are you?",
                "I feel great, how about you?",
                "I'm in perfect condition",
                "Everything is fine on my side, thank you.",
                "I'm fine, and how are you?",
                "Thanks for asking, I'm doing great",
                "Everything is fine here, how are you?",
                "I'm pretty good, thanks.",
                "Everything is quiet here, and you?",
                "I feel fine, thank you.",
                "All good thanks",
                "Everything is calm and fine on my part.",
                "Thanks for asking, I feel great.",
                "Everything is fine, thank you.",
                "All calm, thanks",
                "I feel great, thank you",
                "All good here",
                "Thank you, I feel very well",
                "I feel good, and you?",
                "Everything is going perfectly",
                "Thanks, everything is quiet here.",
                "I'm doing great, thanks for asking.",
                "Everything is fine, thank you.",
                "Everything is perfect, and you?",
                "Everything is going great here",
                "I'm fine, thank you.",
                "I feel good, and you?",
                "All calm, thanks",
                "I feel good, and you?",
                "All good on my part",
                "Everything is perfect, thanks for asking.",
                "I'm good and you?",
                "I'm in good shape, thanks.",
                "I feel very energetic",
                "All good here",
                "Thank you, everything is fine",
                "Everything is excellent on my part",
                "Thanks for asking, all calm",
                "Everything is perfect, and you?",
                "I feel very energetic",
                "Everything is fine, thanks for asking.",
                "I'm fine, thanks for asking."
            ]
        },
        {
            "tag": "consultation_feedback",
            "patterns": [
                "I like",
                "I don't like",
                "Good job",
                "Excellent",
                "It was not helpful",
                "I didn't like it",
                "It was very helpful",
                "Thank you, you helped me a lot",
                "Excellent response",
                "I loved it",
                "Very good",
                "Very useful",
                "It wasn't bad",
                "You helped me a lot",
                "It was all clear",
                "The answer was not helpful",
                "Thanks for the help",
                "Can you help me better?",
                "It was a correct answer",
                "Very good",
                "I liked it a lot",
                "It wasn't what I expected",
                "Very useful information",
                "It didn't help me",
                "I couldn't understand the answer",
                "Very bad answer",
                "The response was good",
                "They did not resolve my doubt",
                "The answer was helpful",
                "I am satisfied with the answer",
                "I'm not convinced by the answer",
                "Could you improve this?",
                "Very clear answer",
                "Thanks, it was helpful",
                "That was very helpful",
                "I don't know if it helped me much",
                "It wasn't what I expected",
                "The answer was unclear",
                "The response was very quick.",
                "You didn't help me in what I expected",
                "Can you explain a little more?",
                "I'm not sure of the answer",
                "I was confused with the answer",
                "I was left with more doubts",
                "You explained it well, thank you.",
                "Could you give me more details?",
                "Thanks, but I'm not entirely sure.",
                "Excellent explanation",
                "Thanks for your help, although it wasn't what I expected.",
                "It wasn't as helpful as I thought",
                "Nice try, but it wasn't enough",
                "Thanks for trying",
                "You helped me, but it could be better",
                "I liked the answer",
                "I didn't understand the answer",
                "Good service, but can improve",
                "Very well explained",
                "Excellent, but something was missing",
                "The answer was half-hearted",
                "I like how you explain",
                "I didn't quite understand the solution.",
                "It was more or less useful",
                "The information was not enough",
                "Excellent, but I need more details",
                "It wasn't exactly what I was looking for",
                "It was good, but I can look for more",
                "Very useful, thanks",
                "It wasn't so clear",
                "It was clear, thank you.",
                "Thank you, although not everything was clear",
                "Good job, but I may need more details",
                "It was great, but can you give more information?",
                "I still have doubts, but it was good",
                "I wasn't sure what you said",
                "The answer was very general",
                "That helps me, but I want to know more",
                "The answer was a bit vague.",
                "It's not clear what you said.",
                "What you said was good, but I want more details.",
                "I feel confused by the answer",
                "Very good, but better if you give me more examples",
                "Good, but you can improve the explanation",
                "What you told me is clear",
                "It helped me a little",
                "It was a good explanation",
                "It wasn't exactly what I needed",
                "You gave me a good answer, but it wasn't my question.",
                "Could you be more specific?",
                "The answer was good, but not so clear",
                "I understand, but I want more details.",
                "What you said helped me a lot.",
                "You helped me, but I need more examples",
                "The answer was a little confusing",
                "Thank you, but I need more information.",
                "It wasn't what I expected",
                "Thank you, it was clear and helpful.",
                "Could you give me more details?",
                "I would like a deeper explanation",
                "Thanks, but I'm not entirely convinced.",
                "Thank you, but I have more questions.",
                "The answer was a little difficult to understand",
                "Thank you, the answer was direct",
                "That was good, but I need more",
                "It was clear, but I want more examples",
                "Thank you, but I want to know more",
                "Very good explanation",
                "The answer was good",
                "You didn't give me everything I wanted",
                "That wasn't what I expected",
                "Could you be more clear?",
                "Thanks for the help, but I need more details.",
                "Could you make the answer more detailed?",
                "It was helpful, but I want more information",
                "I am satisfied, although there are areas for improvement.",
                "Thanks, but I need more details.",
                "I was not entirely convinced",
                "Your answer was adequate, but it could be improved.",
                "What you said was helpful, but I didn't fully understand it.",
                "The information was adequate, but I need more",
                "I agree with what you told me.",
                "Can you be more clear with the answer?",
                "Thanks for the reply, although it wasn't exactly what I wanted.",
                "The answer was helpful, but not complete.",
                "That helps me, but it doesn't solve everything.",
                "Excellent answer, but I want to know more",
                "Good job, but I still have doubts",
                "The response was very good",
                "Thanks, you solved half of my doubts.",
                "Well done, but I want more examples",
                "The explanation was good.",
                "Excellent, but I would like more details",
                "Nice try, but I have a question.",
                "Thanks, that fixed it, but can you clarify anything else?",
                "Your explanation was clear.",
                "Thanks, it was helpful, but I still have questions.",
                "It was clear, but I need practical examples",
                "Thank you, but I need more details.",
                "It was quite useful",
                "Thank you, but I would like more information.",
                "It was okay, but it wasn't what I expected.",
                "The information was good, but I want more details",
                "Thanks, but that wasn't what I was looking for.",
                "Thank you, but I have more questions.",
                "You explained it well, but I want to know more.",
                "It was good, but there is a lack of information.",
                "Thanks for the reply, but I have some doubts.",
                "It was helpful, but I want you to explain it further.",
                "I was left with more doubts, but thanks",
                "That was good, but I would like more details.",
                "Thanks for the clear answer",
                "It was a good answer, but I need more examples.",
                "Thank you, that's what I needed",
                "It was good, but I still have more questions",
                "The answer was clear, thank you.",
                "It wasn't what I thought, but it was good.",
                "Thanks, but I want more examples",
                "That was very clear, thank you.",
                "You helped me, but I need more details",
                "It was helpful, but I want more examples",
                "You helped me, but I didn't solve my doubt",
                "It was a helpful response",
                "Thank you, but I want more details.",
                "I understand, but I want examples",
                "The answer was accurate, but I want more details.",
                "It was enough, thank you.",
                "Thanks for the help, but it wasn't what I was looking for.",
                "It wasn't exactly what I thought",
                "You explained it well, but I want more details.",
                "I'm not completely satisfied",
                "Thanks for the reply, but I have some doubts.",
                "The information was useful, but not enough",
                "The answer was adequate, but I need more examples.",
                "You helped me, but I would like more details",
                "That was helpful, but not complete.",
                "The response was good",
                "That was good, but I want more practical examples.",
                "You gave me a good answer, but I want to know more.",
                "It was helpful, but I want examples",
                "It was good, but something is missing"
            ],
            "responses": [
                "Thanks for your feedback, I will take it into account.",
                "I appreciate your comment, I will do my best to improve.",
                "Thanks, I'm glad it was helpful to you.",
                "Thank you for your comments, I will take them into account.",
                "Thanks, I'll try to improve my answer.",
                "I really appreciate your opinion.",
                "Thanks, I'll keep working on it.",
                "Thanks for your feedback, I will take it into account.",
                "I appreciate the feedback",
                "Thanks, I'm glad to hear it was helpful.",
                "I appreciate your comments",
                "Thanks, I'll try to do better next time.",
                "Thank you, I hope I can continue helping you.",
                "Thank you, I will take your comment into account.",
                "I'm glad it was helpful, thanks",
                "Thanks for saying that, I'll keep improving!",
                "Thanks for the suggestion, I will take it into account.",
                "Thank you for sharing your opinion",
                "Thank you, I will continue to improve it.",
                "Thanks, I'll keep that in mind for future answers.",
                "Thank you, I hope I can offer you better help next time.",
                "Thanks for the suggestion",
                "I appreciate you saying that, I will try to improve.",
                "Thank you for your words, I will continue working to give you better answers.",
                "Thank you, I hope it will be even more useful next time.",
                "I appreciate your feedback, I'll keep working on it!",
                "Thanks for the feedback, I will try harder.",
                "I appreciate your opinion, I will take it into account to improve.",
                "Thank you, I will continue to improve.",
                "Thank you, I will take your opinion into account.",
                "I appreciate your comments, I will improve on the next one!",
                "I appreciate you taking the time to give me your opinion.",
                "Thanks for commenting, I will improve further!"
            ]
        },
        {
            "tag": "consultation_chistes",
            "patterns": [
                "Tell me a joke",
                "Can you tell me a joke?",
                "Tell me a joke",
                "Tell me something funny",
                "Make me laugh",
                "Do you know any jokes?",
                "Tell me a short joke",
                "Do you have any jokes?",
                "Tell me something funny",
                "How about a joke?",
                "Do you have any stories?",
                "Tell me a story",
                "Can you tell me a joke?",
                "Make me laugh with a joke",
                "Do you know any good jokes?",
                "Tell me a short story",
                "Can you tell me a joke?"
            ],
            "responses": [
                "Sure, why don't birds use Facebook? Because they already have Twitter.",
                "What is the worst thing for an electrician? Not finding his current work.",
                "Do you know what a gardener's worst experience is? Being left hanging all the time.",
                "Why was the math book sad? Because it had too many problems.",
                "What is the limit for an astronaut? Having space problems.",
                "Why can't cats tell jokes? Because they always purr at the best moments.",
                "What did one worm say to another worm? I'm going to take a walk around the block!",
                "Why don't birds use Facebook? Because they already have Twitter.",
                "What is the worst thing a tailor can do? Losing the thread of the conversation.",
                "What do you call a magic dog? A Labrador Retriever.",
                "Did you know that the sun never gets sad? Because it always has a bright day.",
                "A man goes to the doctor and says, ‘Doctor, I have pain all over my body.’ The doctor replies, ‘Have you tried not touching yourself?’",
                "What is the funniest animal? The penguin, because it is always the center of attention.",
                "Do you know why vampires don't have friends? Because they're always sucking energy.",
                "What is the worst thing for a photographer? Not finding the right image.",
                "A child says to his mother: ‘Mom, mom, at school they call me mirror.’ The mother asks him: ‘And what do you say to them?’ The child answers: ‘Nothing, I stay quiet.’",
                "Why can't the tomato work? Because it decomposes.",
                "What do you call a dog without legs? It doesn't matter what it's called, because it's not going to come.",
                "A man says to his friend, ‘I have an idea for a joke.’ The friend replies, ‘Oh, yeah? Tell me about it.’ The man replies, ‘No, no, it’s just an idea, it’s not ready yet.’",
                "What do you call a dog that does magic? Labracadabrador.",
                "Why don't cows use the Internet? Because they don't know how to connect the cow to the PC.",
                "What is the hardest working animal? The bee, because it is always on the move."
            ]
        },
        {
            "tag": "consultation_academicas",
            "patterns": [
                "What subjects are taught in the first semester?",
                "What do you learn in a systems engineering degree?",
                "What are the topics covered by systems engineering?"
            ],
            "responses": [
                "In the first semester, subjects such as mathematics, basic programming, and computer science fundamentals are taught.",
                "The systems engineering degree covers topics such as software development, networks, computer security and databases.",
                "In the first years you will learn about programming languages, data structures and networks."
            ]
        },
        {
            "tag": "consultation_lenguajes_programacion",
            "patterns": [
                "What programming languages ​​are taught?",
                "Do we learn Java in this course?",
                "Is Python taught?"
            ],
            "responses": [
                "Several programming languages ​​are taught, including Java, Python, C++, and more.",
                "The curriculum includes Java, Python and other important languages ​​for software development.",
                "In the course you will learn Python, Java and also other languages ​​such as C and C++."
            ]
        },
        {
            "tag": "proyectos_educativos",
            "patterns": [
                "What kind of projects can I do in my degree?",
                "Are there practical assignments?",
                "What projects can I develop during my degree?"
            ],
            "responses": [
                "You can create software projects, mobile applications, web pages and database systems.",
                "Throughout your degree, you will undertake projects involving web applications, software development and databases.",
                "The course includes practical projects such as mobile applications and information management systems."
            ]
        },
        {
            "tag": "consultation_oportunidades_laborales",
            "patterns": [
                "What jobs can I get with this degree?",
                "How much does a systems engineer earn?",
                "Where can I work after graduation?"
            ],
            "responses": [
                "With a degree in systems engineering, you can work in technology companies, software development, network administration, and more.",
                "The average salary for a systems engineer varies, but can range from $20,000 to $40,000 per year depending on experience.",
                "You can work in technology companies, in the banking sector, in telecommunications or as a freelance developer."
            ]
        },
        {
            "tag": "consultation_especializaciones",
            "patterns": [
                "What can I specialize in within my degree?",
                "Are there specialties within systems engineering?",
                "How can I specialize in artificial intelligence?"
            ],
            "responses": [
                "You can specialize in areas such as artificial intelligence, cybersecurity, software development or databases.",
                "The program offers several specializations such as artificial intelligence, data science and computer security.",
                "A specialization in artificial intelligence will allow you to work on advanced machine learning and neural network projects."
            ]
        },
        {
            "tag": "consultation_redes_informaticas",
            "patterns": [
                "What is a computer network?",
                "Do you learn to configure networks?",
                "How do you manage networks in your career?"
            ],
            "responses": [
                "In this course you will learn about computer networks, network configuration and server administration.",
                "You will be taught how to manage computer networks, configure routers and switches, as well as administer servers.",
                "Computer networks are an essential component of the degree, and you will learn about their installation, configuration, and security."
            ]
        },
        {
            "tag": "consultation_bases_de_datos",
            "patterns": [
                "What are databases?",
                "How to manage a database?",
                "What is SQL?"
            ],
            "responses": [
                "Databases are organized data systems that are managed with tools such as MySQL, PostgreSQL or MongoDB.",
                "You will learn how to manage databases, design schemas, perform SQL queries and optimize their performance.",
                "SQL is a language used to manage databases and perform operations such as queries, inserts and updates."
            ]
        },
        {
            "tag": "inteligencia_artificial",
            "patterns": [
                "What is artificial intelligence?",
                "Is AI studied in systems engineering?",
                "How is artificial intelligence applied in projects?"
            ],
            "responses": [
                "Artificial intelligence is a branch of computer science that is dedicated to the creation of systems that imitate human intelligence.",
                "Yes, artificial intelligence is studied in the degree and is used in areas such as machine learning, computer vision and automation.",
                "In AI projects, algorithms and models are applied to solve complex problems, such as data prediction and pattern recognition."
            ]
        },
        {
            "tag": "consultation_ciberseguridad",
            "patterns": [
                "What is cybersecurity?",
                "How to protect personal data?",
                "What is studied about cybersecurity?"
            ],
            "responses": [
                "Cybersecurity is the practice of protecting computer systems and networks from attacks, unauthorized access and damage.",
                "The course teaches how to protect computer systems, detect vulnerabilities and manage security in networks and databases.",
                "Techniques for data protection, encryption, authentication, and prevention of attacks such as ethical hacking are studied."
            ]
        },
        {
            "tag": "consultation_generales",
            "patterns": [
                "What is systems engineering?",
                "What does it take to study systems engineering?",
                "What careers are related to systems engineering?"
            ],
            "responses": [
                "Systems Engineering is a degree that focuses on the design, development, implementation and management of computer systems and networks.",
                "To study Systems Engineering, you need to have basic knowledge in mathematics, programming and computing.",
                "Related careers include software engineering, computer science, networking and telecommunications."
            ]
        },
        {
            "tag": "consultation_software",
            "patterns": [
                "What programs do we use to develop software?",
                "Which IDEs are recommended?",
                "What is the best code editor?",
                "Is Visual Studio taught in this degree?",
                "What software do we need for programming?",
                "Is it important to learn how to use Git?",
                "How to set up a development environment?",
                "What development tools are essential?"
            ],
            "responses": [
                "Tools such as Visual Studio Code, Eclipse, and NetBeans are used to develop software.",
                "Recommended editors are Visual Studio Code, IntelliJ IDEA, and Sublime Text.",
                "Git is a fundamental tool for source code management, and yes, it is taught in the degree.",
                "We will teach you how to configure development environments with tools such as Docker, Vagrant and VirtualBox.",
                "The main programs used in development are IDEs such as Visual Studio, Eclipse and version control tools such as Git."
            ]
        },
        {
            "tag": "consultation_tecnologia",
            "patterns": [
                "What are the latest technologies in programming?",
                "What new trends are there in software development?",
                "How is artificial intelligence changing the industry?",
                "What is mobile app development?",
                "What is the future of programming?",
                "How do new technologies affect computer systems?"
            ],
            "responses": [
                "Some of the latest technologies are artificial intelligence, machine learning, blockchain and cloud computing.",
                "Recent trends include the use of AI, cloud computing and the development of software for mobile devices.",
                "Artificial intelligence is revolutionizing automation, data analysis and user interaction.",
                "Mobile app development is the process of creating applications for devices such as smartphones and tablets.",
                "The future of programming includes artificial intelligence, code automation, and the use of functional languages."
            ]
        },
        {
            "tag": "consultation_caracteristicas_profesor",
            "patterns": [
                "What characteristics should a good systems engineering professor have?",
                "What are the teachers like in this course?",
                "What kind of methodologies do teachers use?",
                "Do you focus on practical or theoretical teaching?",
                "Are teachers accessible outside of class?"
            ],
            "responses": [
                "A good systems engineering teacher should be approachable, have practical knowledge and communication skills.",
                "Professors in this program typically have a good combination of academic and professional experience in technology.",
                "Teachers use active methodologies, focusing on real industry problems and the use of current technologies.",
                "They focus on practical learning, but also provide a solid theoretical foundation for understanding fundamental concepts.",
                "Yes, teachers are available outside of class to answer questions and help with projects."
            ]
        },
        {
            "tag": "consultation_extracurriculares",
            "patterns": [
                "What extracurricular activities can be done in systems engineering?",
                "Are there robotics clubs in the program?",
                "Can I participate in hackathons?",
                "Are there any programming events?",
                "Are there opportunities for volunteering?"
            ],
            "responses": [
                "You can participate in hackathons, technology fairs, conferences and workshops related to computing.",
                "Yes, there are several robotics and software development clubs where you can join to learn and compete.",
                "Yes, hackathons are very popular and you can participate in events organized by universities or companies.",
                "There are many events such as conferences, webinars, and programming competitions that help you expand your professional network.",
                "In addition to events, there are also volunteer opportunities in technology projects and education-related NGOs."
            ]
        },
        {
            "tag": "consultation_bibliografia",
            "patterns": [
                "What books can I read to improve my programming skills?",
                "Is there any recommended bibliography?",
                "What are the best resources for learning about databases?",
                "Where can I find good tutorials on artificial intelligence?",
                "What resources do you recommend for further study about networks?"
            ],
            "responses": [
                "To learn more about programming, I recommend books like 'Clean Code' by Robert C. Martin and 'Eloquent JavaScript'.",
                "There are several books and online resources, for example, 'Introduction to Algorithms' for data structures and 'Design Patterns'.",
                "You can find tutorials on sites like Coursera, edX, and books like 'Database System Concepts'.",
                "For AI, I suggest 'Hands-On Machine Learning with Scikit-Learn, Keras, and TensorFlow'.",
                "For networking, you can study the book 'Computer Networking: A Top-Down Approach'."
            ]
        },
        {
            "tag": "consultation_proyectos_finales",
            "patterns": [
                "What is a final project in systems engineering?",
                "How do I prepare for the final project?",
                "What types of final projects are common in this degree?",
                "Is it necessary to do research work?",
                "What requirements must I meet to present my final project?"
            ],
            "responses": [
                "The final project is an opportunity to demonstrate the knowledge acquired during the degree, often involving the creation of software or a system.",
                "For the degree project, you must prepare a proposal, follow a development methodology and present results in a report and presentation.",
                "Final projects typically involve building web applications, database management systems, or cybersecurity projects.",
                "Yes, some final projects require a research component, depending on the specialization.",
                "To present the final project, you must meet the requirements established by the program, such as submitting a complete report and defending it before a tribunal."
            ]
        },
        {
            "tag": "consultation_tiempos_de_estudio",
            "patterns": [
                "How many hours a day do you need to study for this degree?",
                "Is a career in systems engineering difficult?",
                "How can I organize my study time?",
                "How demanding is this career?",
                "How many hours of study per week are required?"
            ],
            "responses": [
                "Study time depends on the semester, but on average it is recommended to dedicate between 3 to 4 hours a day to the subjects.",
                "The course has a significant workload, but with good organization you can manage the subjects.",
                "Good organization is key. Use schedules, set priorities and don't leave everything to the last minute.",
                "It is a challenging career, but if you are passionate about computers, you will find it very rewarding.",
                "It is recommended to study at least 15-20 hours per week, depending on exams and projects."
            ]
        },
        {
            "tag": "consultation_nivel_de_dificultad",
            "patterns": [
                "Is it difficult to study systems engineering?",
                "How complicated is the race?",
                "How can I pass difficult subjects?",
                "Which subjects are the most difficult?",
                "Is it a demanding career?"
            ],
            "responses": [
                "The race can be challenging, but with dedication and organization, you can succeed.",
                "Some subjects like math, algorithms, and data structures can be difficult, but they are essential for development.",
                "To pass difficult subjects, I recommend studying in advance, attending classes, and practicing a lot.",
                "The most difficult subjects tend to be those involving advanced programming and mathematics, but with practice everything improves.",
                "Yes, it is a demanding career, but the satisfaction of solving complex problems is very rewarding."
            ]
        },
        {
            "tag": "consultation_citas",
            "patterns": [
                "Give me an inspirational quote",
                "Do you have any motivational quotes?",
                "Tell me a quote that inspires me",
                "I want to read a phrase that motivates me",
                "Do you have any self-improvement quotes?",
                "Give me a phrase that makes me think",
                "I want a positive date",
                "Tell me something that gives me hope",
                "Do you know any quotes about success?",
                "Can you give me a quote that inspires me to keep going?",
                "Tell me a quote about life",
                "Do you have any phrases that help me become stronger?",
                "Give me a quote that makes me feel better",
                "Do you have a quote about perseverance?",
                "Tell me a quote that motivates me to improve",
                "I want a phrase of encouragement",
                "Give me a quote that will motivate me not to give up",
                "Can you give me a quote on the effort?",
                "I want to hear a quote about hard work",
                "Do you know any quotes that talk about courage?",
                "Tell me a quote about courage",
                "Do you have any quotes about change?",
                "Give me a quote from someone famous",
                "Can you tell me a quote about hope?",
                "I want to read a quote about the future",
                "Do you have any quotes about trust?",
                "Give me a quote about resilience",
                "Can you give me a quote about daily motivation?",
                "I want a phrase about life and love",
                "Tell me a quote about strength",
                "Give me a quote that will help me move forward",
                "Do you have any quotes that inspire peace?",
                "I want a quote about optimism",
                "Do you know any quotes about personal success?",
                "Give me a quote that makes me think",
                "Can you give me a quote that inspires me to be better?",
                "I want to hear a quote about overcoming",
                "Tell me a quote that gives me energy",
                "Do you have a quote about personal growth?",
                "Give me a quote about learning from mistakes",
                "I want a quote about achieving goals",
                "Do you know any quotes about patience?",
                "Give me a quote that will help me find inner peace",
                "Tell me a quote about happiness",
                "Give me a phrase that makes me feel inspired",
                "Do you have a quote that talks about the value of continuing to fight?"
            ],
            "responses": [
                "Life is not measured by the number of breaths we take, but by the moments that take our breath away. – George Carlin",
                "Don't give up, every failure is a lesson to achieve success. – Albert Einstein",
                "The only thing that is impossible is what you don’t try. – Jeanette Coron",
                "Happiness is not something ready-made. It comes from your own actions. – Dalai Lama",
                "The future belongs to those who believe in the beauty of their dreams. – Eleanor Roosevelt",
                "What doesn't kill you makes you stronger. – Friedrich Nietzsche",
                "Do today what others do not want to do, do tomorrow what others cannot do. – Jerry Rice",
                "The only way to do great work is to love what you do. – Steve Jobs",
                "Success is the sum of small efforts repeated day after day. – Robert Collier",
                "It doesn't matter how many times you fall, it's how many times you get up that matters. – Nelson Mandela",
                "Life begins where your comfort zone ends. – Neale Donald Walsch",
                "The only place where success comes before work is in the dictionary. – Vidal Sassoon",
                "Be the change you wish to see in the world. – Mahatma Gandhi",
                "If you can dream it, you can do it. – Walt Disney",
                "The best way to predict the future is to create it. – Abraham Lincoln",
                "There is no path to happiness, happiness is the path. – Buddha",
                "Perseverance is the key to success. – Charlie Chaplin",
                "When one door closes, another opens. – Alexander Graham Bell",
                "Everything you can imagine is real. – Pablo Picasso",
                "Life is not about waiting for the storm to pass, it is about learning to dance in the rain. – Anonymous",
                "The only way to do great work is to love what you do. – Steve Jobs",
                "The difference between what we are and what we want to be is what we do. – Anonymous",
                "Success is not the key to happiness. Happiness is the key to success. – Albert Schweitzer",
                "Pain is temporary, glory is forever. – Lance Armstrong",
                "Life is like riding a bicycle. To keep your balance, you must keep moving forward. – Albert Einstein",
                "Our greatest fear is not that we are inadequate, our greatest fear is that we are powerful beyond measure. – Marianne Williamson",
                "The man who moves mountains begins by carrying small stones. – Confucius",
                "It is during our darkest moments that we must focus to see the light. – Aristotle",
                "The key to success is starting before you are ready. – Marie Forleo",
                "Everything you need is within you. – Anonymous",
                "The best way to predict your future is to create it. – Abraham Lincoln",
                "Life is 10% what happens to us and 90% how we react to it. – Charles R. Swindoll",
                "The biggest mistake you can make is to be afraid of making mistakes. – Elbert Hubbard",
                "Only those who dare to fail greatly will succeed greatly. – Robert F. Kennedy",
                "Success is the ability to go from failure to failure without losing enthusiasm. – Winston Churchill",
                "The only limit to our achievement tomorrow is our doubts and hesitations today. – Franklin D. Roosevelt",
                "Do what you can, with what you have, where you are. – Theodore Roosevelt",
                "Fear is the enemy of action. – Anonymous",
                "Life is short, don’t waste your time living someone else’s life. – Steve Jobs",
                "If it doesn't challenge you, it doesn't change you. – Anonymous",
                "Remember that not getting what you want is sometimes a wonderful stroke of luck. – Dalai Lama",
                "Peace begins with a smile. – Mother Teresa",
                "Your life doesn’t get better by chance, it gets better by change. – Jim Rohn",
                "Every day is a new opportunity to change your life. – Anonymous",
                "The key to achieving your dreams is believing in yourself. – Anonymous",
                "Believe in yourself and everything will be possible. – Anonymous",
                "When you stop chasing the wrong things, you make room for the right things. – Anonymous",
                "Don’t watch the clock; do what it does, keep going. – Sam Levenson",
                "Strength does not come from bodily capacity, but from the will of the soul. – Mahatma Gandhi",
                "Make your life a dream, and your dream a reality. – Antoine de Saint-Exupéry"
            ]
        },
        {
            "tag": "consultation_recomendaciones",
            "patterns": [
                "Do you have any book recommendations?",
                "Recommend me a movie",
                "Can you suggest a book for me to read?",
                "Give me a series recommendation",
                "Recommend me a movie to watch tonight",
                "Do you have any books that might interest me?",
                "What book do you recommend?",
                "What is a good movie to watch?",
                "Suggest me an interesting series",
                "Which book should I read?",
                "Recommend me an action movie",
                "Do you have any movies I might like?",
                "Can you recommend something for me to read?",
                "Give me a science fiction movie recommendation",
                "What movie do you suggest me?",
                "Suggest me a mystery novel",
                "Recommend me a comedy series",
                "What book is ideal for a quiet afternoon?",
                "Can you recommend me a horror movie?",
                "Do you have any historical fiction recommendations?",
                "Recommend me a good non-fiction book",
                "What is a good movie to marathon?",
                "Give me a self-help book recommendation",
                "Do you have any recommendations for Netflix viewing?",
                "Recommend me a drama movie",
                "What book should I read if I like suspense?",
                "Suggest me a fantasy series",
                "Can you recommend something for me to read this week?",
                "Do you have any recommendations for a relaxing weekend?",
                "Recommend me a movie based on real events",
                "What is a good adventure book?",
                "Do you have any classic book recommendations?",
                "Recommend me an animated movie",
                "Which book will help me improve my skills?",
                "Recommend me a mystery movie",
                "What series is currently in fashion?",
                "Recommend me a movie for a rainy day",
                "Do you have any comedy recommendations?",
                "Recommend me a book for someone who loves science fiction",
                "Suggest me an inspiring movie",
                "What book on personal growth would you recommend?",
                "Recommend me a series to marathon",
                "What movie should I watch if I like action?",
                "Give me a recommendation for a fantasy adventure book",
                "Do you have any biography recommendations?",
                "Recommend me a movie to watch with friends",
                "What fantasy book would you recommend me?",
                "What book do you suggest I read this month?",
                "Recommend me a recent action movie",
                "I feel like watching some science fiction, what do you recommend?",
                "Suggest me a thriller series",
                "Do you know any good historical novels?",
                "What drama movie can you recommend me?",
                "I want to read a book about personal development, what do you suggest?",
                "Recommend me a movie for a weekend marathon",
                "What comedy series do you recommend?",
                "I'm interested in fantasy, what book do you recommend?",
                "What series would I like if I like science fiction?",
                "What is your recommendation for a romantic movie?",
                "What mystery novel would you suggest to me?",
                "What non-fiction book would you recommend?",
                "Can you recommend me an adventure movie?",
                "What Netflix series would you recommend?",
                "I'm looking for something scary, what movie do you suggest?",
                "What crime series would you recommend?",
                "I want to read some classic literature, what do you recommend?",
                "Recommend me a movie for a quiet night at home",
                "What fantasy series can you recommend me?",
                "What movie based on real events do you suggest?",
                "Recommend me a horror book",
                "I'm looking for a series to binge-watch, what do you suggest?",
                "What is a good book to improve my professional skills?",
                "Recommend me a movie to watch with the family",
                "What science fiction series would you recommend?",
                "What movie do you recommend if I like superhero movies?",
                "Suggest me an adventure book",
                "Recommend me a book on philosophy",
                "Do you have any inspiring movies to watch?",
                "I want to read something that makes me think, what book do you suggest?",
                "What historical film would you recommend to me?",
                "What book should I read if I like science fiction?",
                "Recommend me a horror movie for tonight.",
                "What adventure series do you suggest?",
                "I'm looking for a book about leadership, which one do you recommend?",
                "I want to see something with action, do you have any recommendations?",
                "Which classic movie should I watch?",
                "What book is perfect for someone who loves fantasy?",
                "Recommend me a psychological drama series.",
                "Which historical novel should I read?",
                "Do you have any recommendations for a mystery book?",
                "What romantic movie can I watch this weekend?",
                "I'm looking for a crime series, which one do you recommend?",
                "What self-help book do you suggest?",
                "Recommend me a movie to watch with friends.",
                "Which sci-fi series do you think is a must-see?",
                "I want to read something about epic adventures, what do you recommend?",
                "Do you have any suggestions for a thriller novel?",
                "What movie might I like if I like independent cinema?",
                "Recommend me a book that deals with personal growth.",
                "I'm looking for a sci-fi action movie, which one do you suggest?",
                "What comedy series do you recommend for a quiet night?",
                "What is the best book for someone who loves thrillers?",
                "Which thriller movie should I not miss?",
                "Do you have any books that deal with ancient history?",
                "Recommend me an adventure movie to watch with the family.",
                "What book can I read if I want to improve my social skills?",
                "Suggest me a movie to see if I like inspiring stories.",
                "Which thriller series is trending?",
                "If I like science fiction movies, what movie should I watch?",
                "Recommend me a book on contemporary philosophy.",
                "What animated movie would you recommend me?",
                "Which series do you think is ideal for a marathon this weekend?"
            ],
            "responses": [
                "If you like mystery books, I recommend 'The Girl on the Train' by Paula Hawkins.",
                "For a good action movie, I suggest 'Mad Max: Fury Road'.",
                "If you're looking for some sci-fi, Frank Herbert's 'Dune' is a classic you can't miss.",
                "A great non-fiction book recommendation is 'Sapiens: From Animals to Gods' by Yuval Noah Harari.",
                "If you like comedies, I suggest the movie 'The Hangover'.",
                "If you're interested in fantasy, Patrick Rothfuss's 'The Name of the Wind' is an excellent choice.",
                "For an intriguing thriller, David Lagercrantz's 'The Girl in the Spider's Web' is a must-read.",
                "If you like psychological horror, I recommend the movie 'Hereditary'.",
                "For a thriller series, 'Breaking Bad' is one of the best of all time.",
                "If you like historical novels, 'The Physician' by Noah Gordon is a great option.",
                "An excellent movie for a marathon is 'The Lord of the Rings'.",
                "I recommend 'The Power of Now' by Eckhart Tolle, a self-help book about living in the present.",
                "If you like superhero movies, 'Avengers: Endgame' is a must-see.",
                "For an emotional film, 'The Theory of Everything' about the life of Stephen Hawking is an excellent choice.",
                "If you like science fiction, Ray Bradbury's 'Fahrenheit 451' is an excellent novel.",
                "For an inspirational book on success, 'Think and Grow Rich' by Napoleon Hill is a great choice.",
                "If you like animated films, Disney's 'Coco' is charming and emotional.",
                "If you are interested in personal growth, I suggest 'The 7 Habits of Highly Effective People' by Stephen Covey.",
                "If you're looking for a movie to binge-watch, 'Inception' is a great choice.",
                "A good comedy series is 'The Office'. It will make you laugh a lot.",
                "If you like suspense, 'The Truth About the Harry Quebert Affair' by Joël Dicker is a great choice.",
                "If you are interested in a book on philosophy, I recommend 'Meditations' by Marcus Aurelius.",
                "If you like drama movies, 'The Shawshank Redemption' is one of the best of all time.",
                "A recommendation for fans of classic literature is 'Pride and Prejudice' by Jane Austen.",
                "If you like adventure books, J.R.R. Tolkien's 'The Hobbit' is perfect.",
                "For a sci-fi series, 'Stranger Things' has a lot of action and mystery.",
                "If you are looking for something inspiring, 'The Pursuit of Happyness' is a movie that will motivate you.",
                "For a book on leadership, 'Leadership' by John C. Maxwell is an excellent choice.",
                "If you're looking for a romantic movie, 'The Notebook' is a classic.",
                "A great recommendation for someone who loves science fiction is 'Neuromancer' by William Gibson.",
                "If you like historical films based on real events, '12 Years a Slave' is an excellent choice.",
                "If you want to read a biography, 'Steve Jobs' by Walter Isaacson is very inspiring.",
                "For a fantasy series, 'Game of Thrones' is epic.",
                "If you like action movies, I recommend 'John Wick' with Keanu Reeves.",
                "If you are interested in self-help books, 'Secrets of the Millionaire Mind' by T. Harv Eker is very popular.",
                "If you're looking for a psychological horror movie, 'The Witch' is perfect.",
                "I suggest 'The Name of the Wind' by Patrick Rothfuss if you like epic fantasy novels.",
                "An excellent book recommendation is 'One Hundred Years of Solitude' by Gabriel García Márquez, a classic of literature.",
                "If you like suspense and drama movies, 'Gone Girl' is a great choice.",
                "For an interesting series, 'Black Mirror' has episodes that will make you think about technology.",
                "If you're looking for a romantic movie recommendation, 'La La Land' is a charming musical.",
                "For some adventure, I recommend 'The Lord of the Rings trilogy'.",
                "If you like suspense novels, I recommend 'The Silence of the Lambs' by Thomas Harris.",
                "For a recent action movie, I suggest 'Mad Max: Furiosa' if you liked the original.",
                "If you're looking for science fiction, Ursula K. Le Guin's 'The Left Hand of Darkness' is an excellent choice.",
                "For a thriller, I recommend 'True Detective'. It's a modern classic.",
                "If you like historical novels, I suggest 'The Pillars of the Earth' by Ken Follett.",
                "If you're looking for a drama film, 'La La Land' is an emotional and visually stunning choice.",
                "For some personal development, I recommend 'The Power of Habit' by Charles Duhigg.",
                "If you need a movie to marathon, I suggest Christopher Nolan's 'The Dark Knight Trilogy'.",
                "If you like comedies, 'Parks and Recreation' is a series to enjoy and laugh at.",
                "For some fantasy, I recommend 'The Death Gate Cycle' by Margaret Weis.",
                "If you like science fiction series, 'The Expanse' is a must-see.",
                "If you prefer something romantic, I suggest '500 Days of Summer', it's a movie that mixes drama and comedy.",
                "For a good mystery, Paula Hawkins's 'The Girl on the Train' is intriguing and exciting.",
                "I recommend 'Sapiens: From Animals to Gods' by Yuval Noah Harari if you are interested in non-fiction books.",
                "If you're looking for an adventure movie, 'Indiana Jones and the Raiders of the Lost Ark' is a classic.",
                "If you're looking for something on Netflix, 'The Crown' is an impressive historical series.",
                "If you want to watch a horror movie, 'It Follows' is a terrifying choice.",
                "For a crime series, 'Mindhunter' is fascinating if you like criminal investigations.",
                "I suggest 'Crime and Punishment' by Dostoyevsky if you are interested in classical literature.",
                "If you want a movie to relax, 'The Grand Budapest Hotel' is perfect for a quiet night.",
                "If you're looking for a fantasy series, 'The Witcher' has an epic plot based on the saga by Andrzej Sapkowski.",
                "For something based on true events, '12 Years a Slave' is an excellent historical film.",
                "If you like horror books, Stephen King's 'The Shining' is a classic that will captivate you.",
                "If you're looking for a series to binge-watch, 'Breaking Bad' is one of the best of all time.",
                "To improve your professional skills, I suggest 'The 7 Habits of Highly Effective People' by Stephen Covey.",
                "If you're looking for a movie to watch with the family, 'Coco' is a tender and moving option.",
                "If you like science fiction, 'Altered Carbon' is a series that will make you question identity and consciousness.",
                "For a superhero movie, I suggest 'Spider-Man: Into the Spider-Verse', it's visually stunning.",
                "If you are looking for an adventure book, 'Treasure Island' by Robert Louis Stevenson is a classic of the genre.",
                "If you are interested in philosophy, Jostein Gaarder's Sophie's World is an easy and insightful read.",
                "If you are looking for an inspiring movie, 'Life is Beautiful' will move you deeply.",
                "If you're looking for a thought-provoking book, Sun Tzu's The Art of War is an excellent intellectual challenge.",
                "If you like historical films, 'Schindler's List' is an impressive portrait of World War II.",
                "If you like science fiction, I recommend 'The War of the Worlds' by H.G. Wells.",
                "If you're looking for a horror movie, 'The Conjuring' is a terrifying and well-executed option.",
                "For an adventure series, I suggest 'The Mandalorian'.",
                "If you are interested in leadership, 'The 5 Levels of Leadership' by John C. Maxwell is an excellent choice.",
                "If you're looking for action, I recommend 'Gladiator', an epic film full of combat and excitement.",
                "If you like classic films, 'Casablanca' is a must-see.",
                "For fantasy lovers, Philip Pullman's 'His Dark Materials' is a fascinating saga.",
                "If you want to watch a psychological drama series, 'Mindhunter' is fascinating and will keep you intrigued.",
                "For a historical novel, I suggest 'The Name of the Rose' by Umberto Eco.",
                "If you like mystery, Stieg Larsson's 'The Girl with the Dragon Tattoo' is an intriguing read.",
                "For a romantic film, 'Notting Hill' is a charming and emotional choice.",
                "If you're looking for a crime series, 'Sherlock' is modern, intriguing and with great performances.",
                "For a good self-help book, 'The Monk Who Sold His Ferrari' by Robin Sharma is very inspiring.",
                "If you're looking for a movie to watch with friends, 'Guardians of the Galaxy' is perfect for having fun together.",
                "If you like science fiction, 'Black Mirror' has episodes that reflect on technology.",
                "If you like epic adventures, Patrick Rothfuss's 'The Name of the Wind' is an excellent choice.",
                "For a good suspense, I recommend 'The Cave' by José Saramago, a book that will keep you thinking.",
                "If you're looking for an independent film, Spike Jonze's 'Her' is an excellent choice for more thoughtful cinema.",
                "For personal growth, I suggest 'Awaken Your Inner Hero' by Victor Hugo Manzanilla.",
                "If you like action and science fiction movies, 'The Matrix' is a classic that you can't miss.",
                "For a relaxing comedy, I recommend 'The Good Place'. It's light and funny.",
                "If you like thrillers, John Katzenbach's 'The Analyst' is a fascinating and disturbing novel.",
                "If you're looking for suspense, 'The Others' is a psychological horror film that will keep you in suspense.",
                "If you are interested in ancient history, 'The Murder of Socrates' by Vladimir G. Gubelman is an entertaining historical novel.",
                "For a family adventure movie, I recommend 'Pirates of the Caribbean: The Curse of the Black Pearl'.",
                "To improve your social skills, Dale Carnegie's 'How to Win Friends and Influence People' is very helpful.",
                "If you're looking for an inspirational movie, 'The Pursuit of Happyness' is a very emotional choice.",
                "If you are interested in suspense, I suggest 'Bodyguard', an exciting series full of unexpected twists.",
                "If you like science fiction, I recommend 'Interstellar', a film with a deep story about time and space.",
                "For a book on contemporary philosophy, Jostein Gaarder's Sophie's World is a good starting point.",
                "If you like animated films, 'Spider-Man: Into the Spider-Verse' is visually stunning.",
                "If you're looking for a series to binge-watch, 'Stranger Things' is perfect for immersing yourself in a world of mystery and science fiction."
            ]
        },
        {
            "tag": "consultation_empatias",
            "patterns": [
                "I'm going through a bad time, can you help me?",
                "I feel sad, what can I do?",
                "Today is not a good day for me.",
                "I'm very tired, I need some support.",
                "I feel a little lost, do you have any advice?",
                "I'm worried about something, can you hear me?",
                "I don't know how to get out of this situation, I feel trapped.",
                "I feel lonely, can you tell me something to cheer me up?",
                "I'm scared to face what's coming, can you encourage me?",
                "I feel like I can't take it anymore, what do I do?",
                "Any tips for dealing with stress?",
                "Today everything seems to be going wrong, can you tell me something positive?",
                "I feel emotionally exhausted, what can I do?",
                "I feel out of place, can you help me feel better?",
                "Everything is affecting me a lot, how do I handle it?",
                "I'm very confused, what do you think about this?",
                "I don't know how to move forward, any advice?",
                "I feel like I have no strength to continue, can you help me?",
                "I'm feeling very discouraged today, can you support me?",
                "I feel overwhelmed by everything that is happening.",
                "How can I deal with anxiety?",
                "I'm afraid everything will go wrong, can you give me some hope?",
                "I feel defeated, can you give me some words of encouragement?",
                "Today I can't stop thinking about what worries me.",
                "How can I get my motivation back?",
                "I feel like everything is out of control, what do I do?",
                "I'm very stressed, any tips to calm down?",
                "I feel very sad, what can I do to feel better?",
                "I'm struggling with my thoughts, can you help me?",
                "I feel lost and don't know where to start.",
                "I'm going through a difficult time, how can I move forward?",
                "I feel like I'm not enough, can you tell me something positive?",
                "I feel lonely, do you have anything that can comfort me?",
                "I don't know how to deal with what's happening, what do I do?",
                "I feel very insecure, how can I increase my confidence?",
                "I'm going through a crisis, can you give me some advice?",
                "I'm very scared, what can I do to calm down?",
                "I feel really bad, can you help me feel better?",
                "I feel unable to continue, can you give me support?",
                "I'm feeling a lot of pressure, what can I do to relieve it?",
                "I'm facing a difficult situation, can you help me?",
                "I feel overwhelmed by emotions, how do I manage this?",
                "How can I stop feeling so anxious?",
                "I'm feeling frustrated, do you have any advice?",
                "I'm going through a tough time, can you hear me?",
                "I feel disconnected from everything, how do I fix this?",
                "I don't know how to move on, can you help me find strength?",
                "I feel low on energy today, what can I do to improve?",
                "I feel like everything is overwhelming me, how can I handle it?",
                "I feel empty inside, how can I change this?",
                "I don't understand what I'm doing, can you help me?",
                "I'm going through a rough patch, do you have any advice?",
                "I feel incomplete, how can I improve my mood?",
                "Sometimes everything seems like chaos to me, how can I find peace?",
                "I don't know how to move forward with everything I have to do.",
                "I am very unmotivated, how can I find my purpose?",
                "I feel like I'm not able to face my responsibilities.",
                "I feel lost in my life, any advice?",
                "Sometimes I feel like my problems have no solution, what do you think?",
                "I feel so confused, I don't know what to do with my life.",
                "I feel like I have no control over anything anymore, how can I handle it?",
                "I don't know how to balance everything I have to do, any advice?",
                "I am so worried about the future, how can I relieve this anxiety?",
                "I feel so trapped in my thoughts, how can I break free?",
                "I feel mentally exhausted, what can I do to rest?",
                "Today everything seems harder than usual, how can I cope?",
                "I can't stop thinking about what happened, how can I let it go?",
                "I feel like I'm not the same anymore, how can I be myself again?",
                "I feel out of place, how can I fit into this environment?",
                "I'm afraid of losing control, how can I manage my anxiety?",
                "I feel like I have failed, how can I overcome this feeling?",
                "I'm so overwhelmed I don't know where to start.",
                "I don't know how to manage my stress, what should I do?",
                "I feel like everything I do is wrong, how can I change this?",
                "I feel distant from others, how can I reconnect?",
                "I have a lot of doubts about what I'm doing, can you give me some advice?",
                "I'm at a crossroads, I don't know which path to take.",
                "I feel alone in my struggles, how can I find support?",
                "I'm so emotionally tired, how can I recharge?",
                "I feel empty and directionless, what can I do about it?",
                "I don't know how to deal with my fears, how can I face them?",
                "I feel like I have no control over my life, how can I take charge?",
                "I feel unable to make decisions, how can I clear my mind?",
                "Everything is overwhelming me, how can I organize my thoughts?",
                "I'm going through a difficult situation, how can I overcome it?",
                "I feel like I'm not being listened to, how can I express myself better?",
                "I'm going through a period of change, how can I adapt better?",
                "I don't know if I'm on the right path, how can I know?",
                "I feel very insecure, how can I regain my confidence?",
                "I'm going through a difficult time in my life, do you have any advice?",
                "I feel so frustrated with everything, how can I find calm?",
                "Lately I feel completely lost in what I'm doing.",
                "I feel very frustrated with everything, how can I stop feeling this way?",
                "I don't know if I'm making the right decisions, how can I clarify my thoughts?",
                "I am very worried about something I cannot control, what do I do?",
                "I feel like I no longer have the strength to continue, what can I do?",
                "I feel so alone in this process, how can I find support?",
                "I haven't been able to find motivation for anything lately, how can I overcome this?",
                "Everything seems to be going from bad to worse, how can I see things differently?",
                "I feel emotionally exhausted, how can I feel better?",
                "I can't find comfort in anything, do you have any advice?",
                "I feel like I'm stuck in a routine that I don't like.",
                "Things are going wrong in every aspect of my life, how can I improve?",
                "I feel like I have no control over my life, how can I get that feeling back?",
                "I feel so vulnerable, how can I be emotionally stronger?",
                "I am worried about the expectations I have of myself, how can I manage them?",
                "I feel like I'm alone on this journey, how can I find more support?",
                "I feel so overwhelmed with responsibilities, how can I handle it all?",
                "I don't know why I feel this way, but I'm not okay. What should I do?",
                "I feel like I have no value, how can I change that perception?",
                "I feel unable to deal with all my problems, how can I organize them?",
                "I can't stop thinking about what's affecting me, how can I free myself from these thoughts?",
                "I am going through a period of uncertainty, how can I find peace?",
                "I feel like my problems are drowning me, how can I get out of this situation?",
                "I'm looking for something to calm me down, what can I do to feel better?",
                "I don't know how to move forward, I feel stuck, what do you suggest?",
                "I feel lost in the midst of everything that is happening.",
                "I feel like I'm failing at everything, how can I regain my self-confidence?",
                "I feel aimless, how can I find clarity in the midst of all this?",
                "I feel like I'm losing control, how can I get it back?",
                "I'm going through a personal crisis, how can I overcome it?",
                "I don't feel good about myself lately, how can I improve my self-esteem?",
                "I feel like everything is out of my control, how can I regain control?",
                "I can't stop thinking about my mistakes, how can I learn to forgive myself?",
                "I feel like I'm dragging myself through the day, how can I find energy?",
                "Lately I feel overwhelmed by my emotions, what can I do to manage them?",
                "I feel disconnected from the people around me, how can I reconnect?",
                "I'm looking for ways to feel better, what should I try?",
                "I feel trapped in a dead end situation, how can I free myself?",
                "I'm struggling with insecurities, how can I feel more confident?",
                "I feel like I'm not meeting my own expectations, how can I improve?",
                "I feel so vulnerable about everything, how can I strengthen myself emotionally?"
            ],
            "responses": [
                "I'm so sorry you're going through a difficult time, I'm here to help you with whatever you need.",
                "It's completely normal to feel this way sometimes. Take your time and find something to do that calms you down.",
                "I understand you, sometimes everything seems too overwhelming. Remember that you are not alone, there are people who support you.",
                "I'm here to listen to you, if you want to talk more about what's bothering you, you can count on me.",
                "It's hard to find strength when everything seems to be going wrong, but the most important thing is not to give up. There is always a light at the end of the tunnel.",
                "I understand that you feel that way. Sometimes sharing your thoughts with someone can make you feel a little better.",
                "It's not easy to go through difficult times, but I want you to know that I understand you and that this bad moment will also pass.",
                "I feel sad to hear that you feel alone. Remember that your emotions are valid, and it's okay to ask for help when you need it.",
                "It's understandable to feel scared. Don't worry, everything will be okay. You can do it, step by step.",
                "I'm so sorry you're going through this, but remember that you have the strength within you to overcome any obstacle.",
                "Sometimes when everything seems so difficult, the most important thing is to breathe and take small steps towards the solution.",
                "Anxiety is a difficult thing to deal with, but try to pause, take a deep breath and think about the present moment. Everything passes.",
                "Remember that difficulties are temporary. What you are going through does not define your worth. You are stronger than you think.",
                "When you feel exhausted, try to rest and give your mind some space. Sometimes, a little rest is all we need.",
                "It's normal to feel out of place at times. We all have those moments, and it's part of learning and growing. You're doing the best you can.",
                "It's totally understandable to feel overwhelmed by your circumstances. Don't forget that it's okay to ask for help, you don't have to face it all alone.",
                "If you feel confused, take a moment to reflect. Sometimes taking a step back helps you see things more clearly.",
                "It's completely valid to feel like you can't move forward. Don't rush, take your time and look for small goals that you can achieve.",
                "In difficult times, it's important to remember that there is always support available, whether from a loved one or someone you can turn to.",
                "I feel you, we all go through moments where we feel overwhelmed. The important thing is to know that you are not alone in this journey.",
                "It's okay to feel down from time to time. Be kind to yourself and give yourself time to recover. Things will get better.",
                "When worries are overwhelming us, it is important to find something that calms us. Whether it is taking a walk or talking to someone close, it is a good step.",
                "Sometimes words of encouragement can make a big difference. Remember that every day is a new opportunity to start over.",
                "It's normal to have difficult days, and it's okay not to have all the answers. The important thing is to take it one step at a time.",
                "Remember that stress does not define who you are. Take a moment to relax and recharge your batteries.",
                "If you're feeling sad, it's important to validate your emotions. Allow yourself to feel whatever you need to and don't put pressure on yourself to get better immediately.",
                "Dealing with anxiety isn't easy, but often small moments of calm, like breathing or relaxing, can make a big difference.",
                "It's completely valid to feel insecure. We all go through it, and over time you'll learn to trust yourself more.",
                "In times of crisis, sometimes it's best to talk to someone you trust. It will help you feel lighter and understood.",
                "Fear can be paralyzing, but remember that it is just an emotion, not a sentence. You have the ability to deal with it.",
                "I'm so sorry you're feeling down. Sometimes it helps to talk about what you're feeling, and I'm here to listen.",
                "In difficult times, it is always good to remember that you have the power to overcome any obstacle. Take it one day at a time.",
                "Pressure can be very difficult to handle, but remember that it's okay to ask for a break. Self-care is a priority.",
                "If you're feeling overwhelmed, it can be helpful to take small steps to get organized. You don't have to do everything at once.",
                "Dealing with your emotions in a healthy way is key. Try talking to someone or doing an activity that calms you down.",
                "When anxiety takes over, try to focus on the present and remember that everything will pass. It's okay to ask for help.",
                "It's normal to feel frustrated when things don't go the way you expected. Remember that everything has a solution, and there is always a way forward.",
                "Talking about what you're feeling is a big step. If you need more time to process it, that's okay. You don't have to rush it.",
                "We all have tough days. The most important thing is to remind yourself that it's okay to not feel okay all the time.",
                "If you're feeling disconnected, sometimes sharing your thoughts with someone can be a good first step toward regaining your sense of connection.",
                "When you don't know what to do, the best option is to seek help or talk to someone. Sometimes, a little support can change your perspective.",
                "I'm sorry you feel that way, but the important thing is that you're seeking help. Taking small steps can help.",
                "It's completely understandable to feel lost. Sometimes a change of perspective can help you see things differently.",
                "I understand that you feel demotivated, but remember that small victories add up. Don't give up.",
                "It's normal to feel overwhelmed, but you're not alone. Try to organize yourself step by step.",
                "Your well-being is important, and it's a good first step to acknowledge that you need support. Find someone you can talk to.",
                "Sometimes when things feel chaotic, it's best to pause and take a deep breath. Take your time.",
                "I understand you, there are times when everything seems too much. Don't forget that difficult times also pass.",
                "It's completely normal to not know how to proceed sometimes. Try to focus on the present and take small steps.",
                "Remember that the future may be uncertain, but your well-being is the most important thing. Take a break when you need it.",
                "It's hard to feel low on energy, but sometimes a little rest or even a change of activity can help.",
                "I feel like everything is piling up on you, but the good thing is that there are always ways to handle it. Breathe and take your time.",
                "It's okay to feel lost, but the important thing is to know that it's okay to ask for help and take the time to find your way.",
                "I feel you. Sometimes you just need some space to gather your thoughts. Take a breath.",
                "It's normal to feel trapped by your thoughts, but remember that you're not alone. Sometimes talking to someone can be liberating.",
                "It hurts me to know that you feel this way, but it is important to remember that, little by little, things will improve.",
                "Intense emotions can be exhausting, but it's essential to take care of yourself and find ways to relax.",
                "I understand you, we all face difficult times. Don't hesitate to ask for support when you need it.",
                "Uncertainty can be scary, but remember that it is part of the growth process. It will help you learn more about yourself.",
                "It's okay to feel insecure. Sometimes the first step is being kind to yourself and accepting that we all go through ups and downs.",
                "Tough times don't define who you are. What matters is how you move forward and keep looking for ways to improve.",
                "When your mind is cluttered, try writing down what you're feeling or taking a walk. Sometimes, these small acts can bring clarity.",
                "It's completely normal to feel lost at times. The important thing is to keep looking for support and ways to improve.",
                "I'm sorry you feel that way, but it's okay to reach out for help when things get overwhelming. You deserve that support.",
                "We all have days when everything seems harder. The important thing is to remind yourself that it's okay to not always be okay.",
                "Sometimes a change of perspective or even taking a step back can help reorganize priorities.",
                "Fear is a natural emotion, but don't let it control you. Little by little, you can learn to face it.",
                "It's completely valid to feel like everything is overwhelming you. The important thing is to take small steps and celebrate progress.",
                "It's not easy to juggle so many things at once, but the important thing is to take time to take care of yourself.",
                "Sometimes a moment of reflection can help you find the peace you need. Remember that it's okay not to have all the answers.",
                "We all face difficulties. The important thing is not to lose hope and remember that things always get better with time.",
                "When you feel overwhelmed, try stopping for a moment and breathing. Sometimes this helps to organize your thoughts.",
                "I understand you, sometimes stress makes us feel incapable of coping. The best thing is to take things step by step.",
                "It's completely normal to feel frustrated from time to time. The important thing is to remember that there is always a way forward.",
                "Talking about what you feel is the first step to overcoming difficulties. I am here to listen to you.",
                "It's hard to go through tough times, but I want you to know that there's always light at the end of the tunnel. Take it easy.",
                "When anxiety takes over, the best thing to do is stop, breathe deeply and remember that everything will pass.",
                "It's completely understandable to feel insecure during times of change. Seek support and remember that you will adapt over time.",
                "Everything you are going through is a stage, and even though it may be difficult now, over time you will see progress. Stay strong.",
                "I understand you, we all have days when we feel overwhelmed. The important thing is not to lose hope.",
                "It's normal to feel distant at times. Take time to reconnect and seek support.",
                "In times of uncertainty, the most important thing is to give yourself time to reflect and then take a step forward.",
                "I'm sorry you feel that way, but the important thing is that you're acknowledging what you're feeling. It's an important first step.",
                "I understand how difficult it must be to go through this, but remember that there are always ways to overcome difficulties, step by step.",
                "It's completely normal to feel lost from time to time. Sometimes it's best to take a break and think about what you really want.",
                "You are not alone in this. If you feel overwhelmed, talking to someone close to you can be helpful.",
                "The most important thing is to give yourself time to rest and recharge. Sometimes a break is all we need.",
                "It's normal to have moments of doubt, but remember that every day is a new opportunity to start over.",
                "When you feel stuck, try to focus on small steps that you can control. That can make a big difference.",
                "Sometimes frustration comes from not knowing how to move forward. Take your time, there is no rush to find the answers.",
                "What you are going through does not define your future. Take some time to reflect and find ways to take care of yourself.",
                "Remember that it's okay to feel vulnerable, and vulnerability is also a way to be strong. You are not alone in this.",
                "It's completely valid to feel insecure during difficult times. The important thing is to recognize that this too shall pass.",
                "I understand you. Sometimes a little change of perspective can help you see things from a different angle.",
                "You don't have to do everything at once. The important thing is to go step by step and prioritize what you need most at the moment.",
                "Facing uncertainty is not easy, but remember that there is always support available. Don't hesitate to seek it.",
                "It's completely okay to feel lost at times. The important thing is to remember that there are always opportunities to grow.",
                "Anxiety about not being able to control everything is natural, but what you can control is how you take care of yourself in this process.",
                "It's okay not to have all the answers. The important thing is to be kind to yourself as you go through this process.",
                "Don't worry if you don't have clarity right now. Sometimes clarity comes slowly, it's not something you can force.",
                "Insecurity is a common emotion, but remember that it doesn't define who you are. We all go through those moments, and they're okay.",
                "I feel you. Sometimes the pressure of expectations can be overwhelming, but the important thing is to be compassionate with yourself.",
                "The way you feel now won't last forever. The important thing is to recognize that you deserve to feel better and seek help.",
                "When you feel overwhelmed, try to focus on what you can control, even if it's the small things.",
                "It's okay to feel disconnected sometimes, but that doesn't mean you can't reconnect. Take your time and reach out for support when you need it.",
                "Remember that it's okay to ask for help. Sometimes talking to someone or taking a break can provide the relief you need.",
                "It's hard when everything seems out of control, but remember that there is always something you can do to improve the situation, even if it's small.",
                "It hurts me to know that you feel that way, but the important thing is that you are not staying in that place. You are looking for ways to feel better.",
                "Sometimes the best way to get rid of negative thoughts is to distract yourself a little. Do something you enjoy that helps you relax.",
                "It's totally okay to have doubts, but remember that you are capable of overcoming this. Take it slow and step by step.",
                "The road is not always easy, but every step you take, no matter how small, brings you closer to a solution.",
                "Sometimes just taking a break and unplugging can give you the energy you need to keep going.",
                "Self-criticism is something we all experience, but remember to be kind to yourself and not let your mistakes define you.",
                "Remember that fear and insecurity are natural emotions, but you don't have to let them control you. You have the ability to overcome them.",
                "Sometimes the best way to move forward is to take a step back and look at things from a different perspective. Everything takes time.",
                "It's hard, but the important thing is that you are acknowledging to yourself what you feel. That's the first step to improvement.",
                "It's not easy to be strong all the time. We all go through difficult times, and it's important to give yourself space to be vulnerable.",
                "Sometimes a change of perspective is just what we need to move forward. Take your time and see what works for you.",
                "I get it, uncertainty can be scary. But remember that even though you don't have control over everything, there are always things you can do.",
                "When you feel stuck, remember that it's just a phase. Everything gets better with time, so don't despair.",
                "It's completely normal to feel lost, but I want you to know that in time the answers will come. Take it easy.",
                "Remember that vulnerability is a form of strength. It's okay to not be okay all the time."
            ]
        },
        {
            "tag": "codigo_hola_mundo",
            "patterns": [
                "código de un hola mundo",
                "quiero el código para imprimir Hola Mundo"
            ],
            "responses": [
                "print(\"Hola Mundo\")",
                "Puedes escribir: print(\"Hola Mundo\")"
            ]
        },
        {
            "tag": "codigo_bucle_for",
            "patterns": [
                "ejemplo de un bucle for",
                "quiero ver cómo funciona un for en Python"
            ],
            "responses": [
                "for i in range(5): print(i)",
                "for i in [1, 2, 3]: print(i)"
            ]
        },
        {
            "tag": "codigo_condicional",
            "patterns": [
                "código para una condición en Python",
                "cómo escribir un if"
            ],
            "responses": [
                "if x > 0: print(\"Positivo\")",
                "if x == 0: print(\"Cero\")"
            ]
        },
        {
            "tag": "codigo_while",
            "patterns": [
                "ejemplo de bucle while",
                "quiero un while en Python"
            ],
            "responses": [
                "while x < 10: print(x); x += 1",
                "while True: print(\"Ejecutando\")"
            ]
        },
        {
            "tag": "codigo_funcion",
            "patterns": [
                "ejemplo de una función",
                "quiero ver cómo se hace una función en Python"
            ],
            "responses": [
                "def saludo(): print(\"Hola\")",
                "def suma(a, b): return a + b"
            ]
        },
        {
            "tag": "codigo_hola_mundo_js",
            "patterns": [
                "código de un hola mundo",
                "quiero el código para imprimir Hola Mundo en JavaScript"
            ],
            "responses": [
                "console.log('Hola Mundo');",
                "Puedes escribir: console.log('Hola Mundo');"
            ]
        },
        {
            "tag": "codigo_bucle_for_js",
            "patterns": [
                "ejemplo de un bucle for en JavaScript",
                "quiero ver cómo funciona un for en JavaScript"
            ],
            "responses": [
                "for (let i = 0; i < 5; i++) { console.log(i); }",
                "for (let i of [1, 2, 3]) { console.log(i); }"
            ]
        },
        {
            "tag": "codigo_condicional_js",
            "patterns": [
                "código para una condición en JavaScript",
                "cómo escribir un if en JavaScript"
            ],
            "responses": [
                "if (x > 0) { console.log('Positivo'); }",
                "if (x === 0) { console.log('Cero'); }"
            ]
        },
        {
            "tag": "codigo_while_js",
            "patterns": [
                "ejemplo de bucle while en JavaScript",
                "quiero un while en JavaScript"
            ],
            "responses": [
                "while (x < 10) { console.log(x); x++; }",
                "while (true) { console.log('Ejecutando'); }"
            ]
        },
        {
            "tag": "codigo_funcion_js",
            "patterns": [
                "ejemplo de una función en JavaScript",
                "quiero ver cómo se hace una función en JavaScript"
            ],
            "responses": [
                "function saludo() { console.log('Hola'); }",
                "function suma(a, b) { return a + b; }"
            ]
        },
        {
            "tag": "codigo_clase",
            "patterns": [
                "ejemplo de una clase",
                "cómo crear una clase en Python"
            ],
            "responses": [
                "class Persona: pass",
                "class Animal: def __init__(self, nombre): self.nombre = nombre"
            ]
        },
        {
            "tag": "codigo_importar",
            "patterns": [
                "cómo importar una biblioteca",
                "ejemplo de import en Python"
            ],
            "responses": [
                "import math",
                "from datetime import datetime"
            ]
        },
        {
            "tag": "codigo_lista",
            "patterns": [
                "ejemplo de una lista",
                "quiero ver cómo usar listas en Python"
            ],
            "responses": [
                "lista = [1, 2, 3]; print(lista)",
                "nombres = [\"Ana\", \"Luis\"]; print(nombres[0])"
            ]
        },
        {
            "tag": "codigo_diccionario",
            "patterns": [
                "ejemplo de diccionario",
                "quiero un diccionario en Python"
            ],
            "responses": [
                "diccionario = {\"clave\": \"valor\"}; print(diccionario)",
                "info = {\"nombre\": \"Juan\", \"edad\": 25}; print(info[\"nombre\"])"
            ]
        },
        {
            "tag": "codigo_set",
            "patterns": [
                "ejemplo de un set",
                "cómo se usa un set en Python"
            ],
            "responses": [
                "mi_set = {1, 2, 3}; print(mi_set)",
                "numeros = set([1, 2, 2, 3]); print(numeros)"
            ]
        },
        {
            "tag": "codigo_tupla",
            "patterns": [
                "ejemplo de una tupla",
                "cómo usar una tupla en Python"
            ],
            "responses": [
                "tupla = (1, 2, 3); print(tupla)",
                "colores = (\"rojo\", \"azul\"); print(colores[1])"
            ]
        },
        {
            "tag": "codigo_input",
            "patterns": [
                "cómo leer un input",
                "quiero un ejemplo con input"
            ],
            "responses": [
                "nombre = input(\"¿Cómo te llamas?\"); print(nombre)",
                "edad = int(input(\"¿Cuál es tu edad?\")); print(edad)"
            ]
        },
        {
            "tag": "codigo_archivo",
            "patterns": [
                "cómo abrir un archivo",
                "ejemplo para manejar archivos"
            ],
            "responses": [
                "with open(\"archivo.txt\", \"r\") as f: print(f.read())",
                "f = open(\"datos.txt\", \"w\"); f.write(\"Hola\"); f.close()"
            ]
        },
        {
            "tag": "codigo_clase_js",
            "patterns": [
                "ejemplo de una clase en JavaScript",
                "cómo crear una clase en JavaScript"
            ],
            "responses": [
                "class Persona {}",
                "class Animal { constructor(nombre) { this.nombre = nombre; } }"
            ]
        },
        {
            "tag": "codigo_importar_js",
            "patterns": [
                "cómo importar una biblioteca en JavaScript",
                "ejemplo de import en JavaScript"
            ],
            "responses": [
                "import math from 'mathjs';",
                "import { DateTime } from 'luxon';"
            ]
        },
        {
            "tag": "codigo_lista_js",
            "patterns": [
                "ejemplo de una lista en JavaScript",
                "quiero ver cómo usar listas en JavaScript"
            ],
            "responses": [
                "let lista = [1, 2, 3]; console.log(lista);",
                "let nombres = ['Ana', 'Luis']; console.log(nombres[0]);"
            ]
        },
        {
            "tag": "codigo_diccionario_js",
            "patterns": [
                "ejemplo de diccionario en JavaScript",
                "quiero un diccionario en JavaScript"
            ],
            "responses": [
                "let diccionario = { 'clave': 'valor' }; console.log(diccionario);",
                "let info = { 'nombre': 'Juan', 'edad': 25 }; console.log(info['nombre']);"
            ]
        },
        {
            "tag": "codigo_set_js",
            "patterns": [
                "ejemplo de un set en JavaScript",
                "cómo se usa un set en JavaScript"
            ],
            "responses": [
                "let miSet = new Set([1, 2, 3]); console.log(miSet);",
                "let numeros = new Set([1, 2, 2, 3]); console.log(numeros);"
            ]
        },
        {
            "tag": "codigo_tupla_js",
            "patterns": [
                "ejemplo de una tupla en JavaScript",
                "cómo usar una tupla en JavaScript"
            ],
            "responses": [
                "let tupla = [1, 2, 3]; console.log(tupla);",
                "let colores = ['rojo', 'azul']; console.log(colores[1]);"
            ]
        },
        {
            "tag": "codigo_input_js",
            "patterns": [
                "cómo leer un input en JavaScript",
                "quiero un ejemplo con input en JavaScript"
            ],
            "responses": [
                "let nombre = prompt('¿Cómo te llamas?'); console.log(nombre);",
                "let edad = parseInt(prompt('¿Cuál es tu edad?')); console.log(edad);"
            ]
        },
        {
            "tag": "codigo_archivo_js",
            "patterns": [
                "cómo abrir un archivo en JavaScript",
                "ejemplo para manejar archivos en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readFile('archivo.txt', 'utf8', (err, data) => { if (err) throw err; console.log(data); });",
                "const fs = require('fs'); fs.writeFile('datos.txt', 'Hola', (err) => { if (err) throw err; console.log('Archivo guardado'); });"
            ]
        },
        {
            "tag": "codigo_excepcion",
            "patterns": [
                "ejemplo de manejo de excepciones",
                "cómo manejar errores en Python"
            ],
            "responses": [
                "try: x = 1 / 0; except ZeroDivisionError: print(\"Error\")",
                "try: f = open(\"no_existe.txt\"); except FileNotFoundError: print(\"Archivo no encontrado\")"
            ]
        },
        {
            "tag": "codigo_lambda",
            "patterns": [
                "ejemplo de función lambda",
                "quiero una función anónima en Python"
            ],
            "responses": [
                "doble = lambda x: x * 2; print(doble(4))",
                "suma = lambda a, b: a + b; print(suma(3, 5))"
            ]
        },
        {
            "tag": "codigo_comprension",
            "patterns": [
                "ejemplo de comprensión de listas",
                "quiero una lista por comprensión"
            ],
            "responses": [
                "cuadrados = [x**2 for x in range(5)]; print(cuadrados)",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "codigo_modulo",
            "patterns": [
                "cómo usar un módulo",
                "quiero un ejemplo con módulos"
            ],
            "responses": [
                "import math; print(math.sqrt(16))",
                "from os import path; print(path.exists(\"archivo.txt\"))"
            ]
        },
        {
            "tag": "codigo_fstring",
            "patterns": [
                "ejemplo de f-string",
                "cómo formatear strings en Python"
            ],
            "responses": [
                "nombre = \"Juan\"; print(f\"Hola, {nombre}\")",
                "a, b = 5, 10; print(f\"La suma de {a} y {b} es {a + b}\")"
            ]
        },
        {
            "tag": "codigo_map",
            "patterns": [
                "ejemplo con map",
                "quiero usar map en Python"
            ],
            "responses": [
                "numeros = [1, 2, 3]; print(list(map(lambda x: x * 2, numeros)))",
                "nombres = [\"Ana\", \"Luis\"]; print(list(map(str.upper, nombres)))"
            ]
        },
        {
            "tag": "codigo_zip",
            "patterns": [
                "ejemplo con zip",
                "cómo combinar listas en Python"
            ],
            "responses": [
                "a = [1, 2]; b = [\"uno\", \"dos\"]; print(list(zip(a, b)))",
                "x = [1, 2, 3]; y = [4, 5, 6]; print(list(zip(x, y)))"
            ]
        },
        {
            "tag": "codigo_json",
            "patterns": [
                "ejemplo con JSON",
                "cómo usar JSON en Python"
            ],
            "responses": [
                "import json; data = {\"clave\": \"valor\"}; print(json.dumps(data))",
                "import json; data = \"{\\\"clave\\\": \\\"valor\\\"}\"; print(json.loads(data))"
            ]
        },
        {
            "tag": "codigo_excepcion_js",
            "patterns": [
                "ejemplo de manejo de excepciones en JavaScript",
                "cómo manejar errores en JavaScript"
            ],
            "responses": [
                "try { let x = 1 / 0; } catch (e) { console.log('Error: ' + e.message); }",
                "try { let f = fs.readFileSync('no_existe.txt'); } catch (e) { console.log('Archivo no encontrado: ' + e.message); }"
            ]
        },
        {
            "tag": "codigo_lambda_js",
            "patterns": [
                "ejemplo de función lambda en JavaScript",
                "quiero una función anónima en JavaScript"
            ],
            "responses": [
                "const doble = x => x * 2; console.log(doble(4));",
                "const suma = (a, b) => a + b; console.log(suma(3, 5));"
            ]
        },
        {
            "tag": "codigo_comprension_js",
            "patterns": [
                "ejemplo de comprensión de listas en JavaScript",
                "quiero una lista por comprensión en JavaScript"
            ],
            "responses": [
                "const cuadrados = [...Array(5).keys()].map(x => x**2); console.log(cuadrados);",
                "const pares = [...Array(10).keys()].filter(x => x % 2 === 0); console.log(pares);"
            ]
        },
        {
            "tag": "codigo_modulo_js",
            "patterns": [
                "cómo usar un módulo en JavaScript",
                "quiero un ejemplo con módulos en JavaScript"
            ],
            "responses": [
                "import * as math from 'mathjs'; console.log(math.sqrt(16));",
                "import { existsSync } from 'fs'; console.log(existsSync('archivo.txt'));"
            ]
        },
        {
            "tag": "codigo_fstring_js",
            "patterns": [
                "ejemplo de f-string en JavaScript",
                "cómo formatear strings en JavaScript"
            ],
            "responses": [
                "let nombre = 'Juan'; console.log(`Hola, ${nombre}`);",
                "let a = 5, b = 10; console.log(`La suma de ${a} y ${b} es ${a + b}`);"
            ]
        },
        {
            "tag": "codigo_map_js",
            "patterns": [
                "ejemplo con map en JavaScript",
                "quiero usar map en JavaScript"
            ],
            "responses": [
                "let numeros = [1, 2, 3]; console.log(numeros.map(x => x * 2));",
                "let nombres = ['Ana', 'Luis']; console.log(nombres.map(name => name.toUpperCase()));"
            ]
        },
        {
            "tag": "codigo_zip_js",
            "patterns": [
                "ejemplo con zip en JavaScript",
                "cómo combinar listas en JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = ['uno', 'dos']; console.log(a.map((x, i) => [x, b[i]]));",
                "let x = [1, 2, 3]; let y = [4, 5, 6]; console.log(x.map((item, index) => [item, y[index]]));"
            ]
        },
        {
            "tag": "codigo_json_js",
            "patterns": [
                "ejemplo con JSON en JavaScript",
                "cómo usar JSON en JavaScript"
            ],
            "responses": [
                "let data = { 'clave': 'valor' }; console.log(JSON.stringify(data));",
                "let data = '{\"clave\": \"valor\"}'; console.log(JSON.parse(data));"
            ]
        },
        {
            "tag": "codigo_datetime",
            "patterns": [
                "cómo manejar fechas en Python",
                "quiero trabajar con fechas"
            ],
            "responses": [
                "from datetime import datetime; ahora = datetime.now(); print(ahora)",
                "from datetime import date; hoy = date.today(); print(hoy)"
            ]
        },
        {
            "tag": "codigo_random",
            "patterns": [
                "ejemplo con random",
                "quiero generar números aleatorios"
            ],
            "responses": [
                "import random; print(random.randint(1, 10))",
                "import random; print(random.choice([\"rojo\", \"azul\", \"verde\"]))"
            ]
        },
        {
            "tag": "codigo_iterador",
            "patterns": [
                "ejemplo con iteradores",
                "quiero usar un iterador"
            ],
            "responses": [
                "iterador = iter([1, 2, 3]); print(next(iterador))",
                "for valor in iter([\"a\", \"b\", \"c\"]): print(valor)"
            ]
        },
        {
            "tag": "codigo_generador",
            "patterns": [
                "ejemplo de un generador",
                "quiero un generador en Python"
            ],
            "responses": [
                "def contador(): yield 1; yield 2; yield 3; print(list(contador()))",
                "def pares(): for x in range(0, 10, 2): yield x; print(list(pares()))"
            ]
        },
        {
            "tag": "codigo_propiedad",
            "patterns": [
                "cómo usar @property en Python",
                "ejemplo con decoradores de propiedades"
            ],
            "responses": [
                "class Persona: @property def edad(self): return 25; p = Persona(); print(p.edad)",
                "class Circulo: def __init__(self, radio): self.radio = radio; @property def area(self): return 3.14 * self.radio**2; c = Circulo(5); print(c.area)"
            ]
        },
        {
            "tag": "codigo_filter",
            "patterns": [
                "ejemplo con filter",
                "cómo usar filter en Python"
            ],
            "responses": [
                "numeros = [1, 2, 3, 4]; pares = filter(lambda x: x % 2 == 0, numeros); print(list(pares))",
                "nombres = [\"Ana\", \"Luis\", \"Juan\"]; largos = filter(lambda x: len(x) > 3, nombres); print(list(largos))"
            ]
        },
        {
            "tag": "codigo_reduce",
            "patterns": [
                "ejemplo con reduce",
                "quiero usar reduce en Python"
            ],
            "responses": [
                "from functools import reduce; numeros = [1, 2, 3]; suma = reduce(lambda x, y: x + y, numeros); print(suma)",
                "from functools import reduce; lista = [2, 3, 4]; producto = reduce(lambda x, y: x * y, lista); print(producto)"
            ]
        },
        {
            "tag": "codigo_enumerate",
            "patterns": [
                "ejemplo con enumerate",
                "cómo usar enumerate en Python"
            ],
            "responses": [
                "lista = [\"a\", \"b\", \"c\"]; for indice, valor in enumerate(lista): print(indice, valor)",
                "nombres = [\"Ana\", \"Luis\"]; for i, nombre in enumerate(nombres): print(f\"{i}: {nombre}\")"
            ]
        },
        {
            "tag": "codigo_decorador",
            "patterns": [
                "ejemplo de decorador",
                "quiero usar decoradores en Python"
            ],
            "responses": [
                "def decorador(func): def envoltura(): print(\"Inicio\"); func(); print(\"Fin\"); return envoltura; @decorador def saludo(): print(\"Hola\"); saludo()",
                "def decorador(func): def wrapper(*args, **kwargs): print(\"Antes\"); result = func(*args, **kwargs); print(\"Después\"); return result; return wrapper; @decorador def suma(a, b): return a + b; suma(2, 3)"
            ]
        },
        {
            "tag": "codigo_datetime_js",
            "patterns": [
                "cómo manejar fechas en JavaScript",
                "quiero trabajar con fechas en JavaScript"
            ],
            "responses": [
                "const ahora = new Date(); console.log(ahora);",
                "const hoy = new Date(); console.log(hoy.toISOString().split('T')[0]);"
            ]
        },
        {
            "tag": "codigo_random_js",
            "patterns": [
                "ejemplo con random en JavaScript",
                "quiero generar números aleatorios en JavaScript"
            ],
            "responses": [
                "console.log(Math.floor(Math.random() * 10) + 1);",
                "const colores = ['rojo', 'azul', 'verde']; console.log(colores[Math.floor(Math.random() * colores.length)]);"
            ]
        },
        {
            "tag": "codigo_iterador_js",
            "patterns": [
                "ejemplo con iteradores en JavaScript",
                "quiero usar un iterador en JavaScript"
            ],
            "responses": [
                "const iterador = [1, 2, 3][Symbol.iterator](); console.log(iterador.next().value);",
                "const valores = ['a', 'b', 'c']; for (let valor of valores) { console.log(valor); }"
            ]
        },
        {
            "tag": "codigo_generador_js",
            "patterns": [
                "ejemplo de un generador en JavaScript",
                "quiero un generador en JavaScript"
            ],
            "responses": [
                "function* contador() { yield 1; yield 2; yield 3; } console.log([...contador()]);",
                "function* pares() { for (let x = 0; x < 10; x += 2) { yield x; } } console.log([...pares()]);"
            ]
        },
        {
            "tag": "codigo_propiedad_js",
            "patterns": [
                "cómo usar @property en JavaScript",
                "ejemplo con decoradores de propiedades en JavaScript"
            ],
            "responses": [
                "class Persona { get edad() { return 25; } } const p = new Persona(); console.log(p.edad);",
                "class Circulo { constructor(radio) { this.radio = radio; } get area() { return 3.14 * this.radio ** 2; } } const c = new Circulo(5); console.log(c.area);"
            ]
        },
        {
            "tag": "codigo_filter_js",
            "patterns": [
                "ejemplo con filter en JavaScript",
                "cómo usar filter en JavaScript"
            ],
            "responses": [
                "const numeros = [1, 2, 3, 4]; const pares = numeros.filter(x => x % 2 === 0); console.log(pares);",
                "const nombres = ['Ana', 'Luis', 'Juan']; const largos = nombres.filter(x => x.length > 3); console.log(largos);"
            ]
        },
        {
            "tag": "codigo_reduce_js",
            "patterns": [
                "ejemplo con reduce en JavaScript",
                "quiero usar reduce en JavaScript"
            ],
            "responses": [
                "const numeros = [1, 2, 3]; const suma = numeros.reduce((x, y) => x + y); console.log(suma);",
                "const lista = [2, 3, 4]; const producto = lista.reduce((x, y) => x * y); console.log(producto);"
            ]
        },
        {
            "tag": "codigo_enumerate_js",
            "patterns": [
                "ejemplo con enumerate en JavaScript",
                "cómo usar enumerate en JavaScript"
            ],
            "responses": [
                "const lista = ['a', 'b', 'c']; lista.forEach((valor, indice) => { console.log(indice, valor); });",
                "const nombres = ['Ana', 'Luis']; nombres.forEach((nombre, i) => { console.log(`${i}: ${nombre}`); });"
            ]
        },
        {
            "tag": "codigo_decorador_js",
            "patterns": [
                "ejemplo de decorador en JavaScript",
                "quiero usar decoradores en JavaScript"
            ],
            "responses": [
                "function decorador(func) { return function() { console.log('Inicio'); func(); console.log('Fin'); }; } function saludo() { console.log('Hola'); } const saludoDecorado = decorador(saludo); saludoDecorado();",
                "function decorador(func) { return function(...args) { console.log('Antes'); const result = func(...args); console.log('Después'); return result; }; } function suma(a, b) { return a + b; } const sumaDecorada = decorador(suma); console.log(sumaDecorada(2, 3));"
            ]
        },
        {
            "tag": "codigo_matriz",
            "patterns": [
                "cómo crear una matriz",
                "quiero ver matrices en Python"
            ],
            "responses": [
                "matriz = [[1, 2], [3, 4]]; print(matriz)",
                "filas, columnas = 2, 3; matriz = [[0] * columnas for _ in range(filas)]; print(matriz)"
            ]
        },
        {
            "tag": "codigo_grafico",
            "patterns": [
                "ejemplo de gráfico en Python",
                "cómo graficar datos"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2, 3], [4, 5, 6]); plt.show()",
                "import matplotlib.pyplot as plt; plt.bar([1, 2, 3], [4, 5, 6]); plt.show()"
            ]
        },
        {
            "tag": "codigo_re",
            "patterns": [
                "ejemplo de expresiones regulares",
                "quiero usar re en Python"
            ],
            "responses": [
                "import re; texto = \"Hola Mundo\"; print(re.search(\"Mundo\", texto))",
                "import re; cadena = \"abc123\"; print(re.findall(\"\\d+\", cadena))"
            ]
        },
        {
            "tag": "codigo_csv",
            "patterns": [
                "ejemplo con CSV",
                "cómo leer un archivo CSV"
            ],
            "responses": [
                "import csv; with open(\"archivo.csv\") as f: reader = csv.reader(f); for fila in reader: print(fila)",
                "import csv; with open(\"datos.csv\", \"w\", newline=\"\") as f: writer = csv.writer(f); writer.writerow([\"Nombre\", \"Edad\"]); writer.writerow([\"Ana\", 30])"
            ]
        },
        {
            "tag": "codigo_sqlite",
            "patterns": [
                "cómo usar SQLite en Python",
                "ejemplo con base de datos SQLite"
            ],
            "responses": [
                "import sqlite3; con = sqlite3.connect(\"mi_db.db\"); con.execute(\"CREATE TABLE IF NOT EXISTS usuarios (id INTEGER, nombre TEXT)\"); con.close()",
                "import sqlite3; con = sqlite3.connect(\"mi_db.db\"); con.execute(\"INSERT INTO usuarios VALUES (1, 'Juan')\"); con.commit(); con.close()"
            ]
        },
        {
            "tag": "codigo_multihilo",
            "patterns": [
                "ejemplo de multihilo",
                "cómo usar threads en Python"
            ],
            "responses": [
                "import threading; def tarea(): print(\"Hilo en ejecución\"); hilo = threading.Thread(target=tarea); hilo.start()",
                "import threading; def saludar(): print(\"Hola desde un hilo\"); hilo = threading.Thread(target=saludar); hilo.start()"
            ]
        },
        {
            "tag": "codigo_sistema",
            "patterns": [
                "cómo interactuar con el sistema",
                "ejemplo para comandos del sistema"
            ],
            "responses": [
                "import os; print(os.getcwd())",
                "import os; os.system(\"ls\")"
            ]
        },
        {
            "tag": "codigo_hash",
            "patterns": [
                "cómo generar un hash",
                "ejemplo de hash en Python"
            ],
            "responses": [
                "import hashlib; hash = hashlib.md5(b\"texto\").hexdigest(); print(hash)",
                "import hashlib; hash = hashlib.sha256(b\"password\").hexdigest(); print(hash)"
            ]
        },
        {
            "tag": "codigo_hilos_async",
            "patterns": [
                "ejemplo de async",
                "cómo usar async en Python"
            ],
            "responses": [
                "import asyncio; async def main(): print(\"Hola Asyncio\"); asyncio.run(main())",
                "import asyncio; async def saludar(): await asyncio.sleep(1); print(\"Hola Async\"); asyncio.run(saludar())"
            ]
        },
        {
            "tag": "codigo_unit_test",
            "patterns": [
                "cómo usar unittest",
                "ejemplo de pruebas unitarias"
            ],
            "responses": [
                "import unittest; class TestSuma(unittest.TestCase): def test_suma(self): self.assertEqual(1 + 1, 2); unittest.main()",
                "import unittest; class Pruebas(unittest.TestCase): def test_verdadero(self): self.assertTrue(True); unittest.main()"
            ]
        },
        {
            "tag": "codigo_matriz_js",
            "patterns": [
                "cómo crear una matriz en JavaScript",
                "quiero ver matrices en JavaScript"
            ],
            "responses": [
                "let matriz = [[1, 2], [3, 4]]; console.log(matriz);",
                "let filas = 2, columnas = 3; let matriz = Array(filas).fill().map(() => Array(columnas).fill(0)); console.log(matriz);"
            ]
        },
        {
            "tag": "codigo_grafico_js",
            "patterns": [
                "ejemplo de gráfico en JavaScript",
                "cómo graficar datos en JavaScript"
            ],
            "responses": [
                "const ctx = document.getElementById('myChart').getContext('2d'); new Chart(ctx, { type: 'line', data: { labels: [1, 2, 3], datasets: [{ data: [4, 5, 6] }] } });",
                "const ctx = document.getElementById('myChart').getContext('2d'); new Chart(ctx, { type: 'bar', data: { labels: [1, 2, 3], datasets: [{ data: [4, 5, 6] }] } });"
            ]
        },
        {
            "tag": "codigo_re_js",
            "patterns": [
                "ejemplo de expresiones regulares en JavaScript",
                "quiero usar re en JavaScript"
            ],
            "responses": [
                "const texto = 'Hola Mundo'; console.log(/Mundo/.test(texto));",
                "const cadena = 'abc123'; console.log(cadena.match(/\\d+/g));"
            ]
        },
        {
            "tag": "codigo_csv_js",
            "patterns": [
                "ejemplo con CSV en JavaScript",
                "cómo leer un archivo CSV en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.createReadStream('archivo.csv').pipe(require('csv-parser')()).on('data', (fila) => { console.log(fila); });",
                "const fs = require('fs'); const csvWriter = require('csv-writer').createObjectCsvWriter({ path: 'datos.csv', header: [{id: 'Nombre', title: 'Nombre'}, {id: 'Edad', title: 'Edad'}] }); csvWriter.writeRecords([{Nombre: 'Ana', Edad: 30}]);"
            ]
        },
        {
            "tag": "codigo_sqlite_js",
            "patterns": [
                "cómo usar SQLite en JavaScript",
                "ejemplo con base de datos SQLite en JavaScript"
            ],
            "responses": [
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database('./mi_db.db'); db.serialize(() => { db.run('CREATE TABLE IF NOT EXISTS usuarios (id INTEGER, nombre TEXT)'); db.close(); });",
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database('./mi_db.db'); db.serialize(() => { db.run(\"INSERT INTO usuarios VALUES (1, 'Juan')\"); db.commit(); db.close(); });"
            ]
        },
        {
            "tag": "codigo_multihilo_js",
            "patterns": [
                "ejemplo de multihilo en JavaScript",
                "cómo usar threads en JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker('./mi_worker.js'); worker.on('message', (msg) => { console.log(msg); });",
                "const { Worker } = require('worker_threads'); const worker = new Worker(() => { console.log('Hola desde un hilo'); }); worker.postMessage('Start');"
            ]
        },
        {
            "tag": "codigo_sistema_js",
            "patterns": [
                "cómo interactuar con el sistema en JavaScript",
                "ejemplo para comandos del sistema en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readdir('.', (err, files) => { console.log(files); });",
                "const { exec } = require('child_process'); exec('ls', (err, stdout, stderr) => { if (err) { console.error(err); return; } console.log(stdout); });"
            ]
        },
        {
            "tag": "codigo_hash_js",
            "patterns": [
                "cómo generar un hash en JavaScript",
                "ejemplo de hash en JavaScript"
            ],
            "responses": [
                "const crypto = require('crypto'); const hash = crypto.createHash('md5').update('texto').digest('hex'); console.log(hash);",
                "const crypto = require('crypto'); const hash = crypto.createHash('sha256').update('password').digest('hex'); console.log(hash);"
            ]
        },
        {
            "tag": "codigo_hilos_async_js",
            "patterns": [
                "ejemplo de async en JavaScript",
                "cómo usar async en JavaScript"
            ],
            "responses": [
                "const main = async () => { console.log('Hola Asyncio'); }; main();",
                "const saludar = async () => { await new Promise(resolve => setTimeout(resolve, 1000)); console.log('Hola Async'); }; saludar();"
            ]
        },
        {
            "tag": "codigo_unit_test_js",
            "patterns": [
                "cómo usar unittest en JavaScript",
                "ejemplo de pruebas unitarias en JavaScript"
            ],
            "responses": [
                "const assert = require('assert'); assert.strictEqual(1 + 1, 2); console.log('Test passed');",
                "const assert = require('assert'); assert.strictEqual(true, true); console.log('Test passed');"
            ]
        },
        {
            "tag": "codigo_pandas",
            "patterns": [
                "ejemplo con pandas",
                "cómo manejar datos con pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]}); print(df)",
                "import pandas as pd; df = pd.read_csv(\"archivo.csv\"); print(df.head())"
            ]
        },
        {
            "tag": "codigo_numpy",
            "patterns": [
                "cómo usar numpy",
                "ejemplo con numpy"
            ],
            "responses": [
                "import numpy as np; arr = np.array([1, 2, 3]); print(arr)",
                "import numpy as np; matriz = np.zeros((2, 3)); print(matriz)"
            ]
        },
        {
            "tag": "codigo_herencia",
            "patterns": [
                "ejemplo de herencia",
                "cómo usar herencia en Python"
            ],
            "responses": [
                "class Animal: pass; class Perro(Animal): pass",
                "class Vehiculo: pass; class Coche(Vehiculo): pass"
            ]
        },
        {
            "tag": "codigo_pil",
            "patterns": [
                "ejemplo con PIL",
                "cómo manejar imágenes en Python"
            ],
            "responses": [
                "from PIL import Image; img = Image.open(\"imagen.jpg\"); img.show()",
                "from PIL import Image; img = Image.new(\"RGB\", (100, 100), color=\"red\"); img.show()"
            ]
        },
        {
            "tag": "codigo_argv",
            "patterns": [
                "cómo usar argv",
                "ejemplo con argumentos en Python"
            ],
            "responses": [
                "import sys; print(sys.argv)",
                "import sys; print(f\"Primer argumento: {sys.argv[1]}\")"
            ]
        },
        {
            "tag": "codigo_typing",
            "patterns": [
                "cómo usar typing",
                "ejemplo con anotaciones de tipo"
            ],
            "responses": [
                "from typing import List; def suma(lista: List[int]) -> int: return sum(lista)",
                "from typing import Dict; def obtener_valor(dic: Dict[str, int], clave: str) -> int: return dic[clave]"
            ]
        },
        {
            "tag": "codigo_iterable",
            "patterns": [
                "cómo usar un iterable",
                "ejemplo de iterable en Python"
            ],
            "responses": [
                "iterable = iter([1, 2, 3]); print(next(iterable))",
                "iterador = iter(range(5)); print(next(iterador))"
            ]
        },
        {
            "tag": "codigo_sobrecarga",
            "patterns": [
                "cómo usar métodos especiales",
                "ejemplo de sobrecarga en Python"
            ],
            "responses": [
                "class Suma: def __add__(self, otro): return \"Suma personalizada\"; print(Suma() + Suma())",
                "class Vector: def __init__(self, x): self.x = x; def __repr__(self): return f\"Vector({self.x})\"; print(Vector(3))"
            ]
        },
        {
            "tag": "codigo_socket",
            "patterns": [
                "cómo usar sockets",
                "ejemplo con sockets en Python"
            ],
            "responses": [
                "import socket; s = socket.socket(); s.bind((\"localhost\", 8080)); s.listen(1)",
                "import socket; s = socket.socket(); s.connect((\"localhost\", 8080)); print(\"Conectado\")"
            ]
        },
        {
            "tag": "codigo_property_avanzado",
            "patterns": [
                "cómo usar propiedad avanzada",
                "ejemplo avanzado con @property"
            ],
            "responses": [
                "class Circulo: def __init__(self, radio): self._radio = radio; @property def radio(self): return self._radio; c = Circulo(5); print(c.radio)",
                "class Persona: def __init__(self): self._edad = 0; @property def edad(self): return self._edad; p = Persona(); print(p.edad)"
            ]
        },
        {
            "tag": "codigo_pandas_js",
            "patterns": [
                "ejemplo con pandas en JavaScript",
                "cómo manejar datos con pandas en JavaScript"
            ],
            "responses": [
                "const pandas = require('pandas-js'); let df = new pandas.DataFrame({A: [1, 2], B: [3, 4]}); console.log(df);",
                "const pandas = require('pandas-js'); let df = pandas.read_csv('archivo.csv'); console.log(df.head());"
            ]
        },
        {
            "tag": "codigo_numpy_js",
            "patterns": [
                "cómo usar numpy en JavaScript",
                "ejemplo con numpy en JavaScript"
            ],
            "responses": [
                "const ndarray = require('ndarray'); let arr = ndarray([1, 2, 3]); console.log(arr);",
                "const ndarray = require('ndarray'); let matriz = ndarray.zeros([2, 3]); console.log(matriz);"
            ]
        },
        {
            "tag": "codigo_herencia_js",
            "patterns": [
                "ejemplo de herencia en JavaScript",
                "cómo usar herencia en JavaScript"
            ],
            "responses": [
                "class Animal {}; class Perro extends Animal {};",
                "class Vehiculo {}; class Coche extends Vehiculo {};"
            ]
        },
        {
            "tag": "codigo_pil_js",
            "patterns": [
                "ejemplo con PIL en JavaScript",
                "cómo manejar imágenes en JavaScript"
            ],
            "responses": [
                "const sharp = require('sharp'); sharp('imagen.jpg').toBuffer().then(data => { console.log(data); });",
                "const sharp = require('sharp'); sharp({ create: { width: 100, height: 100, channels: 3, background: { r: 255, g: 0, b: 0 } } }).toFile('output.jpg', (err, info) => { console.log(info); });"
            ]
        },
        {
            "tag": "codigo_argv_js",
            "patterns": [
                "cómo usar argv en JavaScript",
                "ejemplo con argumentos en JavaScript"
            ],
            "responses": [
                "const args = process.argv; console.log(args);",
                "const args = process.argv; console.log(`Primer argumento: ${args[2]}`);"
            ]
        },
        {
            "tag": "codigo_typing_js",
            "patterns": [
                "cómo usar typing en JavaScript",
                "ejemplo con anotaciones de tipo en JavaScript"
            ],
            "responses": [
                "function suma(lista) { return lista.reduce((acc, val) => acc + val, 0); };",
                "function obtenerValor(dic, clave) { return dic[clave]; };"
            ]
        },
        {
            "tag": "codigo_iterable_js",
            "patterns": [
                "cómo usar un iterable en JavaScript",
                "ejemplo de iterable en JavaScript"
            ],
            "responses": [
                "let iterable = [1, 2, 3]; for (let value of iterable) { console.log(value); }",
                "let iterador = (function*() { yield 1; yield 2; yield 3; })(); console.log(iterador.next().value);"
            ]
        },
        {
            "tag": "codigo_sobrecarga_js",
            "patterns": [
                "cómo usar métodos especiales en JavaScript",
                "ejemplo de sobrecarga en JavaScript"
            ],
            "responses": [
                "class Suma { add(otro) { return 'Suma personalizada'; } } console.log(new Suma().add(new Suma()));",
                "class Vector { constructor(x) { this.x = x; } toString() { return `Vector(${this.x})`; } } console.log(new Vector(3).toString());"
            ]
        },
        {
            "tag": "codigo_socket_js",
            "patterns": [
                "cómo usar sockets en JavaScript",
                "ejemplo con sockets en JavaScript"
            ],
            "responses": [
                "const net = require('net'); const server = net.createServer(socket => { socket.write('Hola Mundo'); socket.end(); }); server.listen(8080);",
                "const net = require('net'); const client = net.createConnection({ port: 8080 }, () => { console.log('Conectado'); });"
            ]
        },
        {
            "tag": "codigo_property_avanzado_js",
            "patterns": [
                "cómo usar propiedad avanzada en JavaScript",
                "ejemplo avanzado con @property en JavaScript"
            ],
            "responses": [
                "class Circulo { constructor(radio) { this._radio = radio; } get radio() { return this._radio; } } let c = new Circulo(5); console.log(c.radio);",
                "class Persona { constructor() { this._edad = 0; } get edad() { return this._edad; } } let p = new Persona(); console.log(p.edad);"
            ]
        },
        {
            "tag": "codigo_zip_desempaquetar",
            "patterns": [
                "ejemplo de desempaquetar zip",
                "cómo usar zip inverso"
            ],
            "responses": [
                "a, b = zip(*[(1, 'uno'), (2, 'dos')]); print(a, b)",
                "pares = [(1, 'A'), (2, 'B')]; a, b = zip(*pares); print(a, b)"
            ]
        },
        {
            "tag": "codigo_tkinter",
            "patterns": [
                "ejemplo con tkinter",
                "cómo crear interfaces en Python"
            ],
            "responses": [
                "import tkinter as tk; ventana = tk.Tk(); tk.Label(ventana, text='Hola').pack(); ventana.mainloop()",
                "import tkinter as tk; root = tk.Tk(); tk.Button(root, text='Presiona').pack(); root.mainloop()"
            ]
        },
        {
            "tag": "codigo_filtros_numpy",
            "patterns": [
                "cómo filtrar datos en numpy",
                "ejemplo de filtros numpy"
            ],
            "responses": [
                "import numpy as np; arr = np.array([1, 2, 3, 4]); print(arr[arr > 2])",
                "import numpy as np; matriz = np.array([[1, 2], [3, 4]]); print(matriz[matriz % 2 == 0])"
            ]
        },
        {
            "tag": "codigo_multiprocesos",
            "patterns": [
                "ejemplo con multiprocessing",
                "cómo usar multiprocesos en Python"
            ],
            "responses": [
                "from multiprocessing import Process; def tarea(): print(\"Proceso\"); p = Process(target=tarea); p.start(); p.join()",
                "from multiprocessing import Pool; def f(x): return x*x; with Pool(5) as p: print(p.map(f, [1, 2, 3]))"
            ]
        },
        {
            "tag": "codigo_graficas_seaborn",
            "patterns": [
                "cómo usar seaborn",
                "ejemplo de gráficas con seaborn"
            ],
            "responses": [
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.histplot([1, 2, 3, 4]); plt.show()",
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.boxplot(x=[1, 2, 3]); plt.show()"
            ]
        },
        {
            "tag": "codigo_format_string",
            "patterns": [
                "cómo usar format",
                "ejemplo avanzado de format"
            ],
            "responses": [
                "nombre = \"Luis\"; print(\"Hola {}\".format(nombre))",
                "a, b = 5, 10; print(\"La suma de {} y {} es {}\".format(a, b, a + b))"
            ]
        },
        {
            "tag": "codigo_plotly",
            "patterns": [
                "ejemplo con plotly",
                "cómo graficar con plotly"
            ],
            "responses": [
                "import plotly.express as px; fig = px.scatter(x=[1, 2], y=[3, 4]); fig.show()",
                "import plotly.graph_objects as go; fig = go.Figure(data=go.Bar(y=[2, 3])); fig.show()"
            ]
        },
        {
            "tag": "codigo_flask",
            "patterns": [
                "ejemplo con Flask",
                "cómo crear un servidor con Flask"
            ],
            "responses": [
                "from flask import Flask; app = Flask(__name__); @app.route('/') def inicio(): return 'Hola'; app.run()",
                "from flask import Flask; app = Flask(__name__); @app.route('/hello') def saludo(): return 'Hola Mundo'; app.run()"
            ]
        },
        {
            "tag": "codigo_decorator_logger",
            "patterns": [
                "decorador para logueo",
                "ejemplo de logger en Python"
            ],
            "responses": [
                "def logger(func): def wrapper(*args, **kwargs): print(f'Llamada a {func.__name__}'); return func(*args, **kwargs); return wrapper; @logger def saludo(): print(\"Hola\"); saludo()",
                "def log(func): def wrapper(*args): print(f'Args: {args}'); return func(*args); return wrapper; @log def suma(a, b): return a + b; suma(1, 2)"
            ]
        },
        {
            "tag": "codigo_heapq",
            "patterns": [
                "cómo usar heapq",
                "ejemplo de heap en Python"
            ],
            "responses": [
                "import heapq; lista = [3, 1, 4, 1]; heapq.heapify(lista); print(lista)",
                "import heapq; lista = [4, 2, 5]; print(heapq.nlargest(2, lista))"
            ]
        },
        {
            "tag": "codigo_argparse",
            "patterns": [
                "cómo usar argparse",
                "ejemplo de argumentos en consola"
            ],
            "responses": [
                "import argparse; parser = argparse.ArgumentParser(); parser.add_argument('--nombre'); args = parser.parse_args(); print(args.nombre)",
                "import argparse; parser = argparse.ArgumentParser(); parser.add_argument('--edad', type=int); args = parser.parse_args(); print(args.edad)"
            ]
        },
        {
            "tag": "codigo_chain",
            "patterns": [
                "cómo usar chain",
                "ejemplo con itertools.chain"
            ],
            "responses": [
                "from itertools import chain; print(list(chain([1, 2], [3, 4])))",
                "from itertools import chain; a, b = [\"x\"], [\"y\"]; print(list(chain(a, b)))"
            ]
        },
        {
            "tag": "codigo_classmethod",
            "patterns": [
                "cómo usar @classmethod",
                "ejemplo con métodos de clase"
            ],
            "responses": [
                "class Persona: @classmethod def saludo(cls): return \"Hola desde Clase\"; print(Persona.saludo())",
                "class Coche: @classmethod def descripcion(cls): return \"Vehículo\"; print(Coche.descripcion())"
            ]
        },
        {
            "tag": "codigo_staticmethod",
            "patterns": [
                "cómo usar @staticmethod",
                "ejemplo con métodos estáticos"
            ],
            "responses": [
                "class Utilidades: @staticmethod def sumar(a, b): return a + b; print(Utilidades.sumar(5, 3))",
                "class Matematicas: @staticmethod def multiplicar(a, b): return a * b; print(Matematicas.multiplicar(4, 6))"
            ]
        },
        {
            "tag": "codigo_pipeline_pandas",
            "patterns": [
                "cómo usar pipelines con pandas",
                "ejemplo avanzado con pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'a': [1, 2]}); print(df.pipe(lambda x: x+1))",
                "import pandas as pd; df = pd.DataFrame({'a': [1, 2]}); print(df.pipe(print))"
            ]
        },
        {
            "tag": "codigo_registros",
            "patterns": [
                "ejemplo de registro con logging",
                "cómo usar logging"
            ],
            "responses": [
                "import logging; logging.basicConfig(level=logging.INFO); logging.info(\"Mensaje informativo\")",
                "import logging; logging.error(\"Error registrado\")"
            ]
        },
        {
            "tag": "codigo_deepcopy",
            "patterns": [
                "cómo usar deepcopy",
                "ejemplo de copia profunda"
            ],
            "responses": [
                "from copy import deepcopy; lista = [[1], [2]]; copia = deepcopy(lista); print(copia)",
                "from copy import deepcopy; dic = {'a': [1]}; nuevo_dic = deepcopy(dic); print(nuevo_dic)"
            ]
        },
        {
            "tag": "codigo_dask",
            "patterns": [
                "ejemplo con dask",
                "cómo usar dask"
            ],
            "responses": [
                "import dask.array as da; x = da.ones((10, 10), chunks=(5, 5)); print(x.mean().compute())",
                "import dask.dataframe as dd; df = dd.from_pandas(pd.DataFrame({'a': [1, 2]}), npartitions=1); print(df.compute())"
            ]
        },
        {
            "tag": "codigo_zip_desempaquetar_js",
            "patterns": [
                "ejemplo de desempaquetar zip en JavaScript",
                "cómo usar zip inverso en JavaScript"
            ],
            "responses": [
                "let pares = [[1, 'uno'], [2, 'dos']]; let [a, b] = pares[0]; console.log(a, b);",
                "let pares = [[1, 'A'], [2, 'B']]; let [a, b] = pares[0]; console.log(a, b);"
            ]
        },
        {
            "tag": "codigo_tkinter_js",
            "patterns": [
                "ejemplo con tkinter en JavaScript",
                "cómo crear interfaces en JavaScript"
            ],
            "responses": [
                "const { app } = require('electron'); const { BrowserWindow } = require('electron'); let win = new BrowserWindow({ width: 800, height: 600 }); win.loadURL('http://localhost');",
                "const { app } = require('electron'); const { BrowserWindow } = require('electron'); let win = new BrowserWindow({ width: 800, height: 600 }); win.loadURL('http://localhost');"
            ]
        },
        {
            "tag": "codigo_filtros_numpy_js",
            "patterns": [
                "cómo filtrar datos en numpy en JavaScript",
                "ejemplo de filtros en JavaScript"
            ],
            "responses": [
                "const ndarray = require('ndarray'); let arr = ndarray([1, 2, 3, 4]); console.log(arr.data.filter(x => x > 2));",
                "const ndarray = require('ndarray'); let matriz = ndarray([[1, 2], [3, 4]]); console.log(matriz.data.filter(x => x % 2 === 0));"
            ]
        },
        {
            "tag": "codigo_multiprocesos_js",
            "patterns": [
                "ejemplo con multiprocessing en JavaScript",
                "cómo usar multiprocesos en JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker('./worker.js'); worker.on('message', (msg) => console.log(msg));",
                "const { Worker } = require('worker_threads'); const worker = new Worker('./worker.js'); worker.on('message', (msg) => console.log(msg));"
            ]
        },
        {
            "tag": "codigo_graficas_seaborn_js",
            "patterns": [
                "cómo usar seaborn en JavaScript",
                "ejemplo de gráficas con seaborn en JavaScript"
            ],
            "responses": [
                "const plotly = require('plotly.js'); const trace1 = { x: [1, 2, 3], y: [4, 5, 6], type: 'scatter' }; const layout = { title: 'Gráfico de ejemplo' }; Plotly.newPlot('myDiv', [trace1], layout);",
                "const plotly = require('plotly.js'); const trace1 = { x: [1, 2, 3], y: [4, 5, 6], type: 'bar' }; const layout = { title: 'Gráfico de barras' }; Plotly.newPlot('myDiv', [trace1], layout);"
            ]
        },
        {
            "tag": "codigo_format_string_js",
            "patterns": [
                "cómo usar format en JavaScript",
                "ejemplo avanzado de format en JavaScript"
            ],
            "responses": [
                "let nombre = 'Luis'; console.log(`Hola ${nombre}`);",
                "let a = 5, b = 10; console.log(`La suma de ${a} y ${b} es ${a + b}`);"
            ]
        },
        {
            "tag": "codigo_plotly_js",
            "patterns": [
                "ejemplo con plotly en JavaScript",
                "cómo graficar con plotly en JavaScript"
            ],
            "responses": [
                "const plotly = require('plotly.js'); let data = [{ x: [1, 2], y: [3, 4], mode: 'lines' }]; Plotly.newPlot('myDiv', data);",
                "const plotly = require('plotly.js'); let data = [{ x: [1, 2], y: [3, 4], type: 'bar' }]; Plotly.newPlot('myDiv', data);"
            ]
        },
        {
            "tag": "codigo_flask_js",
            "patterns": [
                "ejemplo con Flask en JavaScript",
                "cómo crear un servidor con Flask en JavaScript"
            ],
            "responses": [
                "const express = require('express'); const app = express(); app.get('/', (req, res) => res.send('Hola Mundo')); app.listen(3000);",
                "const express = require('express'); const app = express(); app.get('/hello', (req, res) => res.send('Hola Mundo')); app.listen(3000);"
            ]
        },
        {
            "tag": "codigo_decorator_logger_js",
            "patterns": [
                "decorador para logueo en JavaScript",
                "ejemplo de logger en JavaScript"
            ],
            "responses": [
                "function logger(func) { return function(...args) { console.log(`Llamada a ${func.name}`); return func(...args); }; } const saludo = logger(() => { console.log('Hola'); }); saludo();",
                "function log(func) { return function(...args) { console.log(`Args: ${args}`); return func(...args); }; } const suma = log((a, b) => a + b); suma(1, 2);"
            ]
        },
        {
            "tag": "codigo_heapq_js",
            "patterns": [
                "cómo usar heapq en JavaScript",
                "ejemplo de heap en JavaScript"
            ],
            "responses": [
                "const heapq = require('heapq'); let lista = [3, 1, 4, 1]; heapq.heapify(lista); console.log(lista);",
                "const heapq = require('heapq'); let lista = [4, 2, 5]; console.log(heapq.nlargest(2, lista));"
            ]
        },
        {
            "tag": "codigo_cloud_api",
            "patterns": [
                "ejemplo de llamada a API",
                "cómo consumir una API"
            ],
            "responses": [
                "import requests; r = requests.get('https://jsonplaceholder.typicode.com/todos/1'); print(r.json())",
                "import requests; r = requests.post('https://httpbin.org/post', json={'key': 'value'}); print(r.json())"
            ]
        },
        {
            "tag": "codigo_try_finally",
            "patterns": [
                "cómo usar finally",
                "ejemplo con try-finally"
            ],
            "responses": [
                "try: print(1/0); finally: print(\"Esto siempre se ejecuta\")",
                "try: x = 1; finally: print(\"Limpieza completa\")"
            ]
        },
        {
            "tag": "codigo_itertools_product",
            "patterns": [
                "ejemplo con itertools.product",
                "cómo usar producto cartesiano"
            ],
            "responses": [
                "from itertools import product; print(list(product([1, 2], ['a', 'b'])))",
                "from itertools import product; a, b = [0], [3]; print(list(product(a, b)))"
            ]
        },
        {
            "tag": "codigo_sqlalchemy",
            "patterns": [
                "ejemplo con sqlalchemy",
                "cómo usar sqlalchemy"
            ],
            "responses": [
                "from sqlalchemy import create_engine; engine = create_engine('sqlite:///:memory:'); print(engine)",
                "from sqlalchemy import create_engine; engine = create_engine('sqlite:///base.db'); print(engine)"
            ]
        },
        {
            "tag": "codigo_datetime_avanzado",
            "patterns": [
                "cómo calcular diferencias de fechas",
                "ejemplo avanzado con datetime"
            ],
            "responses": [
                "from datetime import datetime, timedelta; hoy = datetime.now(); futuro = hoy + timedelta(days=5); print(futuro)",
                "from datetime import date; nacimiento = date(2000, 1, 1); hoy = date.today(); print(hoy - nacimiento)"
            ]
        },
        {
            "tag": "codigo_inspect",
            "patterns": [
                "cómo usar inspect",
                "ejemplo para inspeccionar funciones"
            ],
            "responses": [
                "import inspect; def ejemplo(): pass; print(inspect.getsource(ejemplo))",
                "import inspect; print(inspect.ismodule(inspect))"
            ]
        },
        {
            "tag": "codigo_generadores",
            "patterns": [
                "cómo usar generadores",
                "ejemplo con yield en Python"
            ],
            "responses": [
                "def generador(): yield 1; yield 2; for val in generador(): print(val)",
                "def secuencia(): for i in range(3): yield i; print(list(secuencia()))"
            ]
        },
        {
            "tag": "codigo_metodos_magicos",
            "patterns": [
                "ejemplo de métodos mágicos",
                "cómo usar métodos mágicos en Python"
            ],
            "responses": [
                "class Ejemplo: def __str__(self): return 'Ejemplo'; print(Ejemplo())",
                "class Suma: def __add__(self, otro): return 'Suma'; print(Suma() + Suma())"
            ]
        },
        {
            "tag": "codigo_control_memoria",
            "patterns": [
                "cómo liberar memoria en Python",
                "ejemplo de control de memoria"
            ],
            "responses": [
                "import gc; obj = [1, 2]; del obj; gc.collect()",
                "import gc; lista = []; gc.set_debug(gc.DEBUG_LEAK); print(gc.garbage)"
            ]
        },
        {
            "tag": "codigo_serializacion_json",
            "patterns": [
                "cómo usar json en Python",
                "ejemplo de serialización JSON"
            ],
            "responses": [
                "import json; data = {'clave': 'valor'}; print(json.dumps(data))",
                "import json; json_str = '{\"nombre\": \"Juan\"}'; print(json.loads(json_str))"
            ]
        },
        {
            "tag": "codigo_ordenar",
            "patterns": [
                "cómo ordenar listas",
                "ejemplo de sorted en Python"
            ],
            "responses": [
                "lista = [3, 1, 2]; print(sorted(lista))",
                "palabras = ['z', 'a', 'b']; print(sorted(palabras, reverse=True))"
            ]
        },
        {
            "tag": "codigo_cloud_api_js",
            "patterns": [
                "ejemplo de llamada a API en JavaScript",
                "cómo consumir una API en JavaScript"
            ],
            "responses": [
                "const fetch = require('node-fetch'); fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(data => console.log(data));",
                "const fetch = require('node-fetch'); fetch('https://httpbin.org/post', { method: 'POST', body: JSON.stringify({ key: 'value' }), headers: { 'Content-Type': 'application/json' }}).then(response => response.json()).then(data => console.log(data));"
            ]
        },
        {
            "tag": "codigo_try_finally_js",
            "patterns": [
                "cómo usar finally en JavaScript",
                "ejemplo con try-finally en JavaScript"
            ],
            "responses": [
                "try { let result = 1 / 0; } catch (e) { console.error(e); } finally { console.log('Esto siempre se ejecuta'); }",
                "try { let x = 1; } catch (e) { console.error(e); } finally { console.log('Limpieza completa'); }"
            ]
        },
        {
            "tag": "codigo_itertools_product_js",
            "patterns": [
                "ejemplo con itertools.product en JavaScript",
                "cómo usar producto cartesiano en JavaScript"
            ],
            "responses": [
                "const itertools = require('itertools'); let product = itertools.product([1, 2], ['a', 'b']); console.log([...product]);",
                "const itertools = require('itertools'); let product = itertools.product([0], [3]); console.log([...product]);"
            ]
        },
        {
            "tag": "codigo_sqlalchemy_js",
            "patterns": [
                "ejemplo con sqlalchemy en JavaScript",
                "cómo usar sqlalchemy en JavaScript"
            ],
            "responses": [
                "const { Sequelize, DataTypes } = require('sequelize'); const sequelize = new Sequelize('sqlite::memory:'); sequelize.define('User', { name: DataTypes.STRING }); sequelize.sync();",
                "const { Sequelize, DataTypes } = require('sequelize'); const sequelize = new Sequelize('sqlite:///base.db'); sequelize.define('User', { name: DataTypes.STRING }); sequelize.sync();"
            ]
        },
        {
            "tag": "codigo_datetime_avanzado_js",
            "patterns": [
                "cómo calcular diferencias de fechas en JavaScript",
                "ejemplo avanzado con datetime en JavaScript"
            ],
            "responses": [
                "const moment = require('moment'); let hoy = moment(); let futuro = hoy.add(5, 'days'); console.log(futuro.format());",
                "const moment = require('moment'); let nacimiento = moment('2000-01-01'); let hoy = moment(); console.log(hoy.diff(nacimiento, 'days'));"
            ]
        },
        {
            "tag": "codigo_inspect_js",
            "patterns": [
                "cómo usar inspect en JavaScript",
                "ejemplo para inspeccionar funciones en JavaScript"
            ],
            "responses": [
                "const util = require('util'); function ejemplo() { return; } console.log(util.inspect(ejemplo));",
                "const inspect = require('util').inspect; console.log(inspect(require('path')));"
            ]
        },
        {
            "tag": "codigo_generadores_js",
            "patterns": [
                "cómo usar generadores en JavaScript",
                "ejemplo con yield en JavaScript"
            ],
            "responses": [
                "function* generador() { yield 1; yield 2; } let gen = generador(); for (let val of gen) { console.log(val); }",
                "function* secuencia() { for (let i = 0; i < 3; i++) { yield i; } } let gen = secuencia(); console.log([...gen]);"
            ]
        },
        {
            "tag": "codigo_metodos_magicos_js",
            "patterns": [
                "ejemplo de métodos mágicos en JavaScript",
                "cómo usar métodos mágicos en JavaScript"
            ],
            "responses": [
                "class Ejemplo { toString() { return 'Ejemplo'; } } console.log(new Ejemplo());",
                "class Suma { [Symbol.toPrimitive](hint) { return 'Suma personalizada'; } } console.log(new Suma() + new Suma());"
            ]
        },
        {
            "tag": "codigo_control_memoria_js",
            "patterns": [
                "cómo liberar memoria en JavaScript",
                "ejemplo de control de memoria en JavaScript"
            ],
            "responses": [
                "global.gc(); let obj = [1, 2]; obj = null; global.gc();",
                "let lista = []; console.log('Garbage collection set: ', global.gc);"
            ]
        },
        {
            "tag": "codigo_serializacion_json_js",
            "patterns": [
                "cómo usar json en JavaScript",
                "ejemplo de serialización JSON en JavaScript"
            ],
            "responses": [
                "const json = JSON.stringify({ clave: 'valor' }); console.log(json);",
                "const jsonStr = '{\"nombre\": \"Juan\"}'; const obj = JSON.parse(jsonStr); console.log(obj);"
            ]
        },
        {
            "tag": "codigo_ordenar_js",
            "patterns": [
                "cómo ordenar listas en JavaScript",
                "ejemplo de sorted en JavaScript"
            ],
            "responses": [
                "let lista = [3, 1, 2]; console.log(lista.sort());",
                "let palabras = ['z', 'a', 'b']; console.log(palabras.sort((a, b) => b.localeCompare(a)));"
            ]
        },
        {
            "tag": "codigo_operadores_funcionales",
            "patterns": [
                "ejemplo de map en Python",
                "cómo usar operadores funcionales"
            ],
            "responses": [
                "nums = [1, 2]; print(list(map(lambda x: x**2, nums)))",
                "palabras = ['hola', 'mundo']; print(list(map(str.upper, palabras)))"
            ]
        },
        {
            "tag": "codigo_excepciones_personalizadas",
            "patterns": [
                "cómo crear excepciones personalizadas",
                "ejemplo de excepciones personalizadas"
            ],
            "responses": [
                "class MiError(Exception): pass; raise MiError('Error personalizado')",
                "class CustomError(Exception): pass; try: raise CustomError('Oops'); except CustomError as e: print(e)"
            ]
        },
        {
            "tag": "codigo_asincronia",
            "patterns": [
                "cómo usar async en Python",
                "ejemplo de asincronía"
            ],
            "responses": [
                "import asyncio; async def saludo(): print('Hola'); asyncio.run(saludo())",
                "import asyncio; async def tarea(): await asyncio.sleep(1); print('Hecho'); asyncio.run(tarea())"
            ]
        },
        {
            "tag": "codigo_web_scraping",
            "patterns": [
                "cómo hacer web scraping",
                "ejemplo con BeautifulSoup"
            ],
            "responses": [
                "from bs4 import BeautifulSoup; html = '<h1>Hola</h1>'; soup = BeautifulSoup(html, 'html.parser'); print(soup.h1.text)",
                "import requests; r = requests.get('https://example.com'); print(r.status_code)"
            ]
        },
        {
            "tag": "codigo_list_comprehension",
            "patterns": [
                "cómo usar list comprehension",
                "ejemplo de listas por comprensión"
            ],
            "responses": [
                "nums = [1, 2, 3]; print([x*2 for x in nums])",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "codigo_multithreading",
            "patterns": [
                "cómo usar multithreading",
                "ejemplo con hilos en Python"
            ],
            "responses": [
                "import threading; def tarea(): print('Hilo ejecutado'); t = threading.Thread(target=tarea); t.start()",
                "import threading; t = threading.Thread(target=lambda: print('Hola')); t.start()"
            ]
        },
        {
            "tag": "codigo_operadores_funcionales_js",
            "patterns": [
                "ejemplo de map en JavaScript",
                "cómo usar operadores funcionales en JavaScript"
            ],
            "responses": [
                "const nums = [1, 2]; console.log(nums.map(x => x ** 2));",
                "const palabras = ['hola', 'mundo']; console.log(palabras.map(str => str.toUpperCase()));"
            ]
        },
        {
            "tag": "codigo_excepciones_personalizadas_js",
            "patterns": [
                "cómo crear excepciones personalizadas en JavaScript",
                "ejemplo de excepciones personalizadas en JavaScript"
            ],
            "responses": [
                "class MiError extends Error { constructor(message) { super(message); this.name = 'MiError'; }}; throw new MiError('Error personalizado');",
                "class CustomError extends Error { constructor(message) { super(message); this.name = 'CustomError'; }}; try { throw new CustomError('Oops'); } catch (e) { console.log(e.message); }"
            ]
        },
        {
            "tag": "codigo_asincronia_js",
            "patterns": [
                "cómo usar async en JavaScript",
                "ejemplo de asincronía en JavaScript"
            ],
            "responses": [
                "const saludo = async () => { console.log('Hola'); }; saludo();",
                "const tarea = async () => { await new Promise(resolve => setTimeout(resolve, 1000)); console.log('Hecho'); }; tarea();"
            ]
        },
        {
            "tag": "codigo_web_scraping_js",
            "patterns": [
                "cómo hacer web scraping en JavaScript",
                "ejemplo con BeautifulSoup en JavaScript"
            ],
            "responses": [
                "const fetch = require('node-fetch'); fetch('https://example.com').then(response => response.text()).then(html => { const cheerio = require('cheerio'); const $ = cheerio.load(html); console.log($('h1').text()); });",
                "const fetch = require('node-fetch'); fetch('https://example.com').then(response => response.json()).then(data => { console.log(data); });"
            ]
        },
        {
            "tag": "codigo_list_comprehension_js",
            "patterns": [
                "cómo usar list comprehension en JavaScript",
                "ejemplo de listas por comprensión en JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.map(x => x * 2));",
                "const pares = [...Array(10).keys()].filter(x => x % 2 === 0); console.log(pares);"
            ]
        },
        {
            "tag": "codigo_multithreading_js",
            "patterns": [
                "cómo usar multithreading en JavaScript",
                "ejemplo con hilos en JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker(() => { console.log('Hilo ejecutado'); });",
                "const { Worker } = require('worker_threads'); const worker = new Worker(() => { console.log('Hola'); });"
            ]
        },
        {
            "tag": "codigo_ordenar_diccionarios",
            "patterns": [
                "cómo ordenar un diccionario",
                "ejemplo con sorted en diccionarios"
            ],
            "responses": [
                "dic = {'a': 2, 'b': 1}; print(dict(sorted(dic.items())))",
                "datos = {'x': 10, 'y': 5}; print(sorted(datos.items(), key=lambda x: x[1]))"
            ]
        },
        {
            "tag": "codigo_datasets_numpy",
            "patterns": [
                "ejemplo de datasets con numpy",
                "cómo generar datos en numpy"
            ],
            "responses": [
                "import numpy as np; data = np.random.rand(100); print(data)",
                "import numpy as np; arr = np.linspace(0, 1, 10); print(arr)"
            ]
        },
        {
            "tag": "codigo_graficas_matplotlib",
            "patterns": [
                "cómo graficar con matplotlib",
                "ejemplo con matplotlib"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2], [3, 4]); plt.show()",
                "import matplotlib.pyplot as plt; plt.bar(['A', 'B'], [3, 5]); plt.show()"
            ]
        },
        {
            "tag": "codigo_captura_teclado",
            "patterns": [
                "cómo capturar teclas",
                "ejemplo con keyboard"
            ],
            "responses": [
                "import keyboard; print('Presiona una tecla:'); tecla = keyboard.read_key(); print(tecla)",
                "import keyboard; keyboard.add_hotkey('ctrl+c', lambda: print('Copiado')); keyboard.wait()"
            ]
        },
        {
            "tag": "codigo_archivos_csv",
            "patterns": [
                "cómo leer archivos CSV",
                "ejemplo con pandas y CSV"
            ],
            "responses": [
                "import pandas as pd; df = pd.read_csv('archivo.csv'); print(df.head())",
                "import csv; with open('archivo.csv') as f: lector = csv.reader(f); print(list(lector))"
            ]
        },
        {
            "tag": "codigo_filtrado_pandas",
            "patterns": [
                "cómo filtrar datos con pandas",
                "ejemplo avanzado con pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'A': [1, 2, 3]}); print(df[df['A'] > 1])",
                "import pandas as pd; datos = pd.DataFrame({'edad': [10, 20, 30]}); print(datos[datos['edad'] > 18])"
            ]
        },
        {
            "tag": "codigo_propiedades_herencia",
            "patterns": [
                "cómo usar herencia con propiedades",
                "ejemplo de herencia avanzada"
            ],
            "responses": [
                "class Padre: @property def saludo(self): return 'Hola'; class Hijo(Padre): pass; print(Hijo().saludo)",
                "class A: def metodo(self): return 'A'; class B(A): pass; print(B().metodo())"
            ]
        },
        {
            "tag": "codigo_decorator_cache",
            "patterns": [
                "cómo usar lru_cache",
                "ejemplo con caché en Python"
            ],
            "responses": [
                "from functools import lru_cache; @lru_cache def fib(n): return n if n <= 1 else fib(n-1) + fib(n-2); print(fib(10))",
                "from functools import lru_cache; @lru_cache def suma(a, b): return a + b; print(suma(2, 3))"
            ]
        },
        {
            "tag": "codigo_ordenar_diccionarios_js",
            "patterns": [
                "cómo ordenar un diccionario en JavaScript",
                "ejemplo con sorted en diccionarios en JavaScript"
            ],
            "responses": [
                "const dic = {'a': 2, 'b': 1}; console.log(Object.fromEntries(Object.entries(dic).sort()))",
                "const datos = {'x': 10, 'y': 5}; console.log(Object.fromEntries(Object.entries(datos).sort((a, b) => a[1] - b[1])))"
            ]
        },
        {
            "tag": "codigo_datasets_numpy_js",
            "patterns": [
                "ejemplo de datasets con JavaScript",
                "cómo generar datos en JavaScript"
            ],
            "responses": [
                "const data = Array.from({length: 100}, () => Math.random()); console.log(data)",
                "const arr = Array.from({length: 10}, (_, i) => i / 9); console.log(arr)"
            ]
        },
        {
            "tag": "codigo_graficas_matplotlib_js",
            "patterns": [
                "cómo graficar con JavaScript",
                "ejemplo con gráficos en JavaScript"
            ],
            "responses": [
                "const plotly = require('plotly.js'); plotly.newPlot('grafico', [{ x: [1, 2], y: [3, 4], type: 'scatter' }]);",
                "const plotly = require('plotly.js'); plotly.newPlot('grafico', [{ x: ['A', 'B'], y: [3, 5], type: 'bar' }]);"
            ]
        },
        {
            "tag": "codigo_captura_teclado_js",
            "patterns": [
                "cómo capturar teclas en JavaScript",
                "ejemplo con captura de teclas en JavaScript"
            ],
            "responses": [
                "const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); rl.question('Presiona una tecla: ', (tecla) => { console.log(tecla); rl.close(); });",
                "const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); rl.on('line', (input) => { if (input === 'ctrl+c') { console.log('Copiado'); } });"
            ]
        },
        {
            "tag": "codigo_archivos_csv_js",
            "patterns": [
                "cómo leer archivos CSV en JavaScript",
                "ejemplo con CSV en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); const csv = require('csv-parser'); fs.createReadStream('archivo.csv').pipe(csv()).on('data', (row) => { console.log(row); });",
                "const fs = require('fs'); const readline = require('readline'); const rl = readline.createInterface({ input: fs.createReadStream('archivo.csv'), output: process.stdout }); rl.on('line', (line) => { console.log(line); });"
            ]
        },
        {
            "tag": "codigo_filtrado_pandas_js",
            "patterns": [
                "cómo filtrar datos con JavaScript",
                "ejemplo avanzado con filtros en JavaScript"
            ],
            "responses": [
                "const df = [{A: 1}, {A: 2}, {A: 3}]; const filtered = df.filter(row => row.A > 1); console.log(filtered);",
                "const datos = [{edad: 10}, {edad: 20}, {edad: 30}]; const filtered = datos.filter(row => row.edad > 18); console.log(filtered);"
            ]
        },
        {
            "tag": "codigo_propiedades_herencia_js",
            "patterns": [
                "cómo usar herencia con propiedades en JavaScript",
                "ejemplo de herencia avanzada en JavaScript"
            ],
            "responses": [
                "class Padre { get saludo() { return 'Hola'; }}; class Hijo extends Padre {}; console.log(new Hijo().saludo);",
                "class A { metodo() { return 'A'; }}; class B extends A {}; console.log(new B().metodo());"
            ]
        },
        {
            "tag": "codigo_decorator_cache_js",
            "patterns": [
                "cómo usar lru_cache en JavaScript",
                "ejemplo con caché en JavaScript"
            ],
            "responses": [
                "const memoize = (fn) => { const cache = new Map(); return (...args) => { const key = JSON.stringify(args); if (!cache.has(key)) { cache.set(key, fn(...args)); } return cache.get(key); }; }; const fib = memoize(n => n <= 1 ? n : fib(n-1) + fib(n-2)); console.log(fib(10));",
                "const memoize = (fn) => { const cache = new Map(); return (...args) => { const key = args.join(','); if (!cache.has(key)) { cache.set(key, fn(...args)); } return cache.get(key); }; }; const suma = memoize((a, b) => a + b); console.log(suma(2, 3));"
            ]
        },
        {
            "tag": "codigo_collections_deque",
            "patterns": [
                "cómo usar deque",
                "ejemplo con collections.deque"
            ],
            "responses": [
                "from collections import deque; d = deque([1, 2]); d.append(3); print(d)",
                "from collections import deque; d = deque([1, 2]); d.popleft(); print(d)"
            ]
        },
        {
            "tag": "codigo_parseo_fechas",
            "patterns": [
                "cómo parsear fechas",
                "ejemplo de datetime parsing"
            ],
            "responses": [
                "from datetime import datetime; fecha = datetime.strptime('2025-01-02', '%Y-%m-%d'); print(fecha)",
                "from datetime import datetime; print(datetime.strptime('12/31/99', '%m/%d/%y'))"
            ]
        },
        {
            "tag": "codigo_sqlite",
            "patterns": [
                "cómo usar sqlite",
                "ejemplo con bases de datos SQLite"
            ],
            "responses": [
                "import sqlite3; conn = sqlite3.connect(':memory:'); conn.execute('CREATE TABLE test (id INT)'); conn.close()",
                "import sqlite3; db = sqlite3.connect('mi_db.db'); db.execute('CREATE TABLE ejemplo (id INT)'); db.close()"
            ]
        },
        {
            "tag": "codigo_re_mach",
            "patterns": [
                "cómo usar re.match",
                "ejemplo de regex con match"
            ],
            "responses": [
                "import re; m = re.match('a', 'abc'); print(m.group(0))",
                "import re; print(re.match(r'\\d+', '123abc').group())"
            ]
        },
        {
            "tag": "codigo_comparacion_set",
            "patterns": [
                "cómo comparar conjuntos",
                "ejemplo con sets en Python"
            ],
            "responses": [
                "set1, set2 = {1, 2}, {2, 3}; print(set1 & set2)",
                "conj1, conj2 = {3, 4}, {4, 5}; print(conj1 | conj2)"
            ]
        },
        {
            "tag": "codigo_recursividad",
            "patterns": [
                "cómo usar recursividad",
                "ejemplo de función recursiva"
            ],
            "responses": [
                "def factorial(n): return 1 if n == 0 else n * factorial(n - 1); print(factorial(5))",
                "def suma(n): return n if n == 0 else n + suma(n - 1); print(suma(10))"
            ]
        },
        {
            "tag": "codigo_merge_diccionarios",
            "patterns": [
                "cómo combinar diccionarios",
                "ejemplo de merge de diccionarios en Python"
            ],
            "responses": [
                "dict1, dict2 = {'a': 1}, {'b': 2}; print({**dict1, **dict2})",
                "dict1, dict2 = {'x': 10}, {'y': 20}; dict1.update(dict2); print(dict1)"
            ]
        },
        {
            "tag": "codigo_collections_deque_js",
            "patterns": [
                "cómo usar deque en JavaScript",
                "ejemplo con collections.deque en JavaScript"
            ],
            "responses": [
                "const deque = require('collections/deque'); const d = new deque([1, 2]); d.push(3); console.log(d);",
                "const deque = require('collections/deque'); const d = new deque([1, 2]); d.shift(); console.log(d);"
            ]
        },
        {
            "tag": "codigo_parseo_fechas_js",
            "patterns": [
                "cómo parsear fechas en JavaScript",
                "ejemplo de datetime parsing en JavaScript"
            ],
            "responses": [
                "const moment = require('moment'); const fecha = moment('2025-01-02', 'YYYY-MM-DD'); console.log(fecha.toString());",
                "const moment = require('moment'); console.log(moment('12/31/99', 'MM/DD/YY').toString());"
            ]
        },
        {
            "tag": "codigo_sqlite_js",
            "patterns": [
                "cómo usar sqlite en JavaScript",
                "ejemplo con bases de datos SQLite en JavaScript"
            ],
            "responses": [
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database(':memory:'); db.run('CREATE TABLE test (id INT)'); db.close();",
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database('mi_db.db'); db.run('CREATE TABLE ejemplo (id INT)'); db.close();"
            ]
        },
        {
            "tag": "codigo_re_mach_js",
            "patterns": [
                "cómo usar re.match en JavaScript",
                "ejemplo de regex con match en JavaScript"
            ],
            "responses": [
                "const regex = /^a/; const m = regex.exec('abc'); console.log(m[0]);",
                "const regex = /\\d+/; console.log(regex.exec('123abc')[0]);"
            ]
        },
        {
            "tag": "codigo_comparacion_set_js",
            "patterns": [
                "cómo comparar conjuntos en JavaScript",
                "ejemplo con sets en JavaScript"
            ],
            "responses": [
                "const set1 = new Set([1, 2]), set2 = new Set([2, 3]); console.log(new Set([...set1].filter(x => set2.has(x))));",
                "const conj1 = new Set([3, 4]), conj2 = new Set([4, 5]); console.log(new Set([...conj1, ...conj2]));"
            ]
        },
        {
            "tag": "codigo_recursividad_js",
            "patterns": [
                "cómo usar recursividad en JavaScript",
                "ejemplo de función recursiva en JavaScript"
            ],
            "responses": [
                "function factorial(n) { return n === 0 ? 1 : n * factorial(n - 1); } console.log(factorial(5));",
                "function suma(n) { return n === 0 ? n : n + suma(n - 1); } console.log(suma(10));"
            ]
        },
        {
            "tag": "codigo_merge_diccionarios_js",
            "patterns": [
                "cómo combinar diccionarios en JavaScript",
                "ejemplo de merge de diccionarios en JavaScript"
            ],
            "responses": [
                "const dict1 = {a: 1}, dict2 = {b: 2}; console.log({...dict1, ...dict2});",
                "const dict1 = {x: 10}, dict2 = {y: 20}; Object.assign(dict1, dict2); console.log(dict1);"
            ]
        },
        {
            "tag": "codigo_iterador_personalizado",
            "patterns": [
                "cómo crear un iterador personalizado",
                "ejemplo de iteradores en Python"
            ],
            "responses": [
                "class Iterador: def __init__(self, max): self.max = max; self.n = 0; def __iter__(self): return self; def __next__(self): if self.n < self.max: val = self.n; self.n += 1; return val; else: raise StopIteration(); for i in Iterador(3): print(i)",
                "class Contador: def __init__(self): self.valor = 0; def __iter__(self): return self; def __next__(self): self.valor += 1; if self.valor > 5: raise StopIteration(); return self.valor; for num in Contador(): print(num)"
            ]
        },
        {
            "tag": "codigo_diccionarios_comprehension",
            "patterns": [
                "cómo usar diccionarios por comprensión",
                "ejemplo de dict comprehension"
            ],
            "responses": [
                "numeros = [1, 2, 3]; print({x: x**2 for x in numeros})",
                "pares = [2, 4, 6]; print({x: x//2 for x in pares})"
            ]
        },
        {
            "tag": "codigo_palabras_palindromas",
            "patterns": [
                "cómo verificar si una palabra es un palíndromo",
                "ejemplo de palíndromos en Python"
            ],
            "responses": [
                "def es_palindromo(palabra): return palabra == palabra[::-1]; print(es_palindromo('radar'))",
                "texto = 'anilina'; print(texto == texto[::-1])"
            ]
        },
        {
            "tag": "codigo_hash_archivo",
            "patterns": [
                "cómo calcular hash de un archivo",
                "ejemplo de hashlib"
            ],
            "responses": [
                "import hashlib; with open('archivo.txt', 'rb') as f: print(hashlib.md5(f.read()).hexdigest())",
                "import hashlib; data = b'datos'; print(hashlib.sha256(data).hexdigest())"
            ]
        },
        {
            "tag": "codigo_guardar_datos_pickle",
            "patterns": [
                "cómo guardar datos con pickle",
                "ejemplo de serialización con pickle"
            ],
            "responses": [
                "import pickle; data = {'clave': 'valor'}; with open('data.pkl', 'wb') as f: pickle.dump(data, f)",
                "import pickle; datos = [1, 2, 3]; with open('datos.pkl', 'wb') as f: pickle.dump(datos, f)"
            ]
        },
        {
            "tag": "codigo_decorator_simple",
            "patterns": [
                "cómo usar un decorador simple",
                "ejemplo de decorador en Python"
            ],
            "responses": [
                "def decorador(func): def wrapper(): print('Inicio'); func(); print('Fin'); return wrapper; @decorador def saludar(): print('Hola'); saludar()",
                "def debug(func): def wrapper(*args): print(f'Args: {args}'); return func(*args); return wrapper; @debug def sumar(a, b): return a + b; sumar(2, 3)"
            ]
        },
        {
            "tag": "codigo_bases_clase",
            "patterns": [
                "cómo definir bases en clases",
                "ejemplo de herencia múltiple"
            ],
            "responses": [
                "class Base1: pass; class Base2: pass; class Hija(Base1, Base2): pass; print(Hija.mro())",
                "class Padre: pass; class Madre: pass; class Hijo(Padre, Madre): pass; print(Hijo.__bases__)"
            ]
        },
        {
            "tag": "codigo_metaclass",
            "patterns": [
                "cómo usar metaclases",
                "ejemplo de metaclases en Python"
            ],
            "responses": [
                "class Meta(type): def __new__(cls, name, bases, dct): dct['nuevo_atributo'] = 'valor'; return super().__new__(cls, name, bases, dct); class Ejemplo(metaclass=Meta): pass; print(Ejemplo.nuevo_atributo)",
                "class Meta(type): def __call__(cls, *args, **kwargs): print('Clase creada'); return super().__call__(*args, **kwargs); class Ejemplo(metaclass=Meta): pass; obj = Ejemplo()"
            ]
        },
        {
            "tag": "codigo_suma_matrices",
            "patterns": [
                "cómo sumar matrices",
                "ejemplo de suma de matrices en Python"
            ],
            "responses": [
                "import numpy as np; m1 = np.array([[1, 2], [3, 4]]); m2 = np.array([[5, 6], [7, 8]]); print(m1 + m2)",
                "m1, m2 = [[1, 2], [3, 4]], [[5, 6], [7, 8]]; print([[m1[i][j] + m2[i][j] for j in range(len(m1[0]))] for i in range(len(m1))])"
            ]
        },
        {
            "tag": "codigo_regex_extraer_numeros",
            "patterns": [
                "cómo extraer números con regex",
                "ejemplo de regex para números"
            ],
            "responses": [
                "import re; texto = 'La fecha es 2025'; print(re.findall(r'\\d+', texto))",
                "import re; data = 'A1 B2 C3'; print(re.findall(r'\\d', data))"
            ]
        },
        {
            "tag": "codigo_iterador_personalizado_js",
            "patterns": [
                "cómo crear un iterador personalizado en JavaScript",
                "ejemplo de iteradores en JavaScript"
            ],
            "responses": [
                "class Iterador { constructor(max) { this.max = max; this.n = 0; } [Symbol.iterator]() { return this; } next() { if (this.n < this.max) { const val = this.n; this.n += 1; return { value: val, done: false }; } else { return { done: true }; } } } const iter = new Iterador(3); for (let i of iter) { console.log(i); }",
                "class Contador { constructor() { this.valor = 0; } [Symbol.iterator]() { return this; } next() { this.valor += 1; if (this.valor > 5) { return { done: true }; } return { value: this.valor, done: false }; } } for (let num of new Contador()) { console.log(num); }"
            ]
        },
        {
            "tag": "codigo_diccionarios_comprehension_js",
            "patterns": [
                "cómo usar diccionarios por comprensión en JavaScript",
                "ejemplo de dict comprehension en JavaScript"
            ],
            "responses": [
                "const numeros = [1, 2, 3]; const dict = Object.fromEntries(numeros.map(x => [x, x**2])); console.log(dict);",
                "const pares = [2, 4, 6]; const dict = Object.fromEntries(pares.map(x => [x, x // 2])); console.log(dict);"
            ]
        },
        {
            "tag": "codigo_palabras_palindromas_js",
            "patterns": [
                "cómo verificar si una palabra es un palíndromo en JavaScript",
                "ejemplo de palíndromos en JavaScript"
            ],
            "responses": [
                "function esPalindromo(palabra) { return palabra === palabra.split('').reverse().join(''); } console.log(esPalindromo('radar'));",
                "const texto = 'anilina'; console.log(texto === texto.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "codigo_hash_archivo_js",
            "patterns": [
                "cómo calcular hash de un archivo en JavaScript",
                "ejemplo de hashlib en JavaScript"
            ],
            "responses": [
                "const crypto = require('crypto'); const fs = require('fs'); const hash = crypto.createHash('md5'); const archivo = fs.readFileSync('archivo.txt'); hash.update(archivo); console.log(hash.digest('hex'));",
                "const crypto = require('crypto'); const data = Buffer.from('datos'); const hash = crypto.createHash('sha256'); hash.update(data); console.log(hash.digest('hex'));"
            ]
        },
        {
            "tag": "codigo_guardar_datos_pickle_js",
            "patterns": [
                "cómo guardar datos con pickle en JavaScript",
                "ejemplo de serialización con pickle en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); const pickle = require('picklejs'); const data = {clave: 'valor'}; const buffer = pickle.dumps(data); fs.writeFileSync('data.pkl', buffer);",
                "const fs = require('fs'); const pickle = require('picklejs'); const datos = [1, 2, 3]; const buffer = pickle.dumps(datos); fs.writeFileSync('datos.pkl', buffer);"
            ]
        },
        {
            "tag": "codigo_decorator_simple_js",
            "patterns": [
                "cómo usar un decorador simple en JavaScript",
                "ejemplo de decorador en JavaScript"
            ],
            "responses": [
                "function decorador(func) { return function() { console.log('Inicio'); func(); console.log('Fin'); }; } function saludar() { console.log('Hola'); } const saludo = decorador(saludar); saludo();",
                "function debug(func) { return function(...args) { console.log('Args:', args); return func(...args); }; } function sumar(a, b) { return a + b; } const suma = debug(sumar); suma(2, 3);"
            ]
        },
        {
            "tag": "codigo_bases_clase_js",
            "patterns": [
                "cómo definir bases en clases en JavaScript",
                "ejemplo de herencia múltiple en JavaScript"
            ],
            "responses": [
                "class Base1 {}; class Base2 {}; class Hija extends Base1 {}; Object.getPrototypeOf(Hija);",
                "class Padre {}; class Madre {}; class Hijo extends Padre {}; class Hija extends Madre {}; console.log(Hijo.__proto__.constructor === Padre);"
            ]
        },
        {
            "tag": "codigo_metaclass_js",
            "patterns": [
                "cómo usar metaclases en JavaScript",
                "ejemplo de metaclases en JavaScript"
            ],
            "responses": [
                "class Meta { static create(name, bases, dct) { dct.nuevoAtributo = 'valor'; return dct; } } class Ejemplo {}; console.log(Ejemplo.nuevoAtributo);",
                "class Meta { static call(...args) { console.log('Clase creada'); return new this(...args); } } class Ejemplo {}; const obj = new Ejemplo();"
            ]
        },
        {
            "tag": "codigo_suma_matrices_js",
            "patterns": [
                "cómo sumar matrices en JavaScript",
                "ejemplo de suma de matrices en JavaScript"
            ],
            "responses": [
                "const m1 = [[1, 2], [3, 4]]; const m2 = [[5, 6], [7, 8]]; const suma = m1.map((row, i) => row.map((cell, j) => cell + m2[i][j])); console.log(suma);",
                "const m1 = [[1, 2], [3, 4]]; const m2 = [[5, 6], [7, 8]]; const suma = []; for (let i = 0; i < m1.length; i++) { suma.push([]); for (let j = 0; j < m1[i].length; j++) { suma[i].push(m1[i][j] + m2[i][j]); } } console.log(suma);"
            ]
        },
        {
            "tag": "codigo_regex_extraer_numeros_js",
            "patterns": [
                "cómo extraer números con regex en JavaScript",
                "ejemplo de regex para números en JavaScript"
            ],
            "responses": [
                "const texto = 'La fecha es 2025'; const regex = /\\d+/g; console.log(texto.match(regex));",
                "const data = 'A1 B2 C3'; const regex = /\\d+/g; console.log(data.match(regex));"
            ]
        },
        {
            "tag": "codigo_animaciones_matplotlib",
            "patterns": [
                "cómo hacer animaciones",
                "ejemplo de animación con matplotlib"
            ],
            "responses": [
                "import matplotlib.animation as anim; # Insertar lógica de animación aquí",
                "import matplotlib.pyplot as plt; # Generar animación usando FuncAnimation"
            ]
        },
        {
            "tag": "codigo_secuencia_fibonacci",
            "patterns": [
                "cómo generar Fibonacci",
                "ejemplo de secuencia Fibonacci"
            ],
            "responses": [
                "def fib(n): return 1 if n in (1, 2) else fib(n - 1) + fib(n - 2); print(fib(5))",
                "nums = [0, 1]; [nums.append(nums[-2] + nums[-1]) for _ in range(8)]; print(nums)"
            ]
        },
        {
            "tag": "codigo_simple_socket",
            "patterns": [
                "cómo crear un socket",
                "ejemplo de socket simple en Python"
            ],
            "responses": [
                "import socket; s = socket.socket(); s.bind(('localhost', 8080)); s.listen(1); conn, addr = s.accept(); print('Conexión desde', addr)",
                "import socket; c = socket.socket(); c.connect(('localhost', 8080)); print('Conexión establecida')"
            ]
        },
        {
            "tag": "codigo_argumentos_varios",
            "patterns": [
                "cómo usar *args y **kwargs",
                "ejemplo de argumentos variables"
            ],
            "responses": [
                "def demo(*args, **kwargs): print(args, kwargs); demo(1, 2, x=3, y=4)",
                "def multiplicar(*nums): prod = 1; for n in nums: prod *= n; return prod; print(multiplicar(2, 3, 4))"
            ]
        },
        {
            "tag": "codigo_ordenar_tuplas",
            "patterns": [
                "cómo ordenar una lista de tuplas",
                "ejemplo con sorted y tuplas"
            ],
            "responses": [
                "datos = [(1, 'A'), (2, 'B')]; print(sorted(datos, key=lambda x: x[1]))",
                "pares = [(1, 2), (3, 4)]; print(sorted(pares, key=lambda x: -x[0]))"
            ]
        },
        {
            "tag": "codigo_multiprocesamiento",
            "patterns": [
                "cómo usar multiprocesamiento",
                "ejemplo con multiprocessing"
            ],
            "responses": [
                "from multiprocessing import Process; def tarea(): print('Proceso ejecutado'); p = Process(target=tarea); p.start(); p.join()",
                "from multiprocessing import Pool; def cuadrado(n): return n**2; with Pool(2) as pool: print(pool.map(cuadrado, [1, 2, 3]))"
            ]
        },
        {
            "tag": "codigo_iter_combinaciones",
            "patterns": [
                "cómo generar combinaciones",
                "ejemplo con itertools"
            ],
            "responses": [
                "from itertools import combinations; print(list(combinations([1, 2, 3], 2)))",
                "from itertools import permutations; print(list(permutations('abc', 2)))"
            ]
        },
        {
            "tag": "codigo_reemplazo_texto",
            "patterns": [
                "cómo reemplazar texto",
                "ejemplo de reemplazo con regex"
            ],
            "responses": [
                "import re; texto = 'Hola Mundo'; print(re.sub('Mundo', 'Python', texto))",
                "import re; frase = 'Python es fácil'; print(re.sub(r'fácil', 'genial', frase))"
            ]
        },
        {
            "tag": "codigo_conversion_tipo",
            "patterns": [
                "cómo convertir tipos",
                "ejemplo de casting en Python"
            ],
            "responses": [
                "num = '123'; print(int(num))",
                "flt = '3.14'; print(float(flt))"
            ]
        },
        {
            "tag": "codigo_texto_html",
            "patterns": [
                "cómo generar texto HTML",
                "ejemplo básico de HTML en Python"
            ],
            "responses": [
                "html = f'<p>{\"Hola\"}</p>'; print(html)",
                "text = 'Python'; print(f'<h1>{text}</h1>')"
            ]
        },
        {
            "tag": "codigo_animaciones_matplotlib_js",
            "patterns": [
                "cómo hacer animaciones en JavaScript",
                "ejemplo de animación con matplotlib en JavaScript"
            ],
            "responses": [
                "const canvas = document.createElement('canvas'); document.body.appendChild(canvas); const ctx = canvas.getContext('2d'); let x = 0; function animate() { ctx.clearRect(0, 0, canvas.width, canvas.height); ctx.beginPath(); ctx.arc(x, 50, 20, 0, Math.PI * 2); ctx.fill(); x += 2; if (x < canvas.width) { requestAnimationFrame(animate); } } animate();",
                "const canvas = document.getElementById('canvas'); const ctx = canvas.getContext('2d'); let angle = 0; function animate() { ctx.clearRect(0, 0, canvas.width, canvas.height); ctx.beginPath(); ctx.arc(50 + 40 * Math.cos(angle), 50 + 40 * Math.sin(angle), 20, 0, Math.PI * 2); ctx.fill(); angle += 0.1; requestAnimationFrame(animate); } animate();"
            ]
        },
        {
            "tag": "codigo_secuencia_fibonacci_js",
            "patterns": [
                "cómo generar Fibonacci en JavaScript",
                "ejemplo de secuencia Fibonacci en JavaScript"
            ],
            "responses": [
                "function fib(n) { return n <= 1 ? 1 : fib(n - 1) + fib(n - 2); } console.log(fib(5));",
                "let nums = [0, 1]; for (let i = 2; i < 10; i++) { nums.push(nums[i - 1] + nums[i - 2]); } console.log(nums);"
            ]
        },
        {
            "tag": "codigo_simple_socket_js",
            "patterns": [
                "cómo crear un socket en JavaScript",
                "ejemplo de socket simple en JavaScript"
            ],
            "responses": [
                "const net = require('net'); const server = net.createServer(socket => { socket.write('Hola desde el servidor'); socket.end(); }); server.listen(8080, '127.0.0.1', () => { console.log('Servidor escuchando'); });",
                "const net = require('net'); const client = net.createConnection({ host: 'localhost', port: 8080 }, () => { console.log('Conexión establecida'); });"
            ]
        },
        {
            "tag": "codigo_argumentos_varios_js",
            "patterns": [
                "cómo usar *args y **kwargs en JavaScript",
                "ejemplo de argumentos variables en JavaScript"
            ],
            "responses": [
                "function demo(...args) { console.log(args); } demo(1, 2, 3, 4);",
                "function multiplicar(...nums) { return nums.reduce((prod, n) => prod * n, 1); } console.log(multiplicar(2, 3, 4));"
            ]
        },
        {
            "tag": "codigo_ordenar_tuplas_js",
            "patterns": [
                "cómo ordenar una lista de tuplas en JavaScript",
                "ejemplo con sorted y tuplas en JavaScript"
            ],
            "responses": [
                "let datos = [[1, 'A'], [2, 'B']]; console.log(datos.sort((a, b) => a[1].localeCompare(b[1])));",
                "let pares = [[1, 2], [3, 4]]; console.log(pares.sort((a, b) => b[0] - a[0]));"
            ]
        },
        {
            "tag": "codigo_multiprocesamiento_js",
            "patterns": [
                "cómo usar multiprocesamiento en JavaScript",
                "ejemplo con multiprocessing en JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker(() => { console.log('Proceso ejecutado'); }); worker.on('exit', (code) => { console.log('Proceso finalizado'); });",
                "const { Worker } = require('worker_threads'); function cuadrado(num) { return num * num; } const worker = new Worker(() => { console.log(cuadrado(2)); }); worker.on('exit', (code) => { console.log('Proceso finalizado'); });"
            ]
        },
        {
            "tag": "codigo_iter_combinaciones_js",
            "patterns": [
                "cómo generar combinaciones en JavaScript",
                "ejemplo con itertools en JavaScript"
            ],
            "responses": [
                "function* combinations(arr, size) { for (let i = 0; i < arr.length; i++) { for (let j = i + 1; j < arr.length; j++) { yield [arr[i], arr[j]]; } } } console.log([...combinations([1, 2, 3], 2)]);",
                "function* permutations(arr, size) { if (size === 1) { yield arr; } else { for (let i = 0; i < arr.length; i++) { const rest = arr.slice(0, i).concat(arr.slice(i + 1)); for (let perm of permutations(rest, size - 1)) { yield [arr[i], ...perm]; } } } } console.log([...permutations(['a', 'b', 'c'], 2)]);"
            ]
        },
        {
            "tag": "codigo_reemplazo_texto_js",
            "patterns": [
                "cómo reemplazar texto en JavaScript",
                "ejemplo de reemplazo con regex en JavaScript"
            ],
            "responses": [
                "let texto = 'Hola Mundo'; console.log(texto.replace(/Mundo/, 'Python'));",
                "let frase = 'Python es fácil'; console.log(frase.replace(/fácil/, 'genial'));"
            ]
        },
        {
            "tag": "codigo_conversion_tipo_js",
            "patterns": [
                "cómo convertir tipos en JavaScript",
                "ejemplo de casting en JavaScript"
            ],
            "responses": [
                "let num = '123'; console.log(Number(num));",
                "let flt = '3.14'; console.log(parseFloat(flt));"
            ]
        },
        {
            "tag": "codigo_texto_html_js",
            "patterns": [
                "cómo generar texto HTML en JavaScript",
                "ejemplo básico de HTML en JavaScript"
            ],
            "responses": [
                "let html = `<p>Hola</p>`; console.log(html);",
                "let text = 'Python'; console.log(`<h1>${text}</h1>`);"
            ]
        },
        {
            "tag": "codigo_filtrado_tuplas",
            "patterns": [
                "cómo filtrar tuplas",
                "ejemplo con listas de tuplas"
            ],
            "responses": [
                "data = [(1, 2), (3, 4)]; print([t for t in data if sum(t) > 5])",
                "pares = [(2, 2), (1, 1)]; print([p for p in pares if p[0] == p[1]])"
            ]
        },
        {
            "tag": "codigo_configurar_logging",
            "patterns": [
                "cómo configurar logging",
                "ejemplo con logging en Python"
            ],
            "responses": [
                "import logging; logging.basicConfig(level=logging.INFO); logging.info('Mensaje de info')",
                "import logging; logging.basicConfig(filename='app.log', level=logging.DEBUG); logging.debug('Debugging...')"
            ]
        },
        {
            "tag": "codigo_factorial_bucle",
            "patterns": [
                "cómo calcular factorial con bucles",
                "ejemplo de factorial iterativo"
            ],
            "responses": [
                "def factorial(n): result = 1; for i in range(1, n + 1): result *= i; return result; print(factorial(5))",
                "n = 4; fact = 1; for i in range(1, n+1): fact *= i; print(fact)"
            ]
        },
        {
            "tag": "codigo_sumar_lista",
            "patterns": [
                "cómo sumar elementos de una lista",
                "ejemplo de suma de una lista en Python"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print(sum(nums))",
                "numeros = [10, 20, 30]; suma = sum(numeros); print(suma)"
            ]
        },
        {
            "tag": "codigo_dividir_cadenas",
            "patterns": [
                "cómo dividir una cadena",
                "ejemplo de split en Python"
            ],
            "responses": [
                "texto = 'Python es increíble'; print(texto.split())",
                "cadena = 'uno,dos,tres'; print(cadena.split(','))"
            ]
        },
        {
            "tag": "codigo_unir_cadenas",
            "patterns": [
                "cómo unir cadenas",
                "ejemplo de join en Python"
            ],
            "responses": [
                "palabras = ['Hola', 'Mundo']; print(' '.join(palabras))",
                "frases = ['A', 'B', 'C']; print('-'.join(frases))"
            ]
        },
        {
            "tag": "codigo_filtro_lista",
            "patterns": [
                "cómo filtrar una lista",
                "ejemplo de filtrado con listas"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print([x for x in nums if x % 2 == 0])",
                "datos = [10, 15, 20]; print([x for x in datos if x > 15])"
            ]
        },
        {
            "tag": "codigo_leer_archivo",
            "patterns": [
                "cómo leer un archivo",
                "ejemplo de lectura de archivos en Python"
            ],
            "responses": [
                "with open('archivo.txt', 'r') as f: print(f.read())",
                "archivo = open('datos.txt', 'r'); contenido = archivo.read(); archivo.close(); print(contenido)"
            ]
        },
        {
            "tag": "codigo_escribir_archivo",
            "patterns": [
                "cómo escribir un archivo",
                "ejemplo de escritura de archivos en Python"
            ],
            "responses": [
                "with open('archivo.txt', 'w') as f: f.write('Hola Mundo')",
                "archivo = open('datos.txt', 'w'); archivo.write('Datos nuevos'); archivo.close()"
            ]
        },
        {
            "tag": "codigo_invertir_lista",
            "patterns": [
                "cómo invertir una lista",
                "ejemplo de invertir una lista en Python"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums[::-1])",
                "lista = ['a', 'b', 'c']; lista.reverse(); print(lista)"
            ]
        },
        {
            "tag": "codigo_multilistas_zip",
            "patterns": [
                "cómo usar zip con listas",
                "ejemplo de zip en Python"
            ],
            "responses": [
                "a = [1, 2]; b = [3, 4]; print(list(zip(a, b)))",
                "nombres = ['A', 'B']; edades = [20, 25]; print(dict(zip(nombres, edades)))"
            ]
        },
        {
            "tag": "codigo_borrar_elemento_lista",
            "patterns": [
                "cómo eliminar un elemento de una lista",
                "ejemplo de borrar elemento en listas"
            ],
            "responses": [
                "nums = [1, 2, 3]; nums.remove(2); print(nums)",
                "datos = [10, 20, 30]; del datos[1]; print(datos)"
            ]
        },
        {
            "tag": "codigo_verificar_archivo",
            "patterns": [
                "cómo verificar si existe un archivo",
                "ejemplo de os.path en Python"
            ],
            "responses": [
                "import os; print(os.path.exists('archivo.txt'))",
                "from pathlib import Path; print(Path('datos.txt').exists())"
            ]
        },
        {
            "tag": "codigo_filtrado_tuplas_js",
            "patterns": [
                "cómo filtrar tuplas en JavaScript",
                "ejemplo con listas de tuplas en JavaScript"
            ],
            "responses": [
                "let data = [[1, 2], [3, 4]]; console.log(data.filter(t => t.reduce((a, b) => a + b) > 5));",
                "let pares = [[2, 2], [1, 1]]; console.log(pares.filter(p => p[0] === p[1]));"
            ]
        },
        {
            "tag": "codigo_configurar_logging_js",
            "patterns": [
                "cómo configurar logging en JavaScript",
                "ejemplo con logging en JavaScript"
            ],
            "responses": [
                "const log = (message) => { console.log(message); }; log('Mensaje de info');",
                "const log = (message) => { console.log(message); }; log('Debugging...');"
            ]
        },
        {
            "tag": "codigo_factorial_bucle_js",
            "patterns": [
                "cómo calcular factorial con bucles en JavaScript",
                "ejemplo de factorial iterativo en JavaScript"
            ],
            "responses": [
                "function factorial(n) { let result = 1; for (let i = 1; i <= n; i++) { result *= i; } return result; } console.log(factorial(5));",
                "let n = 4; let fact = 1; for (let i = 1; i <= n; i++) { fact *= i; } console.log(fact);"
            ]
        },
        {
            "tag": "codigo_sumar_lista_js",
            "patterns": [
                "cómo sumar elementos de una lista en JavaScript",
                "ejemplo de suma de una lista en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; console.log(nums.reduce((a, b) => a + b));",
                "let numeros = [10, 20, 30]; let suma = numeros.reduce((a, b) => a + b); console.log(suma);"
            ]
        },
        {
            "tag": "codigo_dividir_cadenas_js",
            "patterns": [
                "cómo dividir una cadena en JavaScript",
                "ejemplo de split en JavaScript"
            ],
            "responses": [
                "let texto = 'Python es increíble'; console.log(texto.split(' '));",
                "let cadena = 'uno,dos,tres'; console.log(cadena.split(','));"
            ]
        },
        {
            "tag": "codigo_unir_cadenas_js",
            "patterns": [
                "cómo unir cadenas en JavaScript",
                "ejemplo de join en JavaScript"
            ],
            "responses": [
                "let palabras = ['Hola', 'Mundo']; console.log(palabras.join(' '));",
                "let frases = ['A', 'B', 'C']; console.log(frases.join('-'));"
            ]
        },
        {
            "tag": "codigo_filtro_lista_js",
            "patterns": [
                "cómo filtrar una lista en JavaScript",
                "ejemplo de filtrado con listas en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; console.log(nums.filter(x => x % 2 === 0));",
                "let datos = [10, 15, 20]; console.log(datos.filter(x => x > 15));"
            ]
        },
        {
            "tag": "codigo_leer_archivo_js",
            "patterns": [
                "cómo leer un archivo en JavaScript",
                "ejemplo de lectura de archivos en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readFile('archivo.txt', 'utf8', (err, data) => { if (err) throw err; console.log(data); });",
                "const fs = require('fs'); let contenido = fs.readFileSync('datos.txt', 'utf8'); console.log(contenido);"
            ]
        },
        {
            "tag": "codigo_escribir_archivo_js",
            "patterns": [
                "cómo escribir un archivo en JavaScript",
                "ejemplo de escritura de archivos en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.writeFile('archivo.txt', 'Hola Mundo', (err) => { if (err) throw err; console.log('Archivo guardado'); });",
                "const fs = require('fs'); fs.writeFileSync('datos.txt', 'Datos nuevos'); console.log('Archivo guardado');"
            ]
        },
        {
            "tag": "codigo_invertir_lista_js",
            "patterns": [
                "cómo invertir una lista en JavaScript",
                "ejemplo de invertir una lista en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log(nums.reverse());",
                "let lista = ['a', 'b', 'c']; lista.reverse(); console.log(lista);"
            ]
        },
        {
            "tag": "codigo_multilistas_zip_js",
            "patterns": [
                "cómo usar zip con listas en JavaScript",
                "ejemplo de zip en JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = [3, 4]; console.log(a.map((v, i) => [v, b[i]]));",
                "let nombres = ['A', 'B']; let edades = [20, 25]; let zip = Object.fromEntries(nombres.map((k, i) => [k, edades[i]])); console.log(zip);"
            ]
        },
        {
            "tag": "codigo_borrar_elemento_lista_js",
            "patterns": [
                "cómo eliminar un elemento de una lista en JavaScript",
                "ejemplo de borrar elemento en listas en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; nums.splice(nums.indexOf(2), 1); console.log(nums);",
                "let datos = [10, 20, 30]; datos.splice(1, 1); console.log(datos);"
            ]
        },
        {
            "tag": "codigo_verificar_archivo_js",
            "patterns": [
                "cómo verificar si existe un archivo en JavaScript",
                "ejemplo de os.path en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); console.log(fs.existsSync('archivo.txt'));",
                "const path = require('path'); console.log(path.existsSync('datos.txt'));"
            ]
        },
        {
            "tag": "codigo_ordenar_lista",
            "patterns": [
                "cómo ordenar una lista",
                "ejemplo de sort en Python"
            ],
            "responses": [
                "nums = [3, 1, 2]; nums.sort(); print(nums)",
                "datos = ['b', 'a', 'c']; print(sorted(datos))"
            ]
        },
        {
            "tag": "codigo_generador_simple",
            "patterns": [
                "cómo crear un generador",
                "ejemplo de generador en Python"
            ],
            "responses": [
                "def gen(): yield 1; yield 2; for x in gen(): print(x)",
                "def numeros(): for i in range(3): yield i; print(list(numeros()))"
            ]
        },
        {
            "tag": "codigo_uso_enumerate",
            "patterns": [
                "cómo usar enumerate",
                "ejemplo de enumerate en Python"
            ],
            "responses": [
                "nums = [10, 20, 30]; for i, n in enumerate(nums): print(i, n)",
                "letras = ['a', 'b']; print(list(enumerate(letras)))"
            ]
        },
        {
            "tag": "codigo_funcion_lambda",
            "patterns": [
                "cómo usar funciones lambda",
                "ejemplo de lambda en Python"
            ],
            "responses": [
                "cuadrado = lambda x: x**2; print(cuadrado(3))",
                "suma = lambda x, y: x + y; print(suma(1, 2))"
            ]
        },
        {
            "tag": "codigo_dict_con_default",
            "patterns": [
                "cómo usar defaultdict",
                "ejemplo de defaultdict en Python"
            ],
            "responses": [
                "from collections import defaultdict; d = defaultdict(int); d['a'] += 1; print(d)",
                "from collections import defaultdict; d = defaultdict(list); d['a'].append(1); print(d)"
            ]
        },
        {
            "tag": "codigo_json_basico",
            "patterns": [
                "cómo manejar JSON",
                "ejemplo de JSON en Python"
            ],
            "responses": [
                "import json; data = {'a': 1}; print(json.dumps(data))",
                "import json; text = '{\"a\": 1}'; print(json.loads(text))"
            ]
        },
        {
            "tag": "codigo_fecha_actual",
            "patterns": [
                "cómo obtener la fecha actual",
                "ejemplo con datetime en Python"
            ],
            "responses": [
                "from datetime import datetime; print(datetime.now())",
                "from datetime import date; print(date.today())"
            ]
        },
        {
            "tag": "codigo_diccionario_invertido",
            "patterns": [
                "cómo invertir un diccionario",
                "ejemplo de diccionario invertido"
            ],
            "responses": [
                "d = {'a': 1, 'b': 2}; print({v: k for k, v in d.items()})",
                "datos = {1: 'A', 2: 'B'}; print(dict(map(reversed, datos.items())))"
            ]
        },
        {
            "tag": "codigo_uso_try_except",
            "patterns": [
                "cómo manejar errores",
                "ejemplo de try-except en Python"
            ],
            "responses": [
                "try: x = 1 / 0; except ZeroDivisionError: print('Error de división')",
                "try: print(int('abc')); except ValueError: print('Valor inválido')"
            ]
        },
        {
            "tag": "codigo_abrir_url",
            "patterns": [
                "cómo abrir una URL",
                "ejemplo de urllib en Python"
            ],
            "responses": [
                "import urllib.request; with urllib.request.urlopen('http://example.com') as response: print(response.read())",
                "import requests; r = requests.get('http://example.com'); print(r.text)"
            ]
        },
        {
            "tag": "codigo_uso_heapq",
            "patterns": [
                "cómo usar heapq",
                "ejemplo de colas de prioridad"
            ],
            "responses": [
                "import heapq; nums = [3, 1, 2]; heapq.heapify(nums); print(heapq.heappop(nums))",
                "import heapq; datos = [5, 7, 3]; print(heapq.nlargest(2, datos))"
            ]
        },
        {
            "tag": "codigo_verificar_instancia",
            "patterns": [
                "cómo verificar el tipo de una variable",
                "ejemplo con isinstance"
            ],
            "responses": [
                "x = 10; print(isinstance(x, int))",
                "data = 'Hola'; print(isinstance(data, str))"
            ]
        },
        {
            "tag": "codigo_iteracion_diccionario",
            "patterns": [
                "cómo iterar sobre un diccionario",
                "ejemplo de iteración con diccionarios"
            ],
            "responses": [
                "d = {'a': 1, 'b': 2}; for k, v in d.items(): print(k, v)",
                "datos = {1: 'uno', 2: 'dos'}; print(list(datos.items()))"
            ]
        },
        {
            "tag": "codigo_ordenar_lista_js",
            "patterns": [
                "cómo ordenar una lista en JavaScript",
                "ejemplo de sort en JavaScript"
            ],
            "responses": [
                "let nums = [3, 1, 2]; nums.sort(); console.log(nums);",
                "let datos = ['b', 'a', 'c']; console.log(datos.sort());"
            ]
        },
        {
            "tag": "codigo_generador_simple_js",
            "patterns": [
                "cómo crear un generador en JavaScript",
                "ejemplo de generador en JavaScript"
            ],
            "responses": [
                "function* gen() { yield 1; yield 2; } for (let x of gen()) { console.log(x); }",
                "function* numeros() { for (let i = 0; i < 3; i++) { yield i; } } console.log([...numeros()]);"
            ]
        },
        {
            "tag": "codigo_uso_enumerate_js",
            "patterns": [
                "cómo usar enumerate en JavaScript",
                "ejemplo de enumerate en JavaScript"
            ],
            "responses": [
                "let nums = [10, 20, 30]; nums.forEach((n, i) => console.log(i, n));",
                "let letras = ['a', 'b']; console.log(letras.map((v, i) => [i, v]));"
            ]
        },
        {
            "tag": "codigo_funcion_lambda_js",
            "patterns": [
                "cómo usar funciones lambda en JavaScript",
                "ejemplo de lambda en JavaScript"
            ],
            "responses": [
                "let cuadrado = x => x**2; console.log(cuadrado(3));",
                "let suma = (x, y) => x + y; console.log(suma(1, 2));"
            ]
        },
        {
            "tag": "codigo_dict_con_default_js",
            "patterns": [
                "cómo usar defaultdict en JavaScript",
                "ejemplo de defaultdict en JavaScript"
            ],
            "responses": [
                "let d = {}; d['a'] = (d['a'] || 0) + 1; console.log(d);",
                "let d = {}; d['a'] = d['a'] || []; d['a'].push(1); console.log(d);"
            ]
        },
        {
            "tag": "codigo_json_basico_js",
            "patterns": [
                "cómo manejar JSON en JavaScript",
                "ejemplo de JSON en JavaScript"
            ],
            "responses": [
                "let data = {a: 1}; console.log(JSON.stringify(data));",
                "let text = '{\"a\": 1}'; console.log(JSON.parse(text));"
            ]
        },
        {
            "tag": "codigo_fecha_actual_js",
            "patterns": [
                "cómo obtener la fecha actual en JavaScript",
                "ejemplo con Date en JavaScript"
            ],
            "responses": [
                "let today = new Date(); console.log(today);",
                "let today = new Date(); console.log(today.toISOString());"
            ]
        },
        {
            "tag": "codigo_diccionario_invertido_js",
            "patterns": [
                "cómo invertir un diccionario en JavaScript",
                "ejemplo de diccionario invertido en JavaScript"
            ],
            "responses": [
                "let d = {a: 1, b: 2}; let inverted = Object.fromEntries(Object.entries(d).map(([k, v]) => [v, k])); console.log(inverted);",
                "let datos = {1: 'A', 2: 'B'}; let inverted = Object.fromEntries(Object.entries(datos).map(([k, v]) => [v, k])); console.log(inverted);"
            ]
        },
        {
            "tag": "codigo_uso_try_except_js",
            "patterns": [
                "cómo manejar errores en JavaScript",
                "ejemplo de try-catch en JavaScript"
            ],
            "responses": [
                "try { let x = 1 / 0; } catch (e) { console.log('Error de división'); }",
                "try { let x = parseInt('abc'); } catch (e) { console.log('Valor inválido'); }"
            ]
        },
        {
            "tag": "codigo_abrir_url_js",
            "patterns": [
                "cómo abrir una URL en JavaScript",
                "ejemplo de fetch en JavaScript"
            ],
            "responses": [
                "fetch('http://example.com').then(response => response.text()).then(text => console.log(text));",
                "let r = await fetch('http://example.com'); let text = await r.text(); console.log(text);"
            ]
        },
        {
            "tag": "codigo_uso_heapq_js",
            "patterns": [
                "cómo usar heapq en JavaScript",
                "ejemplo de colas de prioridad en JavaScript"
            ],
            "responses": [
                "let nums = [3, 1, 2]; nums.sort((a, b) => a - b); console.log(nums[0]);",
                "let datos = [5, 7, 3]; console.log(Math.max(...datos));"
            ]
        },
        {
            "tag": "codigo_verificar_instancia_js",
            "patterns": [
                "cómo verificar el tipo de una variable en JavaScript",
                "ejemplo con instanceof en JavaScript"
            ],
            "responses": [
                "let x = 10; console.log(x instanceof Number);",
                "let data = 'Hola'; console.log(data instanceof String);"
            ]
        },
        {
            "tag": "codigo_iteracion_diccionario_js",
            "patterns": [
                "cómo iterar sobre un diccionario en JavaScript",
                "ejemplo de iteración con diccionarios en JavaScript"
            ],
            "responses": [
                "let d = {a: 1, b: 2}; for (let [k, v] of Object.entries(d)) { console.log(k, v); }",
                "let datos = {1: 'uno', 2: 'dos'}; console.log(Object.entries(datos));"
            ]
        },
        {
            "tag": "codigo_funcion_recursiva",
            "patterns": [
                "cómo definir una función recursiva",
                "ejemplo de recursión en Python"
            ],
            "responses": [
                "def factorial(n): return 1 if n == 0 else n * factorial(n - 1); print(factorial(5))",
                "def suma(n): return n if n == 0 else n + suma(n - 1); print(suma(3))"
            ]
        },
        {
            "tag": "codigo_cronometro",
            "patterns": [
                "cómo medir tiempo de ejecución",
                "ejemplo con time en Python"
            ],
            "responses": [
                "import time; start = time.time(); print('Hola'); print(time.time() - start)",
                "from time import perf_counter; t1 = perf_counter(); print('Hola'); print(perf_counter() - t1)"
            ]
        },
        {
            "tag": "codigo_generar_rango",
            "patterns": [
                "cómo generar un rango de números",
                "ejemplo de range en Python"
            ],
            "responses": [
                "print(list(range(5)))",
                "print(list(range(1, 10, 2)))"
            ]
        },
        {
            "tag": "codigo_diccionario_valores_max",
            "patterns": [
                "cómo obtener el valor máximo de un diccionario",
                "ejemplo con max en diccionarios"
            ],
            "responses": [
                "d = {'a': 3, 'b': 5}; print(max(d.values()))",
                "data = {'x': 10, 'y': 15}; print(max(data, key=data.get))"
            ]
        },
        {
            "tag": "codigo_encontrar_indice",
            "patterns": [
                "cómo encontrar el índice de un elemento en una lista",
                "ejemplo de index en listas"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums.index(2))",
                "letras = ['a', 'b', 'c']; print(letras.index('c'))"
            ]
        },
        {
            "tag": "codigo_suma_acumulada",
            "patterns": [
                "cómo calcular una suma acumulada",
                "ejemplo con itertools.accumulate"
            ],
            "responses": [
                "from itertools import accumulate; nums = [1, 2, 3]; print(list(accumulate(nums)))",
                "import itertools; datos = [5, 10]; print(list(itertools.accumulate(datos)))"
            ]
        },
        {
            "tag": "codigo_ordenar_diccionario",
            "patterns": [
                "cómo ordenar un diccionario",
                "ejemplo de sorted con diccionarios"
            ],
            "responses": [
                "d = {'b': 2, 'a': 1}; print(dict(sorted(d.items())))",
                "data = {2: 'B', 1: 'A'}; print(dict(sorted(data.items())))"
            ]
        },
        {
            "tag": "codigo_busqueda_binaria",
            "patterns": [
                "cómo realizar una búsqueda binaria",
                "ejemplo de bisect en Python"
            ],
            "responses": [
                "import bisect; nums = [1, 3, 5]; print(bisect.bisect(nums, 4))",
                "from bisect import bisect_left; lista = [10, 20, 30]; print(bisect_left(lista, 25))"
            ]
        },
        {
            "tag": "codigo_crear_conjunto",
            "patterns": [
                "cómo crear un conjunto",
                "ejemplo de set en Python"
            ],
            "responses": [
                "s = {1, 2, 3}; print(s)",
                "conjunto = set([1, 2, 2, 3]); print(conjunto)"
            ]
        },
        {
            "tag": "codigo_interseccion_conjuntos",
            "patterns": [
                "cómo calcular la intersección de conjuntos",
                "ejemplo de intersección en Python"
            ],
            "responses": [
                "a = {1, 2}; b = {2, 3}; print(a & b)",
                "x = {'a', 'b'}; y = {'b', 'c'}; print(x.intersection(y))"
            ]
        },
        {
            "tag": "codigo_lista_comprehension",
            "patterns": [
                "cómo usar listas por comprensión",
                "ejemplo de list comprehension"
            ],
            "responses": [
                "nums = [x**2 for x in range(5)]; print(nums)",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "codigo_diccionario_comprehension",
            "patterns": [
                "cómo usar diccionarios por comprensión",
                "ejemplo de dict comprehension"
            ],
            "responses": [
                "cuadrados = {x: x**2 for x in range(3)}; print(cuadrados)",
                "inverso = {v: k for k, v in {'a': 1, 'b': 2}.items()}; print(inverso)"
            ]
        },
        {
            "tag": "codigo_funcion_recursiva_js",
            "patterns": [
                "cómo definir una función recursiva en JavaScript",
                "ejemplo de recursión en JavaScript"
            ],
            "responses": [
                "function factorial(n) { return n === 0 ? 1 : n * factorial(n - 1); } console.log(factorial(5));",
                "function suma(n) { return n === 0 ? n : n + suma(n - 1); } console.log(suma(3));"
            ]
        },
        {
            "tag": "codigo_cronometro_js",
            "patterns": [
                "cómo medir tiempo de ejecución en JavaScript",
                "ejemplo con time en JavaScript"
            ],
            "responses": [
                "let start = Date.now(); console.log('Hola'); console.log(Date.now() - start);",
                "let t1 = performance.now(); console.log('Hola'); console.log(performance.now() - t1);"
            ]
        },
        {
            "tag": "codigo_generar_rango_js",
            "patterns": [
                "cómo generar un rango de números en JavaScript",
                "ejemplo de range en JavaScript"
            ],
            "responses": [
                "console.log([...Array(5).keys()]);",
                "console.log([...Array(5).keys()].map(i => i * 2));"
            ]
        },
        {
            "tag": "codigo_diccionario_valores_max_js",
            "patterns": [
                "cómo obtener el valor máximo de un diccionario en JavaScript",
                "ejemplo con max en diccionarios en JavaScript"
            ],
            "responses": [
                "let d = {a: 3, b: 5}; console.log(Math.max(...Object.values(d)));",
                "let data = {x: 10, y: 15}; console.log(Object.keys(data).reduce((a, b) => data[a] > data[b] ? a : b));"
            ]
        },
        {
            "tag": "codigo_encontrar_indice_js",
            "patterns": [
                "cómo encontrar el índice de un elemento en una lista en JavaScript",
                "ejemplo de index en listas en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log(nums.indexOf(2));",
                "let letras = ['a', 'b', 'c']; console.log(letras.indexOf('c'));"
            ]
        },
        {
            "tag": "codigo_suma_acumulada_js",
            "patterns": [
                "cómo calcular una suma acumulada en JavaScript",
                "ejemplo con accumulate en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; let accumulated = nums.reduce((acc, curr) => [...acc, acc[acc.length - 1] + curr], [0]); console.log(accumulated);",
                "let datos = [5, 10]; console.log(datos.reduce((acc, curr) => [...acc, acc[acc.length - 1] + curr], [0]));"
            ]
        },
        {
            "tag": "codigo_ordenar_diccionario_js",
            "patterns": [
                "cómo ordenar un diccionario en JavaScript",
                "ejemplo de sorted con diccionarios en JavaScript"
            ],
            "responses": [
                "let d = {b: 2, a: 1}; let sorted = Object.fromEntries(Object.entries(d).sort(([,a], [,b]) => a - b)); console.log(sorted);",
                "let data = {2: 'B', 1: 'A'}; let sorted = Object.fromEntries(Object.entries(data).sort(([,a], [,b]) => a - b)); console.log(sorted);"
            ]
        },
        {
            "tag": "codigo_busqueda_binaria_js",
            "patterns": [
                "cómo realizar una búsqueda binaria en JavaScript",
                "ejemplo de bisect en JavaScript"
            ],
            "responses": [
                "let nums = [1, 3, 5]; let idx = nums.findIndex(num => num >= 4); console.log(idx);",
                "let lista = [10, 20, 30]; let idx = lista.findIndex(num => num >= 25); console.log(idx);"
            ]
        },
        {
            "tag": "codigo_crear_conjunto_js",
            "patterns": [
                "cómo crear un conjunto en JavaScript",
                "ejemplo de set en JavaScript"
            ],
            "responses": [
                "let s = new Set([1, 2, 3]); console.log(s);",
                "let conjunto = new Set([1, 2, 2, 3]); console.log(conjunto);"
            ]
        },
        {
            "tag": "codigo_interseccion_conjuntos_js",
            "patterns": [
                "cómo calcular la intersección de conjuntos en JavaScript",
                "ejemplo de intersección en JavaScript"
            ],
            "responses": [
                "let a = new Set([1, 2]); let b = new Set([2, 3]); console.log(new Set([...a].filter(x => b.has(x))));",
                "let x = new Set(['a', 'b']); let y = new Set(['b', 'c']); console.log(new Set([...x].filter(item => y.has(item))));"
            ]
        },
        {
            "tag": "codigo_lista_comprehension_js",
            "patterns": [
                "cómo usar listas por comprensión en JavaScript",
                "ejemplo de list comprehension en JavaScript"
            ],
            "responses": [
                "let nums = [...Array(5).keys()].map(x => x**2); console.log(nums);",
                "let pares = [...Array(10).keys()].filter(x => x % 2 === 0); console.log(pares);"
            ]
        },
        {
            "tag": "codigo_diccionario_comprehension_js",
            "patterns": [
                "cómo usar diccionarios por comprensión en JavaScript",
                "ejemplo de dict comprehension en JavaScript"
            ],
            "responses": [
                "let cuadrados = [...Array(3).keys()].reduce((acc, x) => ({...acc, [x]: x**2}), {}); console.log(cuadrados);",
                "let inverso = Object.fromEntries(Object.entries({a: 1, b: 2}).map(([k, v]) => [v, k])); console.log(inverso);"
            ]
        },
        {
            "tag": "codigo_contar_elementos",
            "patterns": [
                "cómo contar elementos de una lista",
                "ejemplo con collections.Counter"
            ],
            "responses": [
                "from collections import Counter; lista = ['a', 'b', 'a']; print(Counter(lista))",
                "import collections; nums = [1, 2, 1]; print(collections.Counter(nums))"
            ]
        },
        {
            "tag": "codigo_uso_map",
            "patterns": [
                "cómo usar map en Python",
                "ejemplo de map"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(list(map(lambda x: x**2, nums)))",
                "palabras = ['uno', 'dos']; print(list(map(len, palabras)))"
            ]
        },
        {
            "tag": "codigo_uso_filter",
            "patterns": [
                "cómo usar filter en Python",
                "ejemplo de filter"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print(list(filter(lambda x: x % 2 == 0, nums)))",
                "letras = ['a', '', 'b']; print(list(filter(bool, letras)))"
            ]
        },
        {
            "tag": "codigo_palindromo",
            "patterns": [
                "cómo verificar si una palabra es un palíndromo",
                "ejemplo de palíndromo en Python"
            ],
            "responses": [
                "palabra = 'ana'; print(palabra == palabra[::-1])",
                "texto = 'radar'; print(texto == ''.join(reversed(texto)))"
            ]
        },
        {
            "tag": "codigo_suma_matriz",
            "patterns": [
                "cómo sumar matrices",
                "ejemplo de suma de matrices en Python"
            ],
            "responses": [
                "import numpy as np; a = np.array([[1, 2], [3, 4]]); b = np.array([[5, 6], [7, 8]]); print(a + b)",
                "matriz1 = [[1, 2], [3, 4]]; matriz2 = [[5, 6], [7, 8]]; print([[x + y for x, y in zip(r1, r2)] for r1, r2 in zip(matriz1, matriz2)])"
            ]
        },
        {
            "tag": "codigo_uso_zip_longest",
            "patterns": [
                "cómo usar zip_longest",
                "ejemplo de zip_longest en Python"
            ],
            "responses": [
                "from itertools import zip_longest; a = [1, 2]; b = [3]; print(list(zip_longest(a, b)))",
                "import itertools; x = ['a', 'b']; y = [1]; print(list(itertools.zip_longest(x, y, fillvalue='N/A')))"
            ]
        },
        {
            "tag": "codigo_invertir_cadena",
            "patterns": [
                "cómo invertir una cadena",
                "ejemplo de invertir texto"
            ],
            "responses": [
                "texto = 'Python'; print(texto[::-1])",
                "cadena = 'Hola'; print(''.join(reversed(cadena)))"
            ]
        },
        {
            "tag": "codigo_clase_basica",
            "patterns": [
                "cómo crear una clase en Python",
                "ejemplo de clase básica"
            ],
            "responses": [
                "class Persona: def __init__(self, nombre): self.nombre = nombre; p = Persona('Ana'); print(p.nombre)",
                "class Animal: def __init__(self, tipo): self.tipo = tipo; a = Animal('Gato'); print(a.tipo)"
            ]
        },
        {
            "tag": "codigo_calculo_factorial",
            "patterns": [
                "cómo calcular factorial",
                "ejemplo de factorial en Python"
            ],
            "responses": [
                "from math import factorial; print(factorial(5))",
                "def fact(n): return 1 if n == 0 else n * fact(n - 1); print(fact(4))"
            ]
        },
        {
            "tag": "codigo_encadenar_iterables",
            "patterns": [
                "cómo encadenar iterables",
                "ejemplo de chain en Python"
            ],
            "responses": [
                "from itertools import chain; a = [1, 2]; b = [3, 4]; print(list(chain(a, b)))",
                "import itertools; x = ('a', 'b'); y = ('c',); print(list(itertools.chain(x, y)))"
            ]
        },
        {
            "tag": "codigo_verificar_subcadena",
            "patterns": [
                "cómo verificar si una cadena contiene otra",
                "ejemplo de subcadena en Python"
            ],
            "responses": [
                "print('Python' in 'Hola Python')",
                "texto = 'Este es un texto'; print('texto' in texto)"
            ]
        },
        {
            "tag": "codigo_leer_url",
            "patterns": [
                "cómo leer datos de una URL",
                "ejemplo con requests"
            ],
            "responses": [
                "import requests; r = requests.get('http://example.com'); print(r.text)",
                "import urllib.request; with urllib.request.urlopen('http://example.com') as response: print(response.read().decode())"
            ]
        },
        {
            "tag": "codigo_rotar_lista",
            "patterns": [
                "cómo rotar una lista",
                "ejemplo de rotación de listas"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums[1:] + nums[:1])",
                "lista = ['a', 'b', 'c']; print(lista[-1:] + lista[:-1])"
            ]
        },
        {
            "tag": "codigo_contar_elementos_js",
            "patterns": [
                "cómo contar elementos de una lista en JavaScript",
                "ejemplo con Counter en JavaScript"
            ],
            "responses": [
                "let lista = ['a', 'b', 'a']; let count = lista.reduce((acc, item) => { acc[item] = (acc[item] || 0) + 1; return acc; }, {}); console.log(count);",
                "let nums = [1, 2, 1]; let count = nums.reduce((acc, num) => { acc[num] = (acc[num] || 0) + 1; return acc; }, {}); console.log(count);"
            ]
        },
        {
            "tag": "codigo_uso_map_js",
            "patterns": [
                "cómo usar map en JavaScript",
                "ejemplo de map en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log(nums.map(x => x**2));",
                "let palabras = ['uno', 'dos']; console.log(palabras.map(word => word.length));"
            ]
        },
        {
            "tag": "codigo_uso_filter_js",
            "patterns": [
                "cómo usar filter en JavaScript",
                "ejemplo de filter en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; console.log(nums.filter(x => x % 2 === 0));",
                "let letras = ['a', '', 'b']; console.log(letras.filter(Boolean));"
            ]
        },
        {
            "tag": "codigo_palindromo_js",
            "patterns": [
                "cómo verificar si una palabra es un palíndromo en JavaScript",
                "ejemplo de palíndromo en JavaScript"
            ],
            "responses": [
                "let palabra = 'ana'; console.log(palabra === palabra.split('').reverse().join(''));",
                "let texto = 'radar'; console.log(texto === texto.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "codigo_suma_matriz_js",
            "patterns": [
                "cómo sumar matrices en JavaScript",
                "ejemplo de suma de matrices en JavaScript"
            ],
            "responses": [
                "let a = [[1, 2], [3, 4]]; let b = [[5, 6], [7, 8]]; let suma = a.map((row, i) => row.map((value, j) => value + b[i][j])); console.log(suma);",
                "let matriz1 = [[1, 2], [3, 4]]; let matriz2 = [[5, 6], [7, 8]]; let suma = matriz1.map((r1, i) => r1.map((x, j) => x + matriz2[i][j])); console.log(suma);"
            ]
        },
        {
            "tag": "codigo_uso_zip_longest_js",
            "patterns": [
                "cómo usar zip_longest en JavaScript",
                "ejemplo de zip_longest en JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = [3]; let result = [...a, ...b].map((item, i) => [item, b[i] || 'N/A']); console.log(result);",
                "let x = ['a', 'b']; let y = [1]; let result = x.map((item, i) => [item, y[i] || 'N/A']); console.log(result);"
            ]
        },
        {
            "tag": "codigo_invertir_cadena_js",
            "patterns": [
                "cómo invertir una cadena en JavaScript",
                "ejemplo de invertir texto en JavaScript"
            ],
            "responses": [
                "let texto = 'Python'; console.log(texto.split('').reverse().join(''));",
                "let cadena = 'Hola'; console.log(cadena.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "codigo_clase_basica_js",
            "patterns": [
                "cómo crear una clase en JavaScript",
                "ejemplo de clase básica en JavaScript"
            ],
            "responses": [
                "class Persona { constructor(nombre) { this.nombre = nombre; } } let p = new Persona('Ana'); console.log(p.nombre);",
                "class Animal { constructor(tipo) { this.tipo = tipo; } } let a = new Animal('Gato'); console.log(a.tipo);"
            ]
        },
        {
            "tag": "codigo_calculo_factorial_js",
            "patterns": [
                "cómo calcular factorial en JavaScript",
                "ejemplo de factorial en JavaScript"
            ],
            "responses": [
                "function factorial(n) { return n === 0 ? 1 : n * factorial(n - 1); } console.log(factorial(5));",
                "function fact(n) { return n === 0 ? 1 : n * fact(n - 1); } console.log(fact(4));"
            ]
        },
        {
            "tag": "codigo_encadenar_iterables_js",
            "patterns": [
                "cómo encadenar iterables en JavaScript",
                "ejemplo de chain en JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = [3, 4]; let result = [...a, ...b]; console.log(result);",
                "let x = ['a', 'b']; let y = ['c']; let result = [...x, ...y]; console.log(result);"
            ]
        },
        {
            "tag": "codigo_verificar_subcadena_js",
            "patterns": [
                "cómo verificar si una cadena contiene otra en JavaScript",
                "ejemplo de subcadena en JavaScript"
            ],
            "responses": [
                "let str = 'Python'; console.log(str.includes('Python'));",
                "let texto = 'Este es un texto'; console.log(texto.includes('texto'));"
            ]
        },
        {
            "tag": "codigo_leer_url_js",
            "patterns": [
                "cómo leer datos de una URL en JavaScript",
                "ejemplo con requests en JavaScript"
            ],
            "responses": [
                "fetch('http://example.com').then(response => response.text()).then(text => console.log(text));",
                "let url = 'http://example.com'; fetch(url).then(response => response.text()).then(data => console.log(data));"
            ]
        },
        {
            "tag": "codigo_rotar_lista_js",
            "patterns": [
                "cómo rotar una lista en JavaScript",
                "ejemplo de rotación de listas en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log([...nums.slice(1), nums[0]]);",
                "let lista = ['a', 'b', 'c']; console.log([lista[2], lista[0], lista[1]]);"
            ]
        },
        {
            "tag": "codigo_iterar_doble_for",
            "patterns": [
                "cómo usar doble for en Python",
                "ejemplo de doble for"
            ],
            "responses": [
                "for i in range(2): for j in range(2): print(i, j)",
                "datos = [[1, 2], [3, 4]]; for fila in datos: for val in fila: print(val)"
            ]
        },
        {
            "tag": "codigo_calculo_promedio",
            "patterns": [
                "cómo calcular el promedio",
                "ejemplo de promedio en Python"
            ],
            "responses": [
                "nums = [10, 20, 30]; print(sum(nums) / len(nums))",
                "datos = [5, 15]; promedio = sum(datos) / len(datos); print(promedio)"
            ]
        },
        {
            "tag": "codigo_encontrar_minimo",
            "patterns": [
                "cómo encontrar el valor mínimo en una lista",
                "ejemplo de min en Python"
            ],
            "responses": [
                "nums = [3, 1, 2]; print(min(nums))",
                "valores = [10, 5, 15]; print(min(valores))"
            ]
        },
        {
            "tag": "codigo_generar_num_aleatorio",
            "patterns": [
                "cómo generar un número aleatorio",
                "ejemplo de random en Python"
            ],
            "responses": [
                "import random; print(random.randint(1, 10))",
                "from random import uniform; print(uniform(1.0, 5.0))"
            ]
        },
        {
            "tag": "codigo_crear_tupla",
            "patterns": [
                "cómo crear una tupla",
                "ejemplo de tupla en Python"
            ],
            "responses": [
                "tupla = (1, 2, 3); print(tupla)",
                "t = tuple(['a', 'b', 'c']); print(t)"
            ]
        },
        {
            "tag": "codigo_formato_cadena",
            "patterns": [
                "cómo formatear cadenas",
                "ejemplo de f-strings en Python"
            ],
            "responses": [
                "nombre = 'Ana'; print(f'Hola, {nombre}')",
                "edad = 30; print('Tienes {} años'.format(edad))"
            ]
        },
        {
            "tag": "codigo_multiplicar_matrices",
            "patterns": [
                "cómo multiplicar matrices",
                "ejemplo de multiplicación de matrices"
            ],
            "responses": [
                "import numpy as np; a = np.array([[1, 2], [3, 4]]); b = np.array([[5, 6], [7, 8]]); print(np.dot(a, b))",
                "matriz1 = [[1, 2], [3, 4]]; matriz2 = [[5, 6], [7, 8]]; print([[sum(x*y for x, y in zip(row, col)) for col in zip(*matriz2)] for row in matriz1])"
            ]
        },
        {
            "tag": "codigo_ordenar_palabras",
            "patterns": [
                "cómo ordenar palabras",
                "ejemplo de ordenar cadenas en Python"
            ],
            "responses": [
                "texto = 'hola mundo'; print(' '.join(sorted(texto.split())))",
                "frase = 'zeta alfa beta'; palabras = frase.split(); palabras.sort(); print(' '.join(palabras))"
            ]
        },
        {
            "tag": "codigo_iterar_lista_anidada",
            "patterns": [
                "cómo iterar sobre listas anidadas",
                "ejemplo de listas anidadas en Python"
            ],
            "responses": [
                "lista = [[1, 2], [3, 4]]; for sublista in lista: for val in sublista: print(val)",
                "datos = [['a', 'b'], ['c', 'd']]; for fila in datos: print(''.join(fila))"
            ]
        },
        {
            "tag": "codigo_calculo_raiz",
            "patterns": [
                "cómo calcular la raíz cuadrada",
                "ejemplo de raíz cuadrada en Python"
            ],
            "responses": [
                "from math import sqrt; print(sqrt(16))",
                "import math; print(math.sqrt(25))"
            ]
        },
        {
            "tag": "codigo_validar_email",
            "patterns": [
                "cómo validar un email",
                "ejemplo de validación de email en Python"
            ],
            "responses": [
                "import re; email = 'test@example.com'; print(bool(re.match(r'^[\\w._%+-]+@[\\w.-]+\\.[a-zA-Z]{2,}$', email)))",
                "correo = 'usuario@dominio.com'; print('@' in correo and correo.endswith('.com'))"
            ]
        },
        {
            "tag": "codigo_iterar_doble_for_js",
            "patterns": [
                "cómo usar doble for en JavaScript",
                "ejemplo de doble for en JavaScript"
            ],
            "responses": [
                "for (let i = 0; i < 2; i++) { for (let j = 0; j < 2; j++) { console.log(i, j); } }",
                "let datos = [[1, 2], [3, 4]]; for (let fila of datos) { for (let val of fila) { console.log(val); } }"
            ]
        },
        {
            "tag": "codigo_calculo_promedio_js",
            "patterns": [
                "cómo calcular el promedio en JavaScript",
                "ejemplo de promedio en JavaScript"
            ],
            "responses": [
                "let nums = [10, 20, 30]; console.log(nums.reduce((sum, num) => sum + num) / nums.length);",
                "let datos = [5, 15]; let promedio = datos.reduce((sum, num) => sum + num) / datos.length; console.log(promedio);"
            ]
        },
        {
            "tag": "codigo_encontrar_minimo_js",
            "patterns": [
                "cómo encontrar el valor mínimo en una lista en JavaScript",
                "ejemplo de min en JavaScript"
            ],
            "responses": [
                "let nums = [3, 1, 2]; console.log(Math.min(...nums));",
                "let valores = [10, 5, 15]; console.log(Math.min(...valores));"
            ]
        },
        {
            "tag": "codigo_generar_num_aleatorio_js",
            "patterns": [
                "cómo generar un número aleatorio en JavaScript",
                "ejemplo de random en JavaScript"
            ],
            "responses": [
                "let randomNum = Math.floor(Math.random() * 10) + 1; console.log(randomNum);",
                "let randomFloat = Math.random() * (5.0 - 1.0) + 1.0; console.log(randomFloat);"
            ]
        },
        {
            "tag": "codigo_crear_tupla_js",
            "patterns": [
                "cómo crear una tupla en JavaScript",
                "ejemplo de tupla en JavaScript"
            ],
            "responses": [
                "let tupla = [1, 2, 3]; console.log(tupla);",
                "let t = ['a', 'b', 'c']; console.log(t);"
            ]
        },
        {
            "tag": "codigo_formato_cadena_js",
            "patterns": [
                "cómo formatear cadenas en JavaScript",
                "ejemplo de f-strings en JavaScript"
            ],
            "responses": [
                "let nombre = 'Ana'; console.log(`Hola, ${nombre}`);",
                "let edad = 30; console.log(`Tienes ${edad} años`);"
            ]
        },
        {
            "tag": "codigo_multiplicar_matrices_js",
            "patterns": [
                "cómo multiplicar matrices en JavaScript",
                "ejemplo de multiplicación de matrices en JavaScript"
            ],
            "responses": [
                "let a = [[1, 2], [3, 4]]; let b = [[5, 6], [7, 8]]; let result = a.map((row, i) => row.map((_, j) => row.reduce((sum, val, k) => sum + val * b[k][j], 0))); console.log(result);",
                "let matriz1 = [[1, 2], [3, 4]]; let matriz2 = [[5, 6], [7, 8]]; let result = matriz1.map((r1, i) => r1.map((_, j) => r1.reduce((sum, val, k) => sum + val * matriz2[k][j], 0))); console.log(result);"
            ]
        },
        {
            "tag": "codigo_ordenar_palabras_js",
            "patterns": [
                "cómo ordenar palabras en JavaScript",
                "ejemplo de ordenar cadenas en JavaScript"
            ],
            "responses": [
                "let texto = 'hola mundo'; console.log(texto.split(' ').sort().join(' '));",
                "let frase = 'zeta alfa beta'; let palabras = frase.split(' '); palabras.sort(); console.log(palabras.join(' '));"
            ]
        },
        {
            "tag": "codigo_iterar_lista_anidada_js",
            "patterns": [
                "cómo iterar sobre listas anidadas en JavaScript",
                "ejemplo de listas anidadas en JavaScript"
            ],
            "responses": [
                "let lista = [[1, 2], [3, 4]]; for (let sublista of lista) { for (let val of sublista) { console.log(val); } }",
                "let datos = [['a', 'b'], ['c', 'd']]; for (let fila of datos) { console.log(fila.join('')); }"
            ]
        },
        {
            "tag": "codigo_calculo_raiz_js",
            "patterns": [
                "cómo calcular la raíz cuadrada en JavaScript",
                "ejemplo de raíz cuadrada en JavaScript"
            ],
            "responses": [
                "let num = 16; console.log(Math.sqrt(num));",
                "let num2 = 25; console.log(Math.sqrt(num2));"
            ]
        },
        {
            "tag": "codigo_validar_email_js",
            "patterns": [
                "cómo validar un email en JavaScript",
                "ejemplo de validación de email en JavaScript"
            ],
            "responses": [
                "let email = 'test@example.com'; let regex = /^[\\w._%+-]+@[\\w.-]+\\.[a-zA-Z]{2,}$/; console.log(regex.test(email));",
                "let correo = 'usuario@dominio.com'; console.log(correo.includes('@') && correo.endsWith('.com'));"
            ]
        },
        {
            "tag": "codigo_combinaciones",
            "patterns": [
                "cómo generar combinaciones",
                "ejemplo de combinaciones en Python"
            ],
            "responses": [
                "from itertools import combinations; print(list(combinations([1, 2, 3], 2)))",
                "import itertools; datos = ['a', 'b', 'c']; print(list(itertools.combinations(datos, 2)))"
            ]
        },
        {
            "tag": "codigo_permutaciones",
            "patterns": [
                "cómo generar permutaciones",
                "ejemplo de permutaciones en Python"
            ],
            "responses": [
                "from itertools import permutations; print(list(permutations([1, 2, 3])))",
                "import itertools; valores = ['x', 'y']; print(list(itertools.permutations(valores, 2)))"
            ]
        },
        {
            "tag": "codigo_calcular_mediana",
            "patterns": [
                "cómo calcular la mediana",
                "ejemplo de mediana en Python"
            ],
            "responses": [
                "import statistics; nums = [1, 2, 3, 4]; print(statistics.median(nums))",
                "valores = [5, 2, 1, 4]; valores.sort(); print(valores[len(valores)//2])"
            ]
        },
        {
            "tag": "codigo_convertir_a_binario",
            "patterns": [
                "cómo convertir a binario",
                "ejemplo de bin en Python"
            ],
            "responses": [
                "print(bin(10))",
                "numero = 8; print(format(numero, 'b'))"
            ]
        },
        {
            "tag": "codigo_calcular_gcd",
            "patterns": [
                "cómo calcular el máximo común divisor",
                "ejemplo de gcd en Python"
            ],
            "responses": [
                "from math import gcd; print(gcd(12, 15))",
                "import math; print(math.gcd(100, 75))"
            ]
        },
        {
            "tag": "codigo_graficar_datos",
            "patterns": [
                "cómo graficar datos",
                "ejemplo de matplotlib"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2, 3], [4, 5, 6]); plt.show()",
                "import matplotlib.pyplot as plt; x = [1, 2, 3]; y = [2, 4, 6]; plt.scatter(x, y); plt.show()"
            ]
        },
        {
            "tag": "codigo_crear_dataframe",
            "patterns": [
                "cómo crear un DataFrame",
                "ejemplo de pandas DataFrame"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]}); print(df)",
                "import pandas as pd; datos = {'A': [1, 2], 'B': [3, 4]}; df = pd.DataFrame(datos); print(df)"
            ]
        },
        {
            "tag": "codigo_filtrar_dataframe",
            "patterns": [
                "cómo filtrar un DataFrame",
                "ejemplo de filtrado en pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2, 3]}); print(df[df['col1'] > 1])",
                "import pandas as pd; datos = {'valores': [10, 20, 30]}; df = pd.DataFrame(datos); print(df[df['valores'] == 20])"
            ]
        },
        {
            "tag": "codigo_combinaciones_js",
            "patterns": [
                "cómo generar combinaciones en JavaScript",
                "ejemplo de combinaciones en JavaScript"
            ],
            "responses": [
                "function combinaciones(arr, num) { let result = []; for (let i = 0; i < arr.length; i++) { for (let j = i + 1; j < arr.length; j++) { result.push([arr[i], arr[j]]); } } console.log(result); } combinaciones([1, 2, 3], 2);",
                "let datos = ['a', 'b', 'c']; let result = []; for (let i = 0; i < datos.length; i++) { for (let j = i + 1; j < datos.length; j++) { result.push([datos[i], datos[j]]); } } console.log(result);"
            ]
        },
        {
            "tag": "codigo_permutaciones_js",
            "patterns": [
                "cómo generar permutaciones en JavaScript",
                "ejemplo de permutaciones en JavaScript"
            ],
            "responses": [
                "function permutaciones(arr) { let result = []; for (let i = 0; i < arr.length; i++) { for (let j = i + 1; j < arr.length; j++) { result.push([arr[i], arr[j]]); } } console.log(result); } permutaciones([1, 2, 3]);",
                "let valores = ['x', 'y']; let result = []; for (let i = 0; i < valores.length; i++) { for (let j = i + 1; j < valores.length; j++) { result.push([valores[i], valores[j]]); } } console.log(result);"
            ]
        },
        {
            "tag": "codigo_calcular_mediana_js",
            "patterns": [
                "cómo calcular la mediana en JavaScript",
                "ejemplo de mediana en JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; nums.sort((a, b) => a - b); let median = nums.length % 2 === 0 ? (nums[nums.length / 2 - 1] + nums[nums.length / 2]) / 2 : nums[Math.floor(nums.length / 2)]; console.log(median);",
                "let valores = [5, 2, 1, 4]; valores.sort((a, b) => a - b); let median = valores[Math.floor(valores.length / 2)]; console.log(median);"
            ]
        },
        {
            "tag": "codigo_convertir_a_binario_js",
            "patterns": [
                "cómo convertir a binario en JavaScript",
                "ejemplo de binario en JavaScript"
            ],
            "responses": [
                "let num = 10; console.log(num.toString(2));",
                "let numero = 8; console.log(numero.toString(2));"
            ]
        },
        {
            "tag": "codigo_calcular_gcd_js",
            "patterns": [
                "cómo calcular el máximo común divisor en JavaScript",
                "ejemplo de gcd en JavaScript"
            ],
            "responses": [
                "function gcd(a, b) { return b === 0 ? a : gcd(b, a % b); } console.log(gcd(12, 15));",
                "function gcd(a, b) { return b === 0 ? a : gcd(b, a % b); } console.log(gcd(100, 75));"
            ]
        },
        {
            "tag": "codigo_graficar_datos_js",
            "patterns": [
                "cómo graficar datos en JavaScript",
                "ejemplo de graficar en JavaScript"
            ],
            "responses": [
                "let x = [1, 2, 3]; let y = [4, 5, 6]; let trace = { x: x, y: y, type: 'scatter' }; let data = [trace]; Plotly.newPlot('grafico', data);",
                "let x = [1, 2, 3]; let y = [2, 4, 6]; let trace = { x: x, y: y, type: 'scatter' }; let data = [trace]; Plotly.newPlot('grafico', data);"
            ]
        },
        {
            "tag": "codigo_crear_dataframe_js",
            "patterns": [
                "cómo crear un DataFrame en JavaScript",
                "ejemplo de DataFrame en JavaScript"
            ],
            "responses": [
                "let datos = { 'col1': [1, 2], 'col2': [3, 4] }; let df = new DataFrame(datos); console.log(df);",
                "let datos = { A: [1, 2], B: [3, 4] }; let df = new DataFrame(datos); console.log(df);"
            ]
        },
        {
            "tag": "codigo_filtrar_dataframe_js",
            "patterns": [
                "cómo filtrar un DataFrame en JavaScript",
                "ejemplo de filtrado en JavaScript"
            ],
            "responses": [
                "let df = new DataFrame({col1: [1, 2, 3]}); let resultado = df.filter(row => row.col1 > 1); console.log(resultado);",
                "let datos = {valores: [10, 20, 30]}; let df = new DataFrame(datos); let resultado = df.filter(row => row.valores == 20); console.log(resultado);"
            ]
        },
        {
            "tag": "codigo_clasificar_datos",
            "patterns": [
                "cómo clasificar datos",
                "ejemplo de clasificación con pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'valores': [10, 20, 30]}); df['categoría'] = ['bajo' if x < 20 else 'alto' for x in df['valores']]; print(df)",
                "import pandas as pd; datos = {'valores': [1, 2, 3]}; df = pd.DataFrame(datos); df['grupo'] = pd.cut(df['valores'], bins=[0, 2, 3], labels=['A', 'B']); print(df)"
            ]
        },
        {
            "tag": "codigo_guardar_csv",
            "patterns": [
                "cómo guardar un DataFrame en CSV",
                "ejemplo de to_csv en pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2]}); df.to_csv('archivo.csv', index=False)",
                "import pandas as pd; datos = {'A': [10, 20]}; df = pd.DataFrame(datos); df.to_csv('datos.csv')"
            ]
        },
        {
            "tag": "codigo_filtrar_datos",
            "patterns": [
                "cómo filtrar datos en un DataFrame",
                "ejemplo de consulta en pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'valores': [1, 2, 3]}); print(df.query('valores > 2'))",
                "import pandas as pd; datos = {'A': [10, 20, 30]}; df = pd.DataFrame(datos); print(df[df['A'] < 30])"
            ]
        },
        {
            "tag": "codigo_union_datos",
            "patterns": [
                "cómo unir datos",
                "ejemplo de merge en pandas"
            ],
            "responses": [
                "import pandas as pd; a = pd.DataFrame({'id': [1, 2]}); b = pd.DataFrame({'id': [2, 3]}); print(pd.merge(a, b, on='id', how='inner'))",
                "import pandas as pd; df1 = pd.DataFrame({'A': [1]}); df2 = pd.DataFrame({'A': [1]}); print(pd.concat([df1, df2]))"
            ]
        },
        {
            "tag": "codigo_crear_histograma",
            "patterns": [
                "cómo crear un histograma",
                "ejemplo de histograma en Python"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; datos = [1, 2, 2, 3, 3, 3]; plt.hist(datos, bins=3); plt.show()",
                "import matplotlib.pyplot as plt; data = [1, 2, 3, 4, 5]; plt.hist(data, bins=5); plt.show()"
            ]
        },
        {
            "tag": "codigo_reemplazar_subcadena",
            "patterns": [
                "cómo reemplazar una subcadena",
                "ejemplo de reemplazo de texto en Python"
            ],
            "responses": [
                "texto = 'Hola mundo'; print(texto.replace('mundo', 'Python'))",
                "cadena = 'manzana'; print(cadena.replace('manza', 'fruta'))"
            ]
        },
        {
            "tag": "codigo_clase_simple",
            "patterns": [
                "cómo crear una clase simple",
                "ejemplo de clase en Python"
            ],
            "responses": [
                "class Persona: def __init__(self, nombre): self.nombre = nombre; p = Persona('Carlos'); print(p.nombre)",
                "class Animal: def __init__(self, especie): self.especie = especie; a = Animal('Perro'); print(a.especie)"
            ]
        },
        {
            "tag": "codigo_verificar_espacio_vacio",
            "patterns": [
                "cómo verificar si una cadena está vacía",
                "ejemplo de verificación de espacio vacío"
            ],
            "responses": [
                "cadena = ''; print(len(cadena) == 0)",
                "texto = ' '; print(texto.strip() == '')"
            ]
        },
        {
            "tag": "codigo_comprobar_paridad",
            "patterns": [
                "cómo comprobar si un número e s par",
                "ejemplo de paridad en Python"
            ],
            "responses": [
                "numero = 4; print(numero % 2 == 0)",
                "valor = 7; print(valor % 2 == 0)"
            ]
        },
        {
            "tag": "codigo_concatenar_cadenas",
            "patterns": [
                "cómo concatenar cadenas",
                "ejemplo de concatenación en Python"
            ],
            "responses": [
                "texto1 = 'Hola'; texto2 = 'mundo'; print(texto1 + ' ' + texto2)",
                "cadena1 = 'Python'; cadena2 = 'rocks'; print(cadena1 + cadena2)"
            ]
        },
        {
            "tag": "codigo_ordenar_lista_descendente",
            "patterns": [
                "cómo ordenar una lista en orden descendente",
                "ejemplo de orden descendente en Python"
            ],
            "responses": [
                "lista = [5, 1, 3]; lista.sort(reverse=True); print(lista)",
                "numeros = [3, 2, 1]; print(sorted(numeros, reverse=True))"
            ]
        },
        {
            "tag": "codigo_clasificar_datos_js",
            "patterns": [
                "cómo clasificar datos en JavaScript",
                "ejemplo de clasificación con JavaScript"
            ],
            "responses": [
                "let datos = { 'valores': [10, 20, 30] }; let clasificados = datos.valores.map(x => x < 20 ? 'bajo' : 'alto'); console.log(clasificados);",
                "let datos = { 'valores': [1, 2, 3] }; let df = new DataFrame(datos); df['grupo'] = df['valores'].map(val => val <= 2 ? 'A' : 'B'); console.log(df);"
            ]
        },
        {
            "tag": "codigo_guardar_csv_js",
            "patterns": [
                "cómo guardar un DataFrame en CSV en JavaScript",
                "ejemplo de to_csv en JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); let df = { col1: [1, 2], col2: [3, 4] }; fs.writeFileSync('archivo.csv', Object.entries(df).join('\n'));",
                "const fs = require('fs'); let datos = { A: [10, 20] }; fs.writeFileSync('datos.csv', Object.entries(datos).join('\n'));"
            ]
        },
        {
            "tag": "codigo_filtrar_datos_js",
            "patterns": [
                "cómo filtrar datos en un DataFrame en JavaScript",
                "ejemplo de consulta en JavaScript"
            ],
            "responses": [
                "let df = { valores: [1, 2, 3] }; let resultado = df.valores.filter(val => val > 2); console.log(resultado);",
                "let datos = { A: [10, 20, 30] }; let df = { A: datos.A.filter(val => val < 30) }; console.log(df);"
            ]
        },
        {
            "tag": "codigo_union_datos_js",
            "patterns": [
                "cómo unir datos en JavaScript",
                "ejemplo de merge en JavaScript"
            ],
            "responses": [
                "let a = [{ id: 1 }, { id: 2 }]; let b = [{ id: 2 }, { id: 3 }]; let merged = a.filter(o1 => b.some(o2 => o1.id === o2.id)); console.log(merged);",
                "let df1 = [{ A: 1 }]; let df2 = [{ A: 1 }]; let merged = df1.concat(df2); console.log(merged);"
            ]
        },
        {
            "tag": "codigo_crear_histograma_js",
            "patterns": [
                "cómo crear un histograma en JavaScript",
                "ejemplo de histograma en JavaScript"
            ],
            "responses": [
                "let data = [1, 2, 2, 3, 3, 3]; let histogram = {}; data.forEach(num => histogram[num] = (histogram[num] || 0) + 1); console.log(histogram);",
                "let data = [1, 2, 3, 4, 5]; let histogram = {}; data.forEach(num => histogram[num] = (histogram[num] || 0) + 1); console.log(histogram);"
            ]
        },
        {
            "tag": "codigo_reemplazar_subcadena_js",
            "patterns": [
                "cómo reemplazar una subcadena en JavaScript",
                "ejemplo de reemplazo de texto en JavaScript"
            ],
            "responses": [
                "let texto = 'Hola mundo'; let resultado = texto.replace('mundo', 'JavaScript'); console.log(resultado);",
                "let cadena = 'manzana'; let resultado = cadena.replace('manza', 'fruta'); console.log(resultado);"
            ]
        },
        {
            "tag": "codigo_clase_simple_js",
            "patterns": [
                "cómo crear una clase simple en JavaScript",
                "ejemplo de clase en JavaScript"
            ],
            "responses": [
                "class Persona { constructor(nombre) { this.nombre = nombre; } } let p = new Persona('Carlos'); console.log(p.nombre);",
                "class Animal { constructor(especie) { this.especie = especie; } } let a = new Animal('Perro'); console.log(a.especie);"
            ]
        },
        {
            "tag": "codigo_verificar_espacio_vacio_js",
            "patterns": [
                "cómo verificar si una cadena está vacía en JavaScript",
                "ejemplo de verificación de espacio vacío en JavaScript"
            ],
            "responses": [
                "let cadena = ''; console.log(cadena.length === 0);",
                "let texto = ' '; console.log(texto.trim() === '');"
            ]
        },
        {
            "tag": "codigo_comprobar_paridad_js",
            "patterns": [
                "cómo comprobar si un número es par en JavaScript",
                "ejemplo de paridad en JavaScript"
            ],
            "responses": [
                "let numero = 4; console.log(numero % 2 === 0);",
                "let valor = 7; console.log(valor % 2 === 0);"
            ]
        },
        {
            "tag": "codigo_concatenar_cadenas_js",
            "patterns": [
                "cómo concatenar cadenas en JavaScript",
                "ejemplo de concatenación en JavaScript"
            ],
            "responses": [
                "let texto1 = 'Hola'; let texto2 = 'mundo'; console.log(texto1 + ' ' + texto2);",
                "let cadena1 = 'Python'; let cadena2 = 'rocks'; console.log(cadena1 + cadena2);"
            ]
        },
        {
            "tag": "codigo_ordenar_lista_descendente_js",
            "patterns": [
                "cómo ordenar una lista en orden descendente en JavaScript",
                "ejemplo de orden descendente en JavaScript"
            ],
            "responses": [
                "let lista = [5, 1, 3]; lista.sort((a, b) => b - a); console.log(lista);",
                "let numeros = [3, 2, 1]; console.log(numeros.sort((a, b) => b - a));"
            ]
        },
        {
            "tag": "codigo_sustituir_elementos_lista",
            "patterns": [
                "cómo sustituir un elemento en una lista",
                "ejemplo de sustitución en listas"
            ],
            "responses": [
                "lista = [1, 2, 3]; lista[1] = 5; print(lista)",
                "valores = [10, 20, 30]; valores[0] = 100; print(valores)"
            ]
        },
        {
            "tag": "codigo_matriz_transpuesta",
            "patterns": [
                "cómo obtener la transpuesta de una matriz",
                "ejemplo de transposición de matrices"
            ],
            "responses": [
                "import numpy as np; matriz = np.array([[1, 2], [3, 4]]); print(matriz.T)",
                "m = [[1, 2], [3, 4]]; transpuesta = [list(i) for i in zip(*m)]; print(transpuesta)"
            ]
        },
        {
            "tag": "codigo_ordenar_dict_por_valor",
            "patterns": [
                "cómo ordenar un diccionario por valor",
                "ejemplo de ordenar diccionario por valor en Python"
            ],
            "responses": [
                "d = {'a': 2, 'b': 1}; sorted_dict = dict(sorted(d.items(), key=lambda item: item[1])); print(sorted_dict)",
                "data = {'x': 10, 'y': 5}; sorted_data = {k: v for k, v in sorted(data.items(), key=lambda item: item[1])}; print(sorted_data)"
            ]
        },
        {
            "tag": "code_hola_mundo",
            "patterns": [
                "code of a hello world",
                "I want the code to print hello world"
            ],
            "responses": [
                "print (\"world\")",
                "You can write: print (\"Hi Mundo\")"
            ]
        },
        {
            "tag": "CODE_BUCLE_FOR",
            "patterns": [
                "example of a loop for",
                "I want to see how a for in python works"
            ],
            "responses": [
                "for i in range(5): print(i)",
                "for i in [1, 2, 3]: print(i)"
            ]
        },
        {
            "tag": "CODE_CONDICTIONAL",
            "patterns": [
                "Code for a Python condition",
                "How to write an IF"
            ],
            "responses": [
                "if x > 0: print(\"Positivo\")",
                "if x == 0: print(\"Cero\")"
            ]
        },
        {
            "tag": "CODE_WHILE",
            "patterns": [
                "While loop example",
                "I want a while in python"
            ],
            "responses": [
                "while x < 10: print(x); x += 1",
                "While True: print (\"executing\")"
            ]
        },
        {
            "tag": "CODE_FUNCTION",
            "patterns": [
                "example of a function",
                "I want to see how a function is done in Python"
            ],
            "responses": [
                "Def greeting (): print (\"hello\")",
                "def"
            ]
        },
        {
            "tag": "CODE_CLASE",
            "patterns": [
                "example of a class",
                "How to create a class in Python"
            ],
            "responses": [
                "class Persona: pass",
                "CLASS ANIMAL: DEF __INIT __ (Self, Name): Self. Name = Name"
            ]
        },
        {
            "tag": "code_import",
            "patterns": [
                "How to import a library",
                "Import example in Python"
            ],
            "responses": [
                "import math",
                "from datetime import datetime"
            ]
        },
        {
            "tag": "code_lista",
            "patterns": [
                "example of a list",
                "I want to see how to use Python lists"
            ],
            "responses": [
                "List = [1, 2, 3];print (list)",
                "Names = [\"Ana\", \"Luis\"];print (names [0])"
            ]
        },
        {
            "tag": "CODE_CODE",
            "patterns": [
                "Example of dictionary",
                "I want a dictionary in Python"
            ],
            "responses": [
                "Dictionary = {\"key\": \"value\"};print (dictionary)",
                "Info = {\"name\": \"Juan\", \"age\": 25};print (info [\"name\"])"
            ]
        },
        {
            "tag": "codigo_sustituir_elementos_lista_js",
            "patterns": [
                "cómo sustituir un elemento en una lista en JavaScript",
                "ejemplo de sustitución en listas en JavaScript"
            ],
            "responses": [
                "let lista = [1, 2, 3]; lista[1] = 5; console.log(lista);",
                "let valores = [10, 20, 30]; valores[0] = 100; console.log(valores);"
            ]
        },
        {
            "tag": "codigo_matriz_transpuesta_js",
            "patterns": [
                "cómo obtener la transpuesta de una matriz en JavaScript",
                "ejemplo de transposición de matrices en JavaScript"
            ],
            "responses": [
                "let matriz = [[1, 2], [3, 4]]; let transpuesta = matriz[0].map((_, i) => matriz.map(row => row[i])); console.log(transpuesta);",
                "let m = [[1, 2], [3, 4]]; let transpuesta = m[0].map((_, i) => m.map(row => row[i])); console.log(transpuesta);"
            ]
        },
        {
            "tag": "codigo_ordenar_dict_por_valor_js",
            "patterns": [
                "cómo ordenar un diccionario por valor en JavaScript",
                "ejemplo de ordenar diccionario por valor en JavaScript"
            ],
            "responses": [
                "let d = {a: 2, b: 1}; let sorted_dict = Object.fromEntries(Object.entries(d).sort(([,a],[,b]) => a - b)); console.log(sorted_dict);",
                "let data = {x: 10, y: 5}; let sorted_data = Object.fromEntries(Object.entries(data).sort(([,a],[,b]) => a - b)); console.log(sorted_data);"
            ]
        },
        {
            "tag": "code_hola_mundo_js",
            "patterns": [
                "code of a hello world in JavaScript",
                "I want the code to print hello world in JavaScript"
            ],
            "responses": [
                "console.log('Hello World');",
                "You can write: console.log('Hi Mundo');"
            ]
        },
        {
            "tag": "CODE_BUCLE_FOR_js",
            "patterns": [
                "example of a loop for in JavaScript",
                "I want to see how a for loop works in JavaScript"
            ],
            "responses": [
                "for (let i = 0; i < 5; i++) { console.log(i); }",
                "let arr = [1, 2, 3]; arr.forEach(i => console.log(i));"
            ]
        },
        {
            "tag": "CODE_CONDICTIONAL_js",
            "patterns": [
                "Code for a condition in JavaScript",
                "How to write an if statement in JavaScript"
            ],
            "responses": [
                "if (x > 0) { console.log('Positive'); }",
                "if (x === 0) { console.log('Zero'); }"
            ]
        },
        {
            "tag": "CODE_WHILE_js",
            "patterns": [
                "While loop example in JavaScript",
                "I want a while loop in JavaScript"
            ],
            "responses": [
                "let x = 0; while (x < 10) { console.log(x); x++; }",
                "while (true) { console.log('Executing'); break; }"
            ]
        },
        {
            "tag": "CODE_FUNCTION_js",
            "patterns": [
                "example of a function in JavaScript",
                "I want to see how a function is done in JavaScript"
            ],
            "responses": [
                "function greeting() { console.log('Hello'); }",
                "const add = (a, b) => a + b; console.log(add(3, 4));"
            ]
        },
        {
            "tag": "CODE_CLASE_js",
            "patterns": [
                "example of a class in JavaScript",
                "How to create a class in JavaScript"
            ],
            "responses": [
                "class Person { constructor(name) { this.name = name; } } let p = new Person('Ana'); console.log(p.name);",
                "class Animal { constructor(type) { this.type = type; } } let a = new Animal('Cat'); console.log(a.type);"
            ]
        },
        {
            "tag": "code_import_js",
            "patterns": [
                "How to import a library in JavaScript",
                "Import example in JavaScript"
            ],
            "responses": [
                "import math from 'mathjs';",
                "import { DateTime } from 'luxon';"
            ]
        },
        {
            "tag": "code_lista_js",
            "patterns": [
                "example of a list in JavaScript",
                "I want to see how to use lists in JavaScript"
            ],
            "responses": [
                "let list = [1, 2, 3]; console.log(list);",
                "let names = ['Ana', 'Luis']; console.log(names[0]);"
            ]
        },
        {
            "tag": "CODE_CODE_js",
            "patterns": [
                "Example of a dictionary in JavaScript",
                "I want a dictionary in JavaScript"
            ],
            "responses": [
                "let dictionary = {'key': 'value'}; console.log(dictionary);",
                "let info = {'name': 'Juan', 'age': 25}; console.log(info['name']);"
            ]
        },
        {
            "tag": "CODE_SET",
            "patterns": [
                "example of a set",
                "How a set is used in python"
            ],
            "responses": [
                "mi_set = {1, 2, 3}; print(mi_set)",
                "= set of numbers ([1, 2, 2, 3]);Print (numbers)"
            ]
        },
        {
            "tag": "CODE_TUPLA",
            "patterns": [
                "example of a tupla",
                "How to use a tupla in python"
            ],
            "responses": [
                "double = (1, 2, 3);Print (double)",
                "colors = (\"red\", \"blue\");print (colors [1])"
            ]
        },
        {
            "tag": "codigo_input",
            "patterns": [
                "How to read an input",
                "I want an example with Input"
            ],
            "responses": [
                "Name = Input (\"What's your name?\");print (name)",
                "age = int (input (\"what is your age?\"));print (age)"
            ]
        },
        {
            "tag": "CODE_ARCHIVO",
            "patterns": [
                "How to open a file",
                "Example to handle files"
            ],
            "responses": [
                "with open(\"archivo.txt\", \"r\") as f: print(f.read())",
                "f = open(\"datos.txt\", \"w\"); f.write(\"Hola\"); f.close()"
            ]
        },
        {
            "tag": "CODE_EXCEPTION",
            "patterns": [
                "Exception management example",
                "How to handle errors in Python"
            ],
            "responses": [
                "try: x = 1 / 0; except ZeroDivisionError: print(\"Error\")",
                "Try: F = Open (\"No_existe.txt\");Except Filenotfonderror: print (\"file not found\")"
            ]
        },
        {
            "tag": "CODE_LAMBDA",
            "patterns": [
                "Lambda function example",
                "I want an anonymous function in Python"
            ],
            "responses": [
                "doble = lambda x: x * 2; print(doble(4))",
                "suma = lambda a, b: a + b; print(suma(3, 5))"
            ]
        },
        {
            "tag": "CODE_COMPRENSION",
            "patterns": [
                "Example of List Understanding",
                "I want a list by understanding"
            ],
            "responses": [
                "square = [x ** 2 for x in range (5)];print (square)",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "CODE_MODULO",
            "patterns": [
                "How to use a module",
                "I want an example with modules"
            ],
            "responses": [
                "import math; print(math.sqrt(16))",
                "from os import path; print(path.exists(\"archivo.txt\"))"
            ]
        },
        {
            "tag": "CODE_FSTING",
            "patterns": [
                "F-STRING example",
                "How to format strings in python"
            ],
            "responses": [
                "name = \"Juan\";print (f \"hello, {name}\")",
                "a, b = 5, 10;print (f \"the sum of {a} and {b} is {a + b}\")"
            ]
        },
        {
            "tag": "code_map",
            "patterns": [
                "Example with Map",
                "I want to use MAP in Python"
            ],
            "responses": [
                "numeros = [1, 2, 3]; print(list(map(lambda x: x * 2, numeros)))",
                "Names = [\"Ana\", \"Luis\"];print (list (MAP (Str.upper, names)))"
            ]
        },
        {
            "tag": "CODE_ZIP",
            "patterns": [
                "Example with Zip",
                "How to combine lists in Python"
            ],
            "responses": [
                "a = [1, 2]; b = [\"uno\", \"dos\"]; print(list(zip(a, b)))",
                "x = [1, 2, 3]; y = [4, 5, 6]; print(list(zip(x, y)))"
            ]
        },
        {
            "tag": "CODE_SET_js",
            "patterns": [
                "example of a set in JavaScript",
                "How a set is used in JavaScript"
            ],
            "responses": [
                "let mySet = new Set([1, 2, 3]); console.log(mySet);",
                "let numbers = new Set([1, 2, 2, 3]); console.log(numbers);"
            ]
        },
        {
            "tag": "CODE_TUPLA_js",
            "patterns": [
                "example of a tuple in JavaScript",
                "How to use a tuple in JavaScript"
            ],
            "responses": [
                "let double = [1, 2, 3]; console.log(double);",
                "let colors = ['red', 'blue']; console.log(colors[1]);"
            ]
        },
        {
            "tag": "codigo_input_js",
            "patterns": [
                "How to read an input in JavaScript",
                "I want an example with input in JavaScript"
            ],
            "responses": [
                "let name = prompt(\"What's your name?\"); console.log(name);",
                "let age = parseInt(prompt(\"What is your age?\")); console.log(age);"
            ]
        },
        {
            "tag": "CODE_ARCHIVO_js",
            "patterns": [
                "How to open a file in JavaScript",
                "Example to handle files in JavaScript"
            ],
            "responses": [
                "let fs = require('fs'); fs.readFile('archivo.txt', 'utf8', (err, data) => { if (err) throw err; console.log(data); });",
                "let fs = require('fs'); fs.writeFile('datos.txt', 'Hola', err => { if (err) throw err; console.log('Data written'); });"
            ]
        },
        {
            "tag": "CODE_EXCEPTION_js",
            "patterns": [
                "Exception management example in JavaScript",
                "How to handle errors in JavaScript"
            ],
            "responses": [
                "try { let x = 1 / 0; } catch (e) { console.log('Error:', e); }",
                "try { let f = fs.openSync('no_existe.txt'); } catch (e) { console.log('File not found:', e); }"
            ]
        },
        {
            "tag": "CODE_LAMBDA_js",
            "patterns": [
                "Lambda function example in JavaScript",
                "I want an anonymous function in JavaScript"
            ],
            "responses": [
                "let double = x => x * 2; console.log(double(4));",
                "let sum = (a, b) => a + b; console.log(sum(3, 5));"
            ]
        },
        {
            "tag": "CODE_COMPRENSION_js",
            "patterns": [
                "Example of List Understanding in JavaScript",
                "I want a list by understanding in JavaScript"
            ],
            "responses": [
                "let squares = [...Array(5).keys()].map(x => x ** 2); console.log(squares);",
                "let evens = [...Array(10).keys()].filter(x => x % 2 === 0); console.log(evens);"
            ]
        },
        {
            "tag": "CODE_MODULO_js",
            "patterns": [
                "How to use a module in JavaScript",
                "I want an example with modules in JavaScript"
            ],
            "responses": [
                "import { sqrt } from 'mathjs'; console.log(sqrt(16));",
                "import path from 'path'; console.log(path.existsSync('archivo.txt'));"
            ]
        },
        {
            "tag": "CODE_FSTRING_js",
            "patterns": [
                "F-STRING example in JavaScript",
                "How to format strings in JavaScript"
            ],
            "responses": [
                "let name = 'Juan'; console.log(`Hello, ${name}`);",
                "let a = 5, b = 10; console.log(`The sum of ${a} and ${b} is ${a + b}`);"
            ]
        },
        {
            "tag": "CODE_MAP_js",
            "patterns": [
                "Example with map in JavaScript",
                "I want to use map in JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log(nums.map(x => x * 2));",
                "let names = ['Ana', 'Luis']; console.log(names.map(name => name.toUpperCase()));"
            ]
        },
        {
            "tag": "CODE_ZIP_js",
            "patterns": [
                "Example with zip in JavaScript",
                "How to combine lists in JavaScript"
            ],
            "responses": [
                "let a = [1, 2], b = ['uno', 'dos']; console.log(a.map((_, i) => [a[i], b[i]]));",
                "let x = [1, 2, 3], y = [4, 5, 6]; console.log(x.map((_, i) => [x[i], y[i]]));"
            ]
        },
        {
            "tag": "CODE_JON",
            "patterns": [
                "Example with Json",
                "How to use Json in Python"
            ],
            "responses": [
                "import json; data = {\"clave\": \"valor\"}; print(json.dumps(data))",
                "import json; data = \"{\\\"clave\\\": \\\"valor\\\"}\"; print(json.loads(data))"
            ]
        },
        {
            "tag": "code_datetime",
            "patterns": [
                "How to handle dates in Python",
                "I want to work with dates"
            ],
            "responses": [
                "From Dateime Datetime;now = datetime.now ();print (now)",
                "from datetime import date; hoy = date.today(); print(hoy)"
            ]
        },
        {
            "tag": "CODE_RANDOM",
            "patterns": [
                "Example with Random",
                "I want to generate random numbers"
            ],
            "responses": [
                "import random; print(random.randint(1, 10))",
                "import random; print(random.choice([\"rojo\", \"azul\", \"verde\"]))"
            ]
        },
        {
            "tag": "CODE_ITERATOR",
            "patterns": [
                "Example with iterators",
                "I want to use an iterator"
            ],
            "responses": [
                "iterador = iter([1, 2, 3]); print(next(iterador))",
                "for valor in iter([\"a\", \"b\", \"c\"]): print(valor)"
            ]
        },
        {
            "tag": "Code_Generator",
            "patterns": [
                "example of a generator",
                "I want a generator in Python"
            ],
            "responses": [
                "def contador(): yield 1; yield 2; yield 3; print(list(contador()))",
                "def pares(): for x in range(0, 10, 2): yield x; print(list(pares()))"
            ]
        },
        {
            "tag": "CODE_PROTIZED",
            "patterns": [
                "How to use @Property in Python",
                "Example with property decorators"
            ],
            "responses": [
                "Class Person: @Property Def Age (Self): Return 25;P = person ();print (p.adad)",
                "class Circulo: def __init__(self, radio): self.radio = radio; @property def area(self): return 3.14 * self.radio**2; c = Circulo(5); print(c.area)"
            ]
        },
        {
            "tag": "code_filter",
            "patterns": [
                "Example with Filter",
                "How to use Filter in Python"
            ],
            "responses": [
                "numbers = [1, 2, 3, 4];pairs = filter (lambda x: x % 2 == 0, numbers);print (list (pairs))",
                "Names = [\"Ana\", \"Luis\", \"Juan\"];long = filter (Lambda x: Len (x)> 3, names);print (List (Long))"
            ]
        },
        {
            "tag": "CODE_Reduce",
            "patterns": [
                "Example with reduce",
                "I want to use reduce in python"
            ],
            "responses": [
                "from funnotools import reduce;numbers = [1, 2, 3];Suma = reduce (Lambda x, y: x + y, numbers);Print (Suma)",
                "From Functools Import reduces;List = [2, 3, 4];product = reduce (lambda x, y: x * y, list);print (product)"
            ]
        },
        {
            "tag": "CODE_NUMERATE",
            "patterns": [
                "Example with enumerate",
                "How to use List in Python"
            ],
            "responses": [
                "List = [\"A\", \"B\", \"C\"];for index, enumerate value (list): print (index, value)",
                "Names = [\"Ana\", \"Luis\"];for i, name in enumerate (names): print (f \"{i}: {name}\")"
            ]
        },
        {
            "tag": "CODE_Decorador",
            "patterns": [
                "Example of decorator",
                "I want to use decorators in Python"
            ],
            "responses": [
                "Def Decorator (Func): Def wrapping (): print (\"start\");function ();print (\"end\");return wrap;@Decoradora Def greeting (): print (\"hello\");greeting()",
                "DEF Decorator (FUNC): DEF Wrapper (*ARGS, ** KWARGS): Print (\"Before\");result = function (*args, ** kwargs);Print (\"Después\");Return Result;Return Wrapper;@decador def Suma (A, B): Return A + B;Suma (2, 3)"
            ]
        },
        {
            "tag": "CODE_MATRIZ",
            "patterns": [
                "How to create a matrix",
                "I want to see matrices in Python"
            ],
            "responses": [
                "matrix = [[1, 2], [3, 4]];print (matrix)",
                "ranks, columns = 2, 3;Matrix = [[0] * Columns for _ in Range (rows)];print (matrix)"
            ]
        },
        {
            "tag": "CODE_GRAPHIC",
            "patterns": [
                "Figure example in Python",
                "How to graph data"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2, 3], [4, 5, 6]); plt.show()",
                "import matplotlib.pyplot as plt; plt.bar([1, 2, 3], [4, 5, 6]); plt.show()"
            ]
        },
        {
            "tag": "CODE_JSON_js",
            "patterns": [
                "Example with Json in JavaScript",
                "How to use Json in JavaScript"
            ],
            "responses": [
                "let data = {\"clave\": \"valor\"}; console.log(JSON.stringify(data));",
                "let data = \"{\\\"clave\\\": \\\"valor\\\"}\"; console.log(JSON.parse(data));"
            ]
        },
        {
            "tag": "CODE_DATETIME_js",
            "patterns": [
                "How to handle dates in JavaScript",
                "I want to work with dates in JavaScript"
            ],
            "responses": [
                "let now = new Date(); console.log(now);",
                "let today = new Date().toLocaleDateString(); console.log(today);"
            ]
        },
        {
            "tag": "CODE_RANDOM_js",
            "patterns": [
                "Example with Random in JavaScript",
                "I want to generate random numbers in JavaScript"
            ],
            "responses": [
                "let randomNum = Math.floor(Math.random() * 10) + 1; console.log(randomNum);",
                "let colors = ['rojo', 'azul', 'verde']; console.log(colors[Math.floor(Math.random() * colors.length)]);"
            ]
        },
        {
            "tag": "CODE_ITERATOR_js",
            "patterns": [
                "Example with iterators in JavaScript",
                "I want to use an iterator in JavaScript"
            ],
            "responses": [
                "let iterator = [1, 2, 3][Symbol.iterator](); console.log(iterator.next().value);",
                "let values = ['a', 'b', 'c']; for (let value of values) { console.log(value); }"
            ]
        },
        {
            "tag": "CODE_GENERATOR_js",
            "patterns": [
                "Example of a generator in JavaScript",
                "I want a generator in JavaScript"
            ],
            "responses": [
                "function* counter() { yield 1; yield 2; yield 3; } let gen = counter(); console.log(gen.next().value);",
                "function* evenNumbers() { for (let x = 0; x < 10; x += 2) yield x; } let gen = evenNumbers(); console.log([...gen]);"
            ]
        },
        {
            "tag": "CODE_PROPERTY_js",
            "patterns": [
                "How to use @Property in JavaScript",
                "Example with property decorators in JavaScript"
            ],
            "responses": [
                "class Person { constructor() { this._age = 25; } get age() { return this._age; } } const p = new Person(); console.log(p.age);",
                "class Circle { constructor(radius) { this.radius = radius; } get area() { return Math.PI * this.radius ** 2; } } const c = new Circle(5); console.log(c.area);"
            ]
        },
        {
            "tag": "CODE_FILTER_js",
            "patterns": [
                "Example with Filter in JavaScript",
                "How to use Filter in JavaScript"
            ],
            "responses": [
                "let numbers = [1, 2, 3, 4]; let evenNumbers = numbers.filter(x => x % 2 === 0); console.log(evenNumbers);",
                "let names = ['Ana', 'Luis', 'Juan']; let longNames = names.filter(name => name.length > 3); console.log(longNames);"
            ]
        },
        {
            "tag": "CODE_REDUCE_js",
            "patterns": [
                "Example with reduce in JavaScript",
                "I want to use reduce in JavaScript"
            ],
            "responses": [
                "let numbers = [1, 2, 3]; let sum = numbers.reduce((x, y) => x + y); console.log(sum);",
                "let list = [2, 3, 4]; let product = list.reduce((x, y) => x * y); console.log(product);"
            ]
        },
        {
            "tag": "CODE_ENUMERATE_js",
            "patterns": [
                "Example with enumerate in JavaScript",
                "How to use enumerate in JavaScript"
            ],
            "responses": [
                "let list = ['A', 'B', 'C']; list.forEach((value, index) => { console.log(index, value); });",
                "let names = ['Ana', 'Luis']; names.forEach((name, i) => { console.log(\\`\\${i}: \\${name}\\`); });"
            ]
        },
        {
            "tag": "CODE_DECORATOR_js",
            "patterns": [
                "Example of decorator in JavaScript",
                "I want to use decorators in JavaScript"
            ],
            "responses": [
                "function decorator(func) { return function() { console.log('Start'); func(); console.log('End'); }; } function greeting() { console.log('Hello'); } const decoratedGreeting = decorator(greeting); decoratedGreeting();",
                "function decorator(func) { return function(...args) { console.log('Before'); const result = func(...args); console.log('After'); return result; }; } function sum(a, b) { return a + b; } const decoratedSum = decorator(sum); console.log(decoratedSum(2, 3));"
            ]
        },
        {
            "tag": "CODE_MATRIX_js",
            "patterns": [
                "How to create a matrix in JavaScript",
                "I want to see matrices in JavaScript"
            ],
            "responses": [
                "let matrix = [[1, 2], [3, 4]]; console.log(matrix);",
                "let rows = 2, columns = 3; let matrix = Array.from({ length: rows }, () => Array(columns).fill(0)); console.log(matrix);"
            ]
        },
        {
            "tag": "CODE_GRAPHIC_js",
            "patterns": [
                "Figure example in JavaScript",
                "How to graph data in JavaScript"
            ],
            "responses": [
                "import { plot } from 'plotly.js'; let data = [{ x: [1, 2, 3], y: [4, 5, 6], type: 'scatter' }]; plot('myDiv', data);",
                "import { bar } from 'plotly.js'; let data = [{ x: [1, 2, 3], y: [4, 5, 6], type: 'bar' }]; bar('myDiv', data);"
            ]
        },
        {
            "tag": "CODE_RE",
            "patterns": [
                "Example of regular expressions",
                "I want to use Re in Python"
            ],
            "responses": [
                "Import Re;text = \"Hello world\";print (re.search (\"world\", text))",
                "matter re;string = \"abc123\";print(findall(\"\\d+\", string))"
            ]
        },
        {
            "tag": "CODE_CSV",
            "patterns": [
                "Example with CSV",
                "How to read a CSV file"
            ],
            "responses": [
                "import csv; with open(\"archivo.csv\") as f: reader = csv.reader(f); for fila in reader: print(fila)",
                "import csv; with open(\"datos.csv\", \"w\", newline=\"\") as f: writer = csv.writer(f); writer.writerow([\"Nombre\", \"Edad\"]); writer.writerow([\"Ana\", 30])"
            ]
        },
        {
            "tag": "codigo_sqlite",
            "patterns": [
                "How to use Sqlite in Python",
                "SQLite database example"
            ],
            "responses": [
                "import sqlite3; con = sqlite3.connect(\"mi_db.db\"); con.execute(\"CREATE TABLE IF NOT EXISTS usuarios (id INTEGER, nombre TEXT)\"); con.close()",
                "import sqlite3; con = sqlite3.connect(\"mi_db.db\"); con.execute(\"INSERT INTO usuarios VALUES (1, 'Juan')\"); con.commit(); con.close()"
            ]
        },
        {
            "tag": "Multihilo code",
            "patterns": [
                "Multihilo example",
                "How to use Threads in Python"
            ],
            "responses": [
                "Import Threading;Def Task (): print (\"thread in execution\");thread = threading.thread (target = task);thread.start ()",
                "Import Threading;Def greet (): print (\"Hello from a thread\");thread = threading.thread (target = greet);thread.start ()"
            ]
        },
        {
            "tag": "System code",
            "patterns": [
                "How to interact with the system",
                "Example for system commands"
            ],
            "responses": [
                "import os; print(os.getcwd())",
                "import os; os.system(\"ls\")"
            ]
        },
        {
            "tag": "Code_hash",
            "patterns": [
                "How to generate a hash",
                "Hashon hashon example"
            ],
            "responses": [
                "import hashlib; hash = hashlib.md5(b\"texto\").hexdigest(); print(hash)",
                "import hashlib; hash = hashlib.sha256(b\"password\").hexdigest(); print(hash)"
            ]
        },
        {
            "tag": "CODE_HILOS_ASYNC",
            "patterns": [
                "Async example",
                "How to use Async in Python"
            ],
            "responses": [
                "import asyncio; async def main(): print(\"Hola Asyncio\"); asyncio.run(main())",
                "import asyncio; async def saludar(): await asyncio.sleep(1); print(\"Hola Async\"); asyncio.run(saludar())"
            ]
        },
        {
            "tag": "codigo_unit_test",
            "patterns": [
                "How to use Unittest",
                "example of unit tests"
            ],
            "responses": [
                "import unittest; class TestSuma(unittest.TestCase): def test_suma(self): self.assertEqual(1 + 1, 2); unittest.main()",
                "import unittest; class Pruebas(unittest.TestCase): def test_verdadero(self): self.assertTrue(True); unittest.main()"
            ]
        },
        {
            "tag": "code_pandas",
            "patterns": [
                "Example with pandas",
                "How to handle data with pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({\"A\": [1, 2], \"B\": [3, 4]}); print(df)",
                "import pandas as pd; df = pd.read_csv(\"archivo.csv\"); print(df.head())"
            ]
        },
        {
            "tag": "code_nupy",
            "patterns": [
                "How to use Numpy",
                "Example with Numpy"
            ],
            "responses": [
                "import numpy as np; arr = np.array([1, 2, 3]); print(arr)",
                "import numpy as np; matriz = np.zeros((2, 3)); print(matriz)"
            ]
        },
        {
            "tag": "CODE_HERENCE",
            "patterns": [
                "example of inheritance",
                "How to use inheritance in Python"
            ],
            "responses": [
                "class Animal: pass; class Perro(Animal): pass",
                "class Vehiculo: pass; class Coche(Vehiculo): pass"
            ]
        },
        {
            "tag": "CODE_PIL",
            "patterns": [
                "Example with Pil",
                "How to handle images in Python"
            ],
            "responses": [
                "from PIL import Image; img = Image.open(\"imagen.jpg\"); img.show()",
                "from PIL import Image; img = Image.new(\"RGB\", (100, 100), color=\"red\"); img.show()"
            ]
        },
        {
            "tag": "CODE_ARGV",
            "patterns": [
                "How to use ARGV",
                "Example with arguments in Python"
            ],
            "responses": [
                "import sys; print(sys.argv)",
                "import sys; print(f\"Primer argumento: {sys.argv[1]}\")"
            ]
        },
        {
            "tag": "codigo_typing",
            "patterns": [
                "How to use Typing",
                "Example with type annotations"
            ],
            "responses": [
                "from typing import List; def suma(lista: List[int]) -> int: return sum(lista)",
                "from typing import Dict; def obtener_valor(dic: Dict[str, int], clave: str) -> int: return dic[clave]"
            ]
        },
        {
            "tag": "CODE_RE_js",
            "patterns": [
                "Example of regular expressions in JavaScript",
                "I want to use Re in JavaScript"
            ],
            "responses": [
                "const text = \"Hello world\"; console.log(text.match(/world/))",
                "const string = \"abc123\"; console.log(string.match(/\\d+/))"
            ]
        },
        {
            "tag": "CODE_CSV_js",
            "patterns": [
                "Example with CSV in JavaScript",
                "How to read a CSV file in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readFileSync('archivo.csv', 'utf8').split('\\n').forEach(line => console.log(line));",
                "const fs = require('fs'); const data = [['Nombre', 'Edad'], ['Ana', 30]]; fs.writeFileSync('datos.csv', data.map(row => row.join(',')).join('\\n'));"
            ]
        },
        {
            "tag": "codigo_sqlite_js",
            "patterns": [
                "How to use Sqlite in JavaScript",
                "SQLite database example in JavaScript"
            ],
            "responses": [
                "const sqlite3 = require('sqlite3').verbose(); let db = new sqlite3.Database('./mi_db.db'); db.run('CREATE TABLE IF NOT EXISTS usuarios (id INTEGER, nombre TEXT)'); db.close();",
                "const sqlite3 = require('sqlite3').verbose(); let db = new sqlite3.Database('./mi_db.db'); db.run('INSERT INTO usuarios VALUES (1, \"Juan\")'); db.close();"
            ]
        },
        {
            "tag": "Multihilo_code_js",
            "patterns": [
                "Multihilo example in JavaScript",
                "How to use Threads in JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker('./task.js'); worker.on('message', message => console.log(message));",
                "const { Worker } = require('worker_threads'); const worker = new Worker('./greet.js'); worker.on('message', message => console.log(message));"
            ]
        },
        {
            "tag": "System_code_js",
            "patterns": [
                "How to interact with the system in JavaScript",
                "Example for system commands in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); console.log(process.cwd());",
                "const { exec } = require('child_process'); exec('ls', (err, stdout, stderr) => { console.log(stdout); });"
            ]
        },
        {
            "tag": "Code_hash_js",
            "patterns": [
                "How to generate a hash in JavaScript",
                "Hash example in JavaScript"
            ],
            "responses": [
                "const crypto = require('crypto'); const hash = crypto.createHash('md5').update('texto').digest('hex'); console.log(hash);",
                "const crypto = require('crypto'); const hash = crypto.createHash('sha256').update('password').digest('hex'); console.log(hash);"
            ]
        },
        {
            "tag": "CODE_HILOS_ASYNC_js",
            "patterns": [
                "Async example in JavaScript",
                "How to use Async in JavaScript"
            ],
            "responses": [
                "async function main() { console.log('Hola Asyncio'); } main();",
                "async function saludar() { await new Promise(resolve => setTimeout(resolve, 1000)); console.log('Hola Async'); } saludar();"
            ]
        },
        {
            "tag": "codigo_unit_test_js",
            "patterns": [
                "How to use Unittest in JavaScript",
                "Example of unit tests in JavaScript"
            ],
            "responses": [
                "const assert = require('assert'); assert.strictEqual(1 + 1, 2); console.log('Test passed');",
                "const assert = require('assert'); assert.ok(true); console.log('Test passed');"
            ]
        },
        {
            "tag": "code_pandas_js",
            "patterns": [
                "Example with pandas in JavaScript",
                "How to handle data with pandas in JavaScript"
            ],
            "responses": [
                "const pandas = require('danfojs-node'); const df = new pandas.DataFrame({A: [1, 2], B: [3, 4]}); df.print();",
                "const pandas = require('danfojs-node'); const df = await pandas.readCSV('archivo.csv'); df.head().print();"
            ]
        },
        {
            "tag": "code_nupy_js",
            "patterns": [
                "How to use Numpy in JavaScript",
                "Example with Numpy in JavaScript"
            ],
            "responses": [
                "const mathjs = require('mathjs'); const arr = mathjs.matrix([1, 2, 3]); console.log(arr);",
                "const mathjs = require('mathjs'); const matrix = mathjs.zeros([2, 3]); console.log(matrix);"
            ]
        },
        {
            "tag": "CODE_HERENCE_js",
            "patterns": [
                "Example of inheritance in JavaScript",
                "How to use inheritance in JavaScript"
            ],
            "responses": [
                "class Animal {} class Perro extends Animal {}",
                "class Vehiculo {} class Coche extends Vehiculo {}"
            ]
        },
        {
            "tag": "CODE_PIL_js",
            "patterns": [
                "Example with Pil in JavaScript",
                "How to handle images in JavaScript"
            ],
            "responses": [
                "const Jimp = require('jimp'); Jimp.read('imagen.jpg').then(img => { img.resize(256, 256).write('resized.jpg'); });",
                "const Jimp = require('jimp'); new Jimp(100, 100, 0xFFFF0000, (err, image) => { image.write('red_image.jpg'); });"
            ]
        },
        {
            "tag": "CODE_ARGV_js",
            "patterns": [
                "How to use ARGV in JavaScript",
                "Example with arguments in JavaScript"
            ],
            "responses": [
                "const args = process.argv; console.log(args);",
                "const args = process.argv.slice(2); console.log(`First argument: ${args[0]}`);"
            ]
        },
        {
            "tag": "codigo_typing_js",
            "patterns": [
                "How to use Typing in JavaScript",
                "Example with type annotations in JavaScript"
            ],
            "responses": [
                "const sum = (lista) => lista.reduce((acc, cur) => acc + cur, 0); console.log(sum([1, 2, 3]));",
                "const getValue = (dict, key) => dict[key]; const dic = {a: 1, b: 2}; console.log(getValue(dic, 'a'));"
            ]
        },
        {
            "tag": "codigo_erable",
            "patterns": [
                "How to use an iterable",
                "Iterable example in Python"
            ],
            "responses": [
                "Irable = Iter ([1, 2, 3]);Print (Next (Irable))",
                "iterador = iter(range(5)); print(next(iterador))"
            ]
        },
        {
            "tag": "CODE_NOLOGY",
            "patterns": [
                "How to use special methods",
                "Example of overload in python"
            ],
            "responses": [
                "Class Suma: DEF __add __ (self, otro): Return \"Personalized Suma\";print (short () + short ())",
                "class Vector: def __init__(self, x): self.x = x; def __repr__(self): return f\"Vector({self.x})\"; print(Vector(3))"
            ]
        },
        {
            "tag": "codigo_socket",
            "patterns": [
                "How to use sockets",
                "Example with sockets in Python"
            ],
            "responses": [
                "import socket; s = socket.socket(); s.bind((\"localhost\", 8080)); s.listen(1)",
                "import socket; s = socket.socket(); s.connect((\"localhost\", 8080)); print(\"Conectado\")"
            ]
        },
        {
            "tag": "CODE_PROPERTY_AVANZO",
            "patterns": [
                "How to use advanced property",
                "Advanced example with @Property"
            ],
            "responses": [
                "class Circulo: def __init__(self, radio): self._radio = radio; @property def radio(self): return self._radio; c = Circulo(5); print(c.radio)",
                "Class Person: Def __init __ (self): Self._adad = 0;@Property Def Age (Self): Return Self._adad;P = person ();print (p.adad)"
            ]
        },
        {
            "tag": "CODE_ZIP_DESEMPAQUETAR",
            "patterns": [
                "Example of unpacking Zip",
                "How to use reverse zip"
            ],
            "responses": [
                "a, b = zip(*[(1, 'uno'), (2, 'dos')]); print(a, b)",
                "pares = [(1, 'A'), (2, 'B')]; a, b = zip(*pares); print(a, b)"
            ]
        },
        {
            "tag": "CODE_TKINTER",
            "patterns": [
                "Example with Tkinter",
                "How to create interfaces in Python"
            ],
            "responses": [
                "Import tkinter as tk;window = tk.tk ();tk.label (window, text = 'hello'). pack ();window.Mainloop ()",
                "import tkinter as tk; root = tk.Tk(); tk.Button(root, text='Presiona').pack(); root.mainloop()"
            ]
        },
        {
            "tag": "CODE_FILTOS_NUMPY",
            "patterns": [
                "How to filter data in Numpy",
                "NUMPY FILTER EXAMPLE"
            ],
            "responses": [
                "import numpy as np; arr = np.array([1, 2, 3, 4]); print(arr[arr > 2])",
                "Import numpy to NP;matrix = np.array ([[1, 2], [3, 4]);print (matrix [matrix % 2 == 0])"
            ]
        },
        {
            "tag": "CODE_Multiprocess",
            "patterns": [
                "Example with multiprocessing",
                "How to use multiprocess in python"
            ],
            "responses": [
                "from multiprocessing import Process; def tarea(): print(\"Proceso\"); p = Process(target=tarea); p.start(); p.join()",
                "from multiprocessing import Pool; def f(x): return x*x; with Pool(5) as p: print(p.map(f, [1, 2, 3]))"
            ]
        },
        {
            "tag": "codigo_iterable_js",
            "patterns": [
                "How to use an iterable in JavaScript",
                "Iterable example in JavaScript"
            ],
            "responses": [
                "let iterable = [1, 2, 3]; console.log(iterable[Symbol.iterator]().next().value);",
                "let iterator = [0, 1, 2, 3, 4][Symbol.iterator](); console.log(iterator.next().value);"
            ]
        },
        {
            "tag": "CODE_NOLOGY_js",
            "patterns": [
                "How to use special methods in JavaScript",
                "Example of overload in JavaScript"
            ],
            "responses": [
                "class Suma { __add__(other) { return 'Personalized Suma'; } } const short = new Suma(); console.log(short + short);",
                "class Vector { constructor(x) { this.x = x; } toString() { return `Vector(${this.x})`; } } const vec = new Vector(3); console.log(vec.toString());"
            ]
        },
        {
            "tag": "codigo_socket_js",
            "patterns": [
                "How to use sockets in JavaScript",
                "Example with sockets in JavaScript"
            ],
            "responses": [
                "const net = require('net'); const server = net.createServer((socket) => { socket.write('Hello'); socket.end(); }); server.listen(8080);",
                "const net = require('net'); const client = net.createConnection({ port: 8080 }, () => { console.log('Connected'); });"
            ]
        },
        {
            "tag": "CODE_PROPERTY_AVANZO_js",
            "patterns": [
                "How to use advanced property in JavaScript",
                "Advanced example with @Property in JavaScript"
            ],
            "responses": [
                "class Circulo { constructor(radio) { this._radio = radio; } get radio() { return this._radio; } } const c = new Circulo(5); console.log(c.radio);",
                "class Person { constructor() { this._age = 0; } get age() { return this._age; } } const p = new Person(); console.log(p.age);"
            ]
        },
        {
            "tag": "CODE_ZIP_DESEMPAQUETAR_js",
            "patterns": [
                "Example of unpacking Zip in JavaScript",
                "How to use reverse zip in JavaScript"
            ],
            "responses": [
                "let pairs = [[1, 'uno'], [2, 'dos']]; let [a, b] = [[], []]; pairs.forEach(([x, y]) => { a.push(x); b.push(y); }); console.log(a, b);",
                "let pares = [[1, 'A'], [2, 'B']]; let [a, b] = [[], []]; pares.forEach(([x, y]) => { a.push(x); b.push(y); }); console.log(a, b);"
            ]
        },
        {
            "tag": "CODE_TKINTER_js",
            "patterns": [
                "Example with Tkinter in JavaScript",
                "How to create interfaces in JavaScript"
            ],
            "responses": [
                "const { app, Button } = require('electron'); const mainWindow = new app.BrowserWindow(); new Button(mainWindow, { text: 'Hello', onClick: () => console.log('Hello clicked') }); mainWindow.show();",
                "const { app, BrowserWindow } = require('electron'); const mainWindow = new BrowserWindow(); mainWindow.loadURL('about:blank');"
            ]
        },
        {
            "tag": "CODE_FILTOS_NUMPY_js",
            "patterns": [
                "How to filter data in Numpy in JavaScript",
                "Numpy filter example in JavaScript"
            ],
            "responses": [
                "const arr = [1, 2, 3, 4]; const filtered = arr.filter(num => num > 2); console.log(filtered);",
                "const matrix = [[1, 2], [3, 4]]; const filteredMatrix = matrix.flat().filter(num => num % 2 === 0); console.log(filteredMatrix);"
            ]
        },
        {
            "tag": "CODE_Multiprocess_js",
            "patterns": [
                "Example with multiprocessing in JavaScript",
                "How to use multiprocess in JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker('./task.js'); worker.on('message', message => console.log(message));",
                "const { Worker } = require('worker_threads'); const worker = new Worker('./task2.js'); worker.on('message', message => console.log(message));"
            ]
        },
        {
            "tag": "CODE_GRAPHICS_SEORN",
            "patterns": [
                "How to use seaborn",
                "Example of graphs with seabran"
            ],
            "responses": [
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.histplot([1, 2, 3, 4]); plt.show()",
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.boxplot(x=[1, 2, 3]); plt.show()"
            ]
        },
        {
            "tag": "codigo_format_string",
            "patterns": [
                "How to use format",
                "Advanced Format example"
            ],
            "responses": [
                "name = \"Luis\";print (\"hello {}\". format (name))",
                "a, b = 5, 10;print (\"the sum of {} and {} is {}\". format (a, b, a + b))"
            ]
        },
        {
            "tag": "CODOTLY CODE",
            "patterns": [
                "Example with Plotly",
                "How to graph with plotly"
            ],
            "responses": [
                "import plotly.express as px; fig = px.scatter(x=[1, 2], y=[3, 4]); fig.show()",
                "import plotly.graph_objects as go; fig = go.Figure(data=go.Bar(y=[2, 3])); fig.show()"
            ]
        },
        {
            "tag": "codigo_flask",
            "patterns": [
                "Example with Flak",
                "How to create a Flash server"
            ],
            "responses": [
                "from flask import Flask; app = Flask(__name__); @app.route('/') def inicio(): return 'Hola'; app.run()",
                "from flask import Flask; app = Flask(__name__); @app.route('/hello') def saludo(): return 'Hola Mundo'; app.run()"
            ]
        },
        {
            "tag": "CODE_DECORATOR_LOGGER",
            "patterns": [
                "Decorator for Logueo",
                "Logger example in Python"
            ],
            "responses": [
                "Def logger(func): def wrapper(*args, **kwargs): Print(f'llamada A {func.__name__}');Return Func(*args, **Kwargs);Return wrapper;@logger def sadudo(): print(\"hola\");Sadudo()",
                "def log(func): def wrapper(*args): print(f'Args: {args}'); return func(*args); return wrapper; @log def suma(a, b): return a + b; suma(1, 2)"
            ]
        },
        {
            "tag": "CODE_HEAPQ",
            "patterns": [
                "How to use Heapq",
                "Heap example in Python"
            ],
            "responses": [
                "import heapq; lista = [3, 1, 4, 1]; heapq.heapify(lista); print(lista)",
                "import heapq; lista = [4, 2, 5]; print(heapq.nlargest(2, lista))"
            ]
        },
        {
            "tag": "CODE_ARGPET",
            "patterns": [
                "How to use Archplate",
                "Example of arguments in console"
            ],
            "responses": [
                "Import argue;parser = argpse.argumentparser ();parser.add_argument ('-name');args = parser.prse_args ();print (args.name)",
                "import argparse; parser = argparse.ArgumentParser(); parser.add_argument('--edad', type=int); args = parser.parse_args(); print(args.edad)"
            ]
        },
        {
            "tag": "codigo_chain",
            "patterns": [
                "How to use Chain",
                "Example with Itetools.chain"
            ],
            "responses": [
                "from itertools import chain; print(list(chain([1, 2], [3, 4])))",
                "from itertools import chain; a, b = [\"x\"], [\"y\"]; print(list(chain(a, b)))"
            ]
        },
        {
            "tag": "codigo_classmethod",
            "patterns": [
                "How to use @classmethod",
                "Example with class methods"
            ],
            "responses": [
                "Class Person: @classmethod Def greeting (CLS): Return \"Hello from class\";print (person.Saludo ())",
                "CLASS CAR: @CLASSMETHOD DEF DESCRIPTION (CLS): RETURN \"VEHICLE\";print (car. DESCRIPTION ())"
            ]
        },
        {
            "tag": "codigo_staticmethod",
            "patterns": [
                "How to use @staticMethod",
                "Example with static methods"
            ],
            "responses": [
                "Class utilities: @Staticmethod def sums(a, B): return a + B;print(Summar(5, 3))",
                "Mathematical Class: @staticMethod def multiplication (A, B): Return A * B;Print (Mathematics.multiplicate (4, 6))"
            ]
        },
        {
            "tag": "CODE_PIPELINE_PANDAS",
            "patterns": [
                "How to use pipelines with pandas",
                "Advanced example with pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'a': [1, 2]}); print(df.pipe(lambda x: x+1))",
                "import pandas as pd; df = pd.DataFrame({'a': [1, 2]}); print(df.pipe(print))"
            ]
        },
        {
            "tag": "CODE_GRAPHICS_SEORN_js",
            "patterns": [
                "How to use seaborn in JavaScript",
                "Example of graphs with seaborn in JavaScript"
            ],
            "responses": [
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.histplot([1, 2, 3, 4]); plt.show()",
                "import seaborn as sns; import matplotlib.pyplot as plt; sns.boxplot(x=[1, 2, 3]); plt.show()"
            ]
        },
        {
            "tag": "codigo_format_string_js",
            "patterns": [
                "How to use format in JavaScript",
                "Advanced Format example in JavaScript"
            ],
            "responses": [
                "const name = 'Luis'; console.log(`Hello ${name}`);",
                "const a = 5, b = 10; console.log(`The sum of ${a} and ${b} is ${a + b}`);"
            ]
        },
        {
            "tag": "CODOTLY_CODE_js",
            "patterns": [
                "Example with Plotly in JavaScript",
                "How to graph with plotly in JavaScript"
            ],
            "responses": [
                "import plotly.express as px; let fig = px.scatter({x: [1, 2], y: [3, 4]}); fig.show();",
                "import plotly.graph_objects as go; let fig = go.Figure({data: go.Bar({y: [2, 3]})}); fig.show();"
            ]
        },
        {
            "tag": "codigo_flask_js",
            "patterns": [
                "Example with Flask in JavaScript",
                "How to create a Flash server in JavaScript"
            ],
            "responses": [
                "const express = require('express'); const app = express(); app.get('/', (req, res) => { res.send('Hello'); }); app.listen(3000);",
                "const express = require('express'); const app = express(); app.get('/hello', (req, res) => { res.send('Hello World'); }); app.listen(3000);"
            ]
        },
        {
            "tag": "CODE_DECORATOR_LOGGER_js",
            "patterns": [
                "Decorator for Logger in JavaScript",
                "Logger example in JavaScript"
            ],
            "responses": [
                "function logger(func) { return function(...args) { console.log(`Called ${func.name}`); return func(...args); }; } const greet = logger(() => console.log('Hello')); greet();",
                "function log(func) { return function(...args) { console.log(`Args: ${args}`); return func(...args); }; } const add = log((a, b) => a + b); add(1, 2);"
            ]
        },
        {
            "tag": "CODE_HEAPQ_js",
            "patterns": [
                "How to use Heapq in JavaScript",
                "Heap example in JavaScript"
            ],
            "responses": [
                "const heapq = require('heapq'); let list = [3, 1, 4, 1]; heapq.heapify(list); console.log(list);",
                "const heapq = require('heapq'); let list = [4, 2, 5]; console.log(heapq.nlargest(2, list));"
            ]
        },
        {
            "tag": "CODE_ARGPET_js",
            "patterns": [
                "How to use Archplate in JavaScript",
                "Example of arguments in console in JavaScript"
            ],
            "responses": [
                "const args = process.argv; console.log(args[2]);",
                "const args = require('minimist')(process.argv.slice(2)); console.log(args.edad);"
            ]
        },
        {
            "tag": "codigo_chain_js",
            "patterns": [
                "How to use Chain in JavaScript",
                "Example with Itertools.chain in JavaScript"
            ],
            "responses": [
                "const chain = require('itertools').chain; console.log([...chain([1, 2], [3, 4])]);",
                "const { chain } = require('itertools'); let a = ['x'], b = ['y']; console.log([...chain(a, b)]);"
            ]
        },
        {
            "tag": "codigo_classmethod_js",
            "patterns": [
                "How to use @classmethod in JavaScript",
                "Example with class methods in JavaScript"
            ],
            "responses": [
                "class Person { static greeting() { return 'Hello from class'; } } console.log(Person.greeting());",
                "class Car { static description() { return 'Vehicle'; } } console.log(Car.description());"
            ]
        },
        {
            "tag": "codigo_staticmethod_js",
            "patterns": [
                "How to use @staticmethod in JavaScript",
                "Example with static methods in JavaScript"
            ],
            "responses": [
                "class Utilities { static sum(a, b) { return a + b; } } console.log(Utilities.sum(5, 3));",
                "class Math { static multiply(a, b) { return a * b; } } console.log(Math.multiply(4, 6));"
            ]
        },
        {
            "tag": "CODE_PIPELINE_PANDAS_js",
            "patterns": [
                "How to use pipelines with pandas in JavaScript",
                "Advanced example with pandas in JavaScript"
            ],
            "responses": [
                "const pandas = require('pandas-js'); const df = new pandas.DataFrame({'a': [1, 2]}); console.log(df.apply(x => x + 1));",
                "const pandas = require('pandas-js'); const df = new pandas.DataFrame({'a': [1, 2]}); console.log(df.apply(x => console.log(x)));"
            ]
        },
        {
            "tag": "CODE_REGISTROS",
            "patterns": [
                "Registration example with logging",
                "How to use logging"
            ],
            "responses": [
                "import logging; logging.basicConfig(level=logging.INFO); logging.info(\"Mensaje informativo\")",
                "import logging; logging.error(\"Error registrado\")"
            ]
        },
        {
            "tag": "codigo_deepcopy",
            "patterns": [
                "How to use Deepcopy",
                "Deep copy example"
            ],
            "responses": [
                "from copy import deepcopy; lista = [[1], [2]]; copia = deepcopy(lista); print(copia)",
                "from copy import deepcopy; dic = {'a': [1]}; nuevo_dic = deepcopy(dic); print(nuevo_dic)"
            ]
        },
        {
            "tag": "CODE_DASK",
            "patterns": [
                "Example with Dask",
                "How to use Dask"
            ],
            "responses": [
                "import dask.array as da; x = da.ones((10, 10), chunks=(5, 5)); print(x.mean().compute())",
                "import dask.dataframe as dd; df = dd.from_pandas(pd.DataFrame({'a': [1, 2]}), npartitions=1); print(df.compute())"
            ]
        },
        {
            "tag": "CODE_CLOUD_API",
            "patterns": [
                "API call example",
                "How to consume an API"
            ],
            "responses": [
                "import requests; r = requests.get('https://jsonplaceholder.typicode.com/todos/1'); print(r.json())",
                "import requests; r = requests.post('https://httpbin.org/post', json={'key': 'value'}); print(r.json())"
            ]
        },
        {
            "tag": "codigo_try_finally",
            "patterns": [
                "How to use end",
                "Example with Try-Finally"
            ],
            "responses": [
                "Try: print (1/0);Finally: print (\"This is always executed\")",
                "try: x = 1; finally: print(\"Limpieza completa\")"
            ]
        },
        {
            "tag": "codigo_itertools_product",
            "patterns": [
                "Example with itcherotools.product",
                "How to use Cartesian product"
            ],
            "responses": [
                "from itertools import product; print(list(product([1, 2], ['a', 'b'])))",
                "from itertools import product; a, b = [0], [3]; print(list(product(a, b)))"
            ]
        },
        {
            "tag": "codigo_sqlalchemy",
            "patterns": [
                "Example with Sqlalchemy",
                "How to use Sqlalchemy"
            ],
            "responses": [
                "from sqlalchemy import create_engine; engine = create_engine('sqlite:///:memory:'); print(engine)",
                "from sqlalchemy import create_engine; engine = create_engine('sqlite:///base.db'); print(engine)"
            ]
        },
        {
            "tag": "code_datetime_avanzado",
            "patterns": [
                "How to calculate dates differences",
                "Advanced example with datetime"
            ],
            "responses": [
                "From Dateime Import Datetime, Timedelta;today = datetime.now ();Future = Today + Timedelta (Days = 5);print (future)",
                "From Dateime Import Date;Birth = date (2000, 1, 1);today = date.today ();print (today - birth)"
            ]
        },
        {
            "tag": "codigo_inspect",
            "patterns": [
                "How to use Inspect",
                "Example to inspect functions"
            ],
            "responses": [
                "import inspect; def ejemplo(): pass; print(inspect.getsource(ejemplo))",
                "import inspect; print(inspect.ismodule(inspect))"
            ]
        },
        {
            "tag": "Code_Generadores",
            "patterns": [
                "How to use generators",
                "Example with Yield in Python"
            ],
            "responses": [
                "Def generator (): Yield 1;Yield 2;For Val in Generator (): Print (Val)",
                "def secuencia(): for i in range(3): yield i; print(list(secuencia()))"
            ]
        },
        {
            "tag": "CODE_REGISTROS_js",
            "patterns": [
                "Registration example with logging in JavaScript",
                "How to use logging in JavaScript"
            ],
            "responses": [
                "import logging; logging.basicConfig(level=logging.INFO); logging.info(\"Informational message\")",
                "import logging; logging.error(\"Error logged\")"
            ]
        },
        {
            "tag": "codigo_deepcopy_js",
            "patterns": [
                "How to use Deepcopy in JavaScript",
                "Deep copy example in JavaScript"
            ],
            "responses": [
                "const deepcopy = require('deepcopy'); let lista = [[1], [2]]; let copia = deepcopy(lista); console.log(copia);",
                "const deepcopy = require('deepcopy'); let dic = {'a': [1]}; let nuevoDic = deepcopy(dic); console.log(nuevoDic);"
            ]
        },
        {
            "tag": "CODE_DASK_js",
            "patterns": [
                "Example with Dask in JavaScript",
                "How to use Dask in JavaScript"
            ],
            "responses": [
                "import dask.array as da; let x = da.ones([10, 10], {chunks: [5, 5]}); console.log(x.mean().compute());",
                "import dask.dataframe as dd; let df = dd.from_pandas(pd.DataFrame({'a': [1, 2]}), 1); console.log(df.compute());"
            ]
        },
        {
            "tag": "CODE_CLOUD_API_js",
            "patterns": [
                "API call example in JavaScript",
                "How to consume an API in JavaScript"
            ],
            "responses": [
                "import fetch from 'node-fetch'; fetch('https://jsonplaceholder.typicode.com/todos/1').then(response => response.json()).then(json => console.log(json));",
                "import fetch from 'node-fetch'; fetch('https://httpbin.org/post', { method: 'POST', body: JSON.stringify({ key: 'value' }), headers: { 'Content-Type': 'application/json' } }).then(response => response.json()).then(json => console.log(json));"
            ]
        },
        {
            "tag": "codigo_try_finally_js",
            "patterns": [
                "How to use end in JavaScript",
                "Example with Try-Finally in JavaScript"
            ],
            "responses": [
                "try { console.log(1 / 0); } finally { console.log('This is always executed'); }",
                "try { let x = 1; } finally { console.log('Clean up complete'); }"
            ]
        },
        {
            "tag": "codigo_itertools_product_js",
            "patterns": [
                "Example with itertools.product in JavaScript",
                "How to use Cartesian product in JavaScript"
            ],
            "responses": [
                "const { product } = require('itertools'); console.log([...product([1, 2], ['a', 'b'])]);",
                "const { product } = require('itertools'); let a = [0], b = [3]; console.log([...product(a, b)]);"
            ]
        },
        {
            "tag": "codigo_sqlalchemy_js",
            "patterns": [
                "Example with Sqlalchemy in JavaScript",
                "How to use Sqlalchemy in JavaScript"
            ],
            "responses": [
                "const { createEngine } = require('sequelize'); let engine = createEngine('sqlite:///:memory:'); console.log(engine);",
                "const { createEngine } = require('sequelize'); let engine = createEngine('sqlite:///base.db'); console.log(engine);"
            ]
        },
        {
            "tag": "code_datetime_avanzado_js",
            "patterns": [
                "How to calculate dates differences in JavaScript",
                "Advanced example with datetime in JavaScript"
            ],
            "responses": [
                "const { DateTime } = require('luxon'); let today = DateTime.now(); let future = today.plus({ days: 5 }); console.log(future);",
                "const { DateTime } = require('luxon'); let birth = DateTime.fromISO('2000-01-01'); let today = DateTime.now(); console.log(today.diff(birth, 'days').toObject());"
            ]
        },
        {
            "tag": "codigo_inspect_js",
            "patterns": [
                "How to use Inspect in JavaScript",
                "Example to inspect functions in JavaScript"
            ],
            "responses": [
                "const inspect = require('util').inspect; function ejemplo() {}; console.log(inspect(ejemplo));",
                "const inspect = require('util').inspect; console.log(inspect(require('fs')));"
            ]
        },
        {
            "tag": "Code_Generadores_js",
            "patterns": [
                "How to use generators in JavaScript",
                "Example with Yield in JavaScript"
            ],
            "responses": [
                "function* generator() { yield 1; yield 2; } console.log([...generator()]);",
                "function* sequence() { for (let i = 0; i < 3; i++) yield i; } console.log([...sequence()]);"
            ]
        },
        {
            "tag": "CODE_MAGICAL METODES",
            "patterns": [
                "Example of magical methods",
                "How to use magical methods in Python"
            ],
            "responses": [
                "Class Example: Def __str __ (self): return 'example';print (example ())",
                "class Music: def __ddad_ (self, oro): return 'Suma';print() + Suma"
            ]
        },
        {
            "tag": "CODE_CONTROL_MEMORY",
            "patterns": [
                "How to release memory in Python",
                "Memory Control example"
            ],
            "responses": [
                "import gc; obj = [1, 2]; del obj; gc.collect()",
                "import gc; lista = []; gc.set_debug(gc.DEBUG_LEAK); print(gc.garbage)"
            ]
        },
        {
            "tag": "CODE_SERIALIZACION_JSON",
            "patterns": [
                "How to use Json in Python",
                "JON serialization example"
            ],
            "responses": [
                "import json; data = {'clave': 'valor'}; print(json.dumps(data))",
                "import json; json_str = '{\"nombre\": \"Juan\"}'; print(json.loads(json_str))"
            ]
        },
        {
            "tag": "CODE_DENAR",
            "patterns": [
                "How to order lists",
                "Example of Sorted in Python"
            ],
            "responses": [
                "List = [3, 1, 2];print (luck (list))",
                "Words = ['Z', 'A', 'B'];print (rated (words, reverse = true))"
            ]
        },
        {
            "tag": "CODE_OPERATORS_FUNCTIONAL",
            "patterns": [
                "MAP example in Python",
                "How to use functional operators"
            ],
            "responses": [
                "nums = [1, 2]; print(list(map(lambda x: x**2, nums)))",
                "Words = ['hello', 'world'];print (list (MAP (str.upper, words)))"
            ]
        },
        {
            "tag": "CODE_EXCEPTIONS_PERSONALIZED",
            "patterns": [
                "How to create personalized exceptions",
                "Example of personalized exceptions"
            ],
            "responses": [
                "class MiError(Exception): pass; raise MiError('Error personalizado')",
                "class CustomError(Exception): pass; try: raise CustomError('Oops'); except CustomError as e: print(e)"
            ]
        },
        {
            "tag": "CODE_ASINCONIA",
            "patterns": [
                "How to use Async in Python",
                "example of asynchrony"
            ],
            "responses": [
                "Import Asyncio;Async Def greeting (): print ('Hello');Asyncio.run (greeting ())",
                "Import Asyncio;Async Def Task (): Await Asyncio.sleep (1);print ('made');Asyncio.run (task ())"
            ]
        },
        {
            "tag": "codigo_web_scraping",
            "patterns": [
                "How to make scraping web",
                "Example with Beautifulosoup"
            ],
            "responses": [
                "from bs4 import BeautifulSoup; html = '<h1>Hola</h1>'; soup = BeautifulSoup(html, 'html.parser'); print(soup.h1.text)",
                "import requests; r = requests.get('https://example.com'); print(r.status_code)"
            ]
        },
        {
            "tag": "codigo_list_comprehension",
            "patterns": [
                "How to use List Comprehension",
                "Example of lists for understanding"
            ],
            "responses": [
                "nums = [1, 2, 3]; print([x*2 for x in nums])",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "codigo_multithreading",
            "patterns": [
                "How to use Multithreading",
                "Example with threads in Python"
            ],
            "responses": [
                "import threading; def tarea(): print('Hilo ejecutado'); t = threading.Thread(target=tarea); t.start()",
                "import threading; t = threading.Thread(target=lambda: print('Hola')); t.start()"
            ]
        },
        {
            "tag": "CODE_MAGICAL_METHODES_js",
            "patterns": [
                "Example of magical methods in JavaScript",
                "How to use magical methods in JavaScript"
            ],
            "responses": [
                "class Example { toString() { return 'example'; } } let example = new Example(); console.log(example.toString());",
                "class Music { toString() { return 'Suma'; } } let music = new Music(); console.log(music.toString());"
            ]
        },
        {
            "tag": "CODE_CONTROL_MEMORY_js",
            "patterns": [
                "How to release memory in JavaScript",
                "Memory Control example in JavaScript"
            ],
            "responses": [
                "let obj = [1, 2]; obj = null; console.log('Memory released');",
                "const gc = require('node-gc'); let lista = []; gc.collect(); console.log('Garbage collected');"
            ]
        },
        {
            "tag": "CODE_SERIALIZATION_JSON_js",
            "patterns": [
                "How to use JSON in JavaScript",
                "JSON serialization example in JavaScript"
            ],
            "responses": [
                "const data = { clave: 'valor' }; console.log(JSON.stringify(data));",
                "const json_str = '{\"nombre\": \"Juan\"}'; console.log(JSON.parse(json_str));"
            ]
        },
        {
            "tag": "CODE_SORT_js",
            "patterns": [
                "How to order lists in JavaScript",
                "Example of sorting in JavaScript"
            ],
            "responses": [
                "let list = [3, 1, 2]; console.log(list.sort());",
                "let words = ['z', 'a', 'b']; console.log(words.sort().reverse());"
            ]
        },
        {
            "tag": "CODE_OPERATORS_FUNCTIONAL_js",
            "patterns": [
                "map example in JavaScript",
                "How to use functional operators in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2]; console.log(nums.map(x => x ** 2));",
                "const words = ['hello', 'world']; console.log(words.map(str => str.toUpperCase()));"
            ]
        },
        {
            "tag": "CODE_EXCEPTIONS_PERSONALIZED_js",
            "patterns": [
                "How to create personalized exceptions in JavaScript",
                "Example of personalized exceptions in JavaScript"
            ],
            "responses": [
                "class MiError extends Error { } throw new MiError('Error personalizado');",
                "class CustomError extends Error { } try { throw new CustomError('Oops'); } catch (e) { console.log(e.message); }"
            ]
        },
        {
            "tag": "CODE_ASYNCHRONY_js",
            "patterns": [
                "How to use async in JavaScript",
                "Example of asynchrony in JavaScript"
            ],
            "responses": [
                "async function greeting() { console.log('Hello'); } greeting();",
                "async function task() { await new Promise(resolve => setTimeout(resolve, 1000)); console.log('Done'); } task();"
            ]
        },
        {
            "tag": "CODE_WEB_SCRAPING_js",
            "patterns": [
                "How to do web scraping in JavaScript",
                "Example with BeautifulSoup in JavaScript"
            ],
            "responses": [
                "const axios = require('axios'); axios.get('https://example.com').then(response => console.log(response.status));",
                "const cheerio = require('cheerio'); const html = '<h1>Hola</h1>'; const $ = cheerio.load(html); console.log($('h1').text());"
            ]
        },
        {
            "tag": "CODE_LIST_COMPREHENSION_js",
            "patterns": [
                "How to use list comprehension in JavaScript",
                "Example of list comprehension in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.map(x => x * 2));",
                "const pares = [...Array(10).keys()].filter(x => x % 2 === 0); console.log(pares);"
            ]
        },
        {
            "tag": "CODE_MULTITHREADING_js",
            "patterns": [
                "How to use multithreading in JavaScript",
                "Example with threads in JavaScript"
            ],
            "responses": [
                "const { Worker } = require('worker_threads'); const worker = new Worker('./worker.js'); worker.on('message', msg => console.log(msg));",
                "const thread = require('worker_threads'); const worker = new thread.Worker(() => { console.log('Hello from a thread'); });"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICTIONARY",
            "patterns": [
                "How to order a dictionary",
                "Example with Dictionaries"
            ],
            "responses": [
                "dic = {'a': 2, 'b': 1}; print(dict(sorted(dic.items())))",
                "datos = {'x': 10, 'y': 5}; print(sorted(datos.items(), key=lambda x: x[1]))"
            ]
        },
        {
            "tag": "codigo_datasets_numpy",
            "patterns": [
                "DATASETS EXAMPLE WITH NUMPY",
                "How to generate data in Numpy"
            ],
            "responses": [
                "import numpy as np; data = np.random.rand(100); print(data)",
                "import numpy as np; arr = np.linspace(0, 1, 10); print(arr)"
            ]
        },
        {
            "tag": "CODE_GRAPHICS_MATLOTLIB",
            "patterns": [
                "How to graph with Matpletlib",
                "Example with Matpletlib"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2], [3, 4]); plt.show()",
                "import matplotlib.pyplot as plt; plt.bar(['A', 'B'], [3, 5]); plt.show()"
            ]
        },
        {
            "tag": "CODE_CAPTURE_TECLADO",
            "patterns": [
                "How to capture keys",
                "Example with Keyboard"
            ],
            "responses": [
                "import keyboard; print('Presiona una tecla:'); tecla = keyboard.read_key(); print(tecla)",
                "import keyboard; keyboard.add_hotkey('ctrl+c', lambda: print('Copiado')); keyboard.wait()"
            ]
        },
        {
            "tag": "CODE_ARCHIVOS_CSV",
            "patterns": [
                "How to read CSV files",
                "Example with Pandas and CSV"
            ],
            "responses": [
                "import pandas as pd; df = pd.read_csv('archivo.csv'); print(df.head())",
                "import csv; with open('archivo.csv') as f: lector = csv.reader(f); print(list(lector))"
            ]
        },
        {
            "tag": "CODE_FILTRADO_PANDAS",
            "patterns": [
                "How to filter data with pandas",
                "Advanced example with pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'A': [1, 2, 3]}); print(df[df['A'] > 1])",
                "IMPORT PANDAS AS PD;Data = Pd.dataframe ({'Age': [10, 20, 30]});print (data [data [age ']> 18])"
            ]
        },
        {
            "tag": "CODE_PROPITIES_HERENCE",
            "patterns": [
                "How to use inheritance with properties",
                "Advanced inheritance example"
            ],
            "responses": [
                "Class Padre: @Property Def greeting (self): return 'hello';Class son (father): Pass;print (son () greeting)",
                "class A: def metodo(self): return 'A'; class B(A): pass; print(B().metodo())"
            ]
        },
        {
            "tag": "CODE_DECORATOR_CACHE",
            "patterns": [
                "How to use lru_cache",
                "example with python cache"
            ],
            "responses": [
                "from functools import lru_cache; @lru_cache def fib(n): return n if n <= 1 else fib(n-1) + fib(n-2); print(fib(10))",
                "From Functools Importing Lru_cache;@lru_cache defse(a, b): return A + b;Print(Satan(2, 3))"
            ]
        },
        {
            "tag": "Codigo_Collections_Deque",
            "patterns": [
                "How to use Deque",
                "Example with Collections.deque"
            ],
            "responses": [
                "from collections import deque; d = deque([1, 2]); d.append(3); print(d)",
                "from collections import deque; d = deque([1, 2]); d.popleft(); print(d)"
            ]
        },
        {
            "tag": "code_parseo_fechas",
            "patterns": [
                "How to parse dates",
                "example of datetime parsing"
            ],
            "responses": [
                "from datetime import datetime; fecha = datetime.strptime('2025-01-02', '%Y-%m-%d'); print(fecha)",
                "from datetime import datetime; print(datetime.strptime('12/31/99', '%m/%d/%y'))"
            ]
        },
        {
            "tag": "codigo_sqlite",
            "patterns": [
                "How to use SQLite",
                "Example with SQLite databases"
            ],
            "responses": [
                "import sqlite3; conn = sqlite3.connect(':memory:'); conn.execute('CREATE TABLE test (id INT)'); conn.close()",
                "import sqlite3; db = sqlite3.connect('mi_db.db'); db.execute('CREATE TABLE ejemplo (id INT)'); db.close()"
            ]
        },
        {
            "tag": "code_re_mach",
            "patterns": [
                "How to use Re.Match",
                "Regex example with match"
            ],
            "responses": [
                "import re; m = re.match('a', 'abc'); print(m.group(0))",
                "import re; print(re.match(r'\\d+', '123abc').group())"
            ]
        },
        {
            "tag": "CODE_COMPARACION_set",
            "patterns": [
                "How to compare sets",
                "example with sets in python"
            ],
            "responses": [
                "set1, set2 = {1, 2}, {2, 3}; print(set1 & set2)",
                "conj1, conj2 = {3, 4}, {4, 5}; print(conj1 | conj2)"
            ]
        },
        {
            "tag": "CODE_ RECURSIVITY",
            "patterns": [
                "How to use recursity",
                "Example of recursive function"
            ],
            "responses": [
                "def factorial(n): return 1 if n == 0 else n * factorial(n - 1); print(factorial(5))",
                "Soma guest (N): Retren N F n == 0 S + Soma (N -1);Brent (Soma (10))"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICTIONARY_js",
            "patterns": [
                "How to order a dictionary in JavaScript",
                "Example with dictionaries in JavaScript"
            ],
            "responses": [
                "const dic = {a: 2, b: 1}; console.log(Object.fromEntries(Object.entries(dic).sort((a, b) => a[1] - b[1])))",
                "const data = {x: 10, y: 5}; const sortedData = Object.fromEntries(Object.entries(data).sort((a, b) => a[1] - b[1])); console.log(sortedData)"
            ]
        },
        {
            "tag": "CODE_DATASETS_NUMPY_js",
            "patterns": [
                "Datasets example with Numpy in JavaScript",
                "How to generate data in Numpy in JavaScript"
            ],
            "responses": [
                "const data = Array.from({ length: 100 }, () => Math.random()); console.log(data)",
                "const arr = Array.from({ length: 10 }, (_, i) => i / 10); console.log(arr)"
            ]
        },
        {
            "tag": "CODE_GRAPHICS_MATPLOTLIB_js",
            "patterns": [
                "How to graph with Matplotlib in JavaScript",
                "Example with Matplotlib in JavaScript"
            ],
            "responses": [
                "import Plotly from 'plotly.js'; Plotly.newPlot('myDiv', [{ x: [1, 2], y: [3, 4], type: 'scatter' }]);",
                "import Plotly from 'plotly.js'; Plotly.newPlot('myDiv', [{ x: ['A', 'B'], y: [3, 5], type: 'bar' }]);"
            ]
        },
        {
            "tag": "CODE_CAPTURE_TECLADO_js",
            "patterns": [
                "How to capture keys in JavaScript",
                "Example with Keyboard in JavaScript"
            ],
            "responses": [
                "document.addEventListener('keydown', (event) => { console.log(event.key); });",
                "const readline = require('readline'); const rl = readline.createInterface({ input: process.stdin, output: process.stdout }); rl.question('Press a key: ', (answer) => { console.log(answer); rl.close(); });"
            ]
        },
        {
            "tag": "CODE_ARCHIVOS_CSV_js",
            "patterns": [
                "How to read CSV files in JavaScript",
                "Example with CSV and Pandas in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readFile('archivo.csv', 'utf8', (err, data) => { if (err) throw err; console.log(data); });",
                "const csv = require('csv-parser'); const fs = require('fs'); fs.createReadStream('archivo.csv').pipe(csv()).on('data', (row) => { console.log(row); });"
            ]
        },
        {
            "tag": "CODE_FILTRADO_PANDAS_js",
            "patterns": [
                "How to filter data with Pandas in JavaScript",
                "Advanced example with Pandas in JavaScript"
            ],
            "responses": [
                "const data = [{ A: 1 }, { A: 2 }, { A: 3 }]; console.log(data.filter(item => item.A > 1));",
                "const data = [{ age: 10 }, { age: 20 }, { age: 30 }]; console.log(data.filter(item => item.age > 18));"
            ]
        },
        {
            "tag": "CODE_PROPERTIES_INHERITANCE_js",
            "patterns": [
                "How to use inheritance with properties in JavaScript",
                "Advanced inheritance example in JavaScript"
            ],
            "responses": [
                "class Parent { get greeting() { return 'Hello'; } } class Child extends Parent {} const child = new Child(); console.log(child.greeting);",
                "class A { method() { return 'A'; } } class B extends A {} console.log(new B().method());"
            ]
        },
        {
            "tag": "CODE_DECORATOR_CACHE_js",
            "patterns": [
                "How to use lru_cache in JavaScript",
                "Example of cache in JavaScript"
            ],
            "responses": [
                "const memoize = fn => { const cache = new Map(); return (...args) => { if (cache.has(args[0])) { return cache.get(args[0]); } const result = fn(...args); cache.set(args[0], result); return result; }; }; const fib = memoize(n => (n <= 1 ? n : fib(n - 1) + fib(n - 2))); console.log(fib(10));",
                "const memoize = fn => { const cache = new Map(); return (...args) => { if (cache.has(args[0])) { return cache.get(args[0]); } const result = fn(...args); cache.set(args[0], result); return result; }; }; console.log(memoize((a, b) => a + b)(2, 3));"
            ]
        },
        {
            "tag": "CODE_DEQUE_js",
            "patterns": [
                "How to use Deque in JavaScript",
                "Example with Collections.deque in JavaScript"
            ],
            "responses": [
                "const deque = []; deque.push(3); deque.push(4); console.log(deque); deque.shift(); console.log(deque);",
                "const deque = []; deque.unshift(1); deque.push(2); console.log(deque); deque.pop(); console.log(deque);"
            ]
        },
        {
            "tag": "CODE_PARSEO_FECHAS_js",
            "patterns": [
                "How to parse dates in JavaScript",
                "Example of datetime parsing in JavaScript"
            ],
            "responses": [
                "const date = new Date('2025-01-02'); console.log(date);",
                "const date = new Date('12/31/99'); console.log(date);"
            ]
        },
        {
            "tag": "CODE_SQLITE_js",
            "patterns": [
                "How to use SQLite in JavaScript",
                "SQLite database example in JavaScript"
            ],
            "responses": [
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database(':memory:'); db.run('CREATE TABLE test (id INT)'); db.close();",
                "const sqlite3 = require('sqlite3').verbose(); const db = new sqlite3.Database('mi_db.db'); db.run('CREATE TABLE ejemplo (id INT)'); db.close();"
            ]
        },
        {
            "tag": "CODE_RE_MATCH_js",
            "patterns": [
                "How to use Re.match in JavaScript",
                "Regex example with match in JavaScript"
            ],
            "responses": [
                "const regex = /^a/; const str = 'abc'; console.log(str.match(regex));",
                "const regex = /\\d+/; const str = '123abc'; console.log(str.match(regex));"
            ]
        },
        {
            "tag": "CODE_SET_COMPARISON_js",
            "patterns": [
                "How to compare sets in JavaScript",
                "Example with sets in JavaScript"
            ],
            "responses": [
                "const set1 = new Set([1, 2]); const set2 = new Set([2, 3]); console.log([...set1].filter(x => set2.has(x)));",
                "const set1 = new Set([3, 4]); const set2 = new Set([4, 5]); console.log([...set1].filter(x => set2.has(x)));"
            ]
        },
        {
            "tag": "CODE_RECURSIVITY_js",
            "patterns": [
                "How to use recursion in JavaScript",
                "Example of a recursive function in JavaScript"
            ],
            "responses": [
                "const factorial = n => (n === 0 ? 1 : n * factorial(n - 1)); console.log(factorial(5));",
                "const sum = n => (n === 0 ? 0 : n + sum(n - 1)); console.log(sum(10));"
            ]
        },
        {
            "tag": "CODE_MERGE_DICTIONARY",
            "patterns": [
                "How to combine dictionaries",
                "Merge example of dictionaries in Python"
            ],
            "responses": [
                "dict1, dict2 = {'a': 1}, {'b': 2}; print({**dict1, **dict2})",
                "dict1, dict2 = {'x': 10}, {'y': 20}; dict1.update(dict2); print(dict1)"
            ]
        },
        {
            "tag": "CODE_ITER_PERSONALIZED",
            "patterns": [
                "How to create a personalized iterator",
                "Example of iterators in Python"
            ],
            "responses": [
                "class Iterador: def __init__(self, max): self.max = max; self.n = 0; def __iter__(self): return self; def __next__(self): if self.n < self.max: val = self.n; self.n += 1; return val; else: raise StopIteration(); for i in Iterador(3): print(i)",
                "class Contador: def __init__(self): self.valor = 0; def __iter__(self): return self; def __next__(self): self.valor += 1; if self.valor > 5: raise StopIteration(); return self.valor; for num in Contador(): print(num)"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION",
            "patterns": [
                "How to use dictionaries by understanding",
                "Example of dict comprehension"
            ],
            "responses": [
                "numeros = [1, 2, 3]; print({x: x**2 for x in numeros})",
                "pares = [2, 4, 6]; print({x: x//2 for x in pares})"
            ]
        },
        {
            "tag": "CODE_Palabras_Palindromas",
            "patterns": [
                "How to verify if a word is a palindromo",
                "example of palindromes in python"
            ],
            "responses": [
                "Def es_Palindrome (word): return word == Word [::-1];print (es_palindromo ('radar'))",
                "Text = 'aniline';print (text == Text [::-1])"
            ]
        },
        {
            "tag": "code_hash_archivo",
            "patterns": [
                "How to calculate a file hash",
                "Hashlib example"
            ],
            "responses": [
                "import hashlib; with open('archivo.txt', 'rb') as f: print(hashlib.md5(f.read()).hexdigest())",
                "import hashlib; data = b'datos'; print(hashlib.sha256(data).hexdigest())"
            ]
        },
        {
            "tag": "CODE_GUARDAR_DATOS_PICKLE",
            "patterns": [
                "How to save data with pickle",
                "SERIALIZATION EXAMPLE WITH PICKLE"
            ],
            "responses": [
                "import pickle; data = {'clave': 'valor'}; with open('data.pkl', 'wb') as f: pickle.dump(data, f)",
                "import pickle; datos = [1, 2, 3]; with open('datos.pkl', 'wb') as f: pickle.dump(datos, f)"
            ]
        },
        {
            "tag": "CODE_DECORATOR_SIMPLE",
            "patterns": [
                "How to use a simple decorator",
                "Example of Decorator in Python"
            ],
            "responses": [
                "Def Decorator (Func): Def Wrapper (): print ('start');function ();print ('end');return wrapper;@Decoradora Def greeting (): print ('Hello');greet()",
                "Def Debug(func): def wrapper(*args): print(f'args: {ARGS}');Return Func(*ARGS);return wrapper;@Debug def Sumaur(a, B): return a + B;SUMOR(2, 3)"
            ]
        },
        {
            "tag": "CODE_BASES_CLASE",
            "patterns": [
                "How to define classes in classes",
                "Multiple inheritance example"
            ],
            "responses": [
                "class Base1: pass; class Base2: pass; class Hija(Base1, Base2): pass; print(Hija.mro())",
                "Class Father: Pass;Class Mother: Pass;Class son (father, mother): Pass;print (son .__ bases__)"
            ]
        },
        {
            "tag": "CODE_METACLASS",
            "patterns": [
                "How to use metaclases",
                "Metaclasses example in Python"
            ],
            "responses": [
                "Meta Class (Type): Def __New __ (Cls, Name, Bases, DCT): DCT ['Nuevo_atributo'] = 'value';Return Super () .__ New __ (Cls, Name, Bases, DCT);class example (metaclass = finish): pass;print (example.nuevo_atributo)",
                "class Meta(type): def __call__(cls, *args, **kwargs): print('Clase creada'); return super().__call__(*args, **kwargs); class Ejemplo(metaclass=Meta): pass; obj = Ejemplo()"
            ]
        },
        {
            "tag": "CODE_SUMA_MATRICES",
            "patterns": [
                "How to add matrices",
                "Sum of matrices example in Python"
            ],
            "responses": [
                "import numpy as np; m1 = np.array([[1, 2], [3, 4]]); m2 = np.array([[5, 6], [7, 8]]); print(m1 + m2)",
                "m1, m2 = [[1, 2], [3, 4]], [[5, 6], [7, 8]]; print([[m1[i][j] + m2[i][j] for j in range(len(m1[0]))] for i in range(len(m1))])"
            ]
        },
        {
            "tag": "CODE_MERGE_DICTIONARY_js",
            "patterns": [
                "How to combine dictionaries in JavaScript",
                "Merge example of dictionaries in JavaScript"
            ],
            "responses": [
                "const dict1 = {a: 1}, dict2 = {b: 2}; console.log({...dict1, ...dict2})",
                "const dict1 = {x: 10}, dict2 = {y: 20}; Object.assign(dict1, dict2); console.log(dict1)"
            ]
        },
        {
            "tag": "CODE_ITER_PERSONALIZED_js",
            "patterns": [
                "How to create a personalized iterator in JavaScript",
                "Example of iterators in JavaScript"
            ],
            "responses": [
                "class Iterator { constructor(max) { this.max = max; this.n = 0; } [Symbol.iterator]() { return this; } next() { if (this.n < this.max) { return { value: this.n++, done: false }; } else { return { done: true }; } } } const iterator = new Iterator(3); for (let i of iterator) { console.log(i); }",
                "class Counter { constructor() { this.value = 0; } [Symbol.iterator]() { return this; } next() { this.value += 1; if (this.value > 5) { return { done: true }; } return { value: this.value, done: false }; } } const counter = new Counter(); for (let num of counter) { console.log(num); }"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION_js",
            "patterns": [
                "How to use dictionaries by understanding in JavaScript",
                "Example of dict comprehension in JavaScript"
            ],
            "responses": [
                "const numbers = [1, 2, 3]; console.log(numbers.reduce((acc, x) => ({ ...acc, [x]: x ** 2 }), {}));",
                "const evens = [2, 4, 6]; console.log(evens.reduce((acc, x) => ({ ...acc, [x]: x / 2 }), {}));"
            ]
        },
        {
            "tag": "CODE_PALABRAS_PALINDROMAS_js",
            "patterns": [
                "How to verify if a word is a palindrome in JavaScript",
                "Example of palindromes in JavaScript"
            ],
            "responses": [
                "const isPalindrome = word => word === word.split('').reverse().join(''); console.log(isPalindrome('radar'));",
                "const text = 'aniline'; console.log(text === text.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "CODE_HASH_ARCHIVO_js",
            "patterns": [
                "How to calculate a file hash in JavaScript",
                "Hashlib example in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); const crypto = require('crypto'); const hash = crypto.createHash('md5'); hash.update(fs.readFileSync('archivo.txt')); console.log(hash.digest('hex'));",
                "const crypto = require('crypto'); const data = Buffer.from('datos'); const hash = crypto.createHash('sha256'); hash.update(data); console.log(hash.digest('hex'));"
            ]
        },
        {
            "tag": "CODE_GUARDAR_DATOS_PICKLE_js",
            "patterns": [
                "How to save data with pickle in JavaScript",
                "Serialization example with pickle in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); const pickle = require('picklejs'); const data = { clave: 'valor' }; fs.writeFileSync('data.pkl', pickle.dumps(data));",
                "const fs = require('fs'); const pickle = require('picklejs'); const datos = [1, 2, 3]; fs.writeFileSync('datos.pkl', pickle.dumps(datos));"
            ]
        },
        {
            "tag": "CODE_DECORATOR_SIMPLE_js",
            "patterns": [
                "How to use a simple decorator in JavaScript",
                "Example of Decorator in JavaScript"
            ],
            "responses": [
                "const decorator = func => { return (...args) => { console.log('start'); func(...args); console.log('end'); } }; const greeting = decorator(() => console.log('Hello')); greeting();",
                "const debug = func => { return (...args) => { console.log(`args: ${args}`); return func(...args); } }; const sum = debug((a, b) => a + b); console.log(sum(2, 3));"
            ]
        },
        {
            "tag": "CODE_BASES_CLASE_js",
            "patterns": [
                "How to define classes in classes in JavaScript",
                "Multiple inheritance example in JavaScript"
            ],
            "responses": [
                "class Base1 {} class Base2 {} class Child extends Base1 {} class AnotherChild extends Base2 {}",
                "class Father {} class Mother {} class Son extends Father {} class Daughter extends Mother {}"
            ]
        },
        {
            "tag": "CODE_METACLASS_js",
            "patterns": [
                "How to use metaclasses in JavaScript",
                "Metaclasses example in JavaScript"
            ],
            "responses": [
                "class Meta { constructor(name) { this.name = name; } static createClass() { return class { constructor() { this.name = 'NewClass'; } } } } const Example = Meta.createClass(); const obj = new Example(); console.log(obj.name);",
                "class Meta { static createClass() { return class { constructor() { console.log('Class created'); } } } } const Example = Meta.createClass(); const obj = new Example();"
            ]
        },
        {
            "tag": "CODE_SUMA_MATRICES_js",
            "patterns": [
                "How to add matrices in JavaScript",
                "Sum of matrices example in JavaScript"
            ],
            "responses": [
                "const m1 = [[1, 2], [3, 4]]; const m2 = [[5, 6], [7, 8]]; const result = m1.map((row, i) => row.map((val, j) => val + m2[i][j])); console.log(result);",
                "const m1 = [[1, 2], [3, 4]]; const m2 = [[5, 6], [7, 8]]; const result = m1.map((row, i) => row.map((val, j) => val + m2[i][j])); console.log(result);"
            ]
        },
        {
            "tag": "CODE_REGEX_EXTRERER_Numeros",
            "patterns": [
                "How to extract numbers with regex",
                "REGEX example for numbers"
            ],
            "responses": [
                "Import Re;text = 'The date is 2025';print (re.findall (r '\\ d+', text))",
                "import re; data = 'A1 B2 C3'; print(re.findall(r'\\d', data))"
            ]
        },
        {
            "tag": "CODE_MATILOTLIB",
            "patterns": [
                "How to make animations",
                "Animation example with Matpletlib"
            ],
            "responses": [
                "Import Matpletlib.animation as anim;# Insert animation logic here",
                "Import Matpletlib.pyploot as PLT;# Generate animation using functionimation"
            ]
        },
        {
            "tag": "CODE_SECTION_FIBONACCI",
            "patterns": [
                "How to generate Fibonacci",
                "Fibonacci sequence example"
            ],
            "responses": [
                "def fib(n): return 1 if n in (1, 2) else fib(n - 1) + fib(n - 2); print(fib(5))",
                "nums = [0, 1]; [nums.append(nums[-2] + nums[-1]) for _ in range(8)]; print(nums)"
            ]
        },
        {
            "tag": "codigo_simple_socket",
            "patterns": [
                "How to create a socket",
                "Simple Socket example in Python"
            ],
            "responses": [
                "import socket; s = socket.socket(); s.bind(('localhost', 8080)); s.listen(1); conn, addr = s.accept(); print('Conexión desde', addr)",
                "import socket; c = socket.socket(); c.connect(('localhost', 8080)); print('Conexión establecida')"
            ]
        },
        {
            "tag": "CODE_ARGUMENTS_VARDS",
            "patterns": [
                "How to use *args and ** kwargs",
                "Example of variable arguments"
            ],
            "responses": [
                "def demo(*args, **kwargs): print(args, kwargs); demo(1, 2, x=3, y=4)",
                "def multiplicar(*nums): prod = 1; for n in nums: prod *= n; return prod; print(multiplicar(2, 3, 4))"
            ]
        },
        {
            "tag": "CODE_ORDENAR_UPLAS",
            "patterns": [
                "How to order a tuplage list",
                "Example with Sorted and Tuplas"
            ],
            "responses": [
                "datos = [(1, 'A'), (2, 'B')]; print(sorted(datos, key=lambda x: x[1]))",
                "pares = [(1, 2), (3, 4)]; print(sorted(pares, key=lambda x: -x[0]))"
            ]
        },
        {
            "tag": "code_multiprocessing",
            "patterns": [
                "How to use multiprocessing",
                "Example with multiprocessing"
            ],
            "responses": [
                "from multiprocessing import Process; def tarea(): print('Proceso ejecutado'); p = Process(target=tarea); p.start(); p.join()",
                "from multiprocessing import Pool; def cuadrado(n): return n**2; with Pool(2) as pool: print(pool.map(cuadrado, [1, 2, 3]))"
            ]
        },
        {
            "tag": "CODE_ITER_COMBINATIONS",
            "patterns": [
                "How to generate combinations",
                "Example with itcherools"
            ],
            "responses": [
                "from itertools import combinations; print(list(combinations([1, 2, 3], 2)))",
                "from itertools import permutations; print(list(permutations('abc', 2)))"
            ]
        },
        {
            "tag": "CODE_REGEX_EXTRERER_Numeros_js",
            "patterns": [
                "How to extract numbers with regex in JavaScript",
                "Regex example for numbers in JavaScript"
            ],
            "responses": [
                "const text = 'The date is 2025'; console.log(text.match(/\\d+/g))",
                "const data = 'A1 B2 C3'; console.log(data.match(/\\d/g))"
            ]
        },
        {
            "tag": "CODE_MATILOTLIB_js",
            "patterns": [
                "How to make animations in JavaScript",
                "Animation example with Matplotlib in JavaScript"
            ],
            "responses": [
                "const animate = () => { /* Insert animation logic here */ };",
                "import matplotlib.pyplot as plt; // Generate animation using FuncAnimation"
            ]
        },
        {
            "tag": "CODE_SECTION_FIBONACCI_js",
            "patterns": [
                "How to generate Fibonacci in JavaScript",
                "Fibonacci sequence example in JavaScript"
            ],
            "responses": [
                "const fib = (n) => (n === 1 || n === 2) ? 1 : fib(n - 1) + fib(n - 2); console.log(fib(5));",
                "let nums = [0, 1]; while (nums.length < 10) { nums.push(nums[nums.length - 2] + nums[nums.length - 1]); } console.log(nums);"
            ]
        },
        {
            "tag": "codigo_simple_socket_js",
            "patterns": [
                "How to create a socket in JavaScript",
                "Simple Socket example in JavaScript"
            ],
            "responses": [
                "const net = require('net'); const server = net.createServer((socket) => { socket.write('Hello'); socket.end(); }); server.listen(8080, 'localhost');",
                "const net = require('net'); const client = net.createConnection({ port: 8080, host: 'localhost' }, () => { console.log('connected to server'); });"
            ]
        },
        {
            "tag": "CODE_ARGUMENTS_VARDS_js",
            "patterns": [
                "How to use *args and **kwargs in JavaScript",
                "Example of variable arguments in JavaScript"
            ],
            "responses": [
                "function demo(...args) { console.log(args); } demo(1, 2, 3, 4);",
                "function multiply(...nums) { return nums.reduce((prod, num) => prod * num, 1); } console.log(multiply(2, 3, 4));"
            ]
        },
        {
            "tag": "CODE_ORDENAR_UPLAS_js",
            "patterns": [
                "How to order a tuple list in JavaScript",
                "Example with Sorted and Tuples in JavaScript"
            ],
            "responses": [
                "const data = [[1, 'A'], [2, 'B']]; console.log(data.sort((a, b) => a[1].localeCompare(b[1])))",
                "const pairs = [[1, 2], [3, 4]]; console.log(pairs.sort((a, b) => b[0] - a[0]))"
            ]
        },
        {
            "tag": "code_multiprocessing_js",
            "patterns": [
                "How to use multiprocessing in JavaScript",
                "Example with multiprocessing in JavaScript"
            ],
            "responses": [
                "const { fork } = require('child_process'); const task = () => console.log('Process executed'); const worker = fork(task); worker.on('exit', () => { worker.kill() });",
                "const { Pool } = require('worker_threads'); const pool = new Pool(2); pool.execute((n) => n ** 2, [1, 2, 3], (err, results) => { console.log(results) });"
            ]
        },
        {
            "tag": "CODE_ITER_COMBINATIONS_js",
            "patterns": [
                "How to generate combinations in JavaScript",
                "Example with itertools in JavaScript"
            ],
            "responses": [
                "function combinations(arr, size) { return arr.map((_, i) => arr.slice(i, i + size)) }; console.log(combinations([1, 2, 3], 2));",
                "const permutations = (str) => { return str.split('').reduce((acc, _, i) => { const temp = str.split(''); temp[i] = ''; return acc.concat(temp) }, []) }; console.log(permutations('abc'));"
            ]
        },
        {
            "tag": "CODE_REPLACE_TEXT",
            "patterns": [
                "How to replace text",
                "Replacement example with regex"
            ],
            "responses": [
                "Import Re;text = 'Hello world';print (re.sub ('world', 'python', text))",
                "Import Re;phrase = 'python is easy';print (re.sub (r'fácil ',' great ', phrase))"
            ]
        },
        {
            "tag": "CODE_CONVERSION_Tipo",
            "patterns": [
                "How to convert types",
                "Python casting example"
            ],
            "responses": [
                "whether = '12 ';Print (Int (NUM))",
                "flt = '3.14'; print(float(flt))"
            ]
        },
        {
            "tag": "code_text_html",
            "patterns": [
                "How to generate HTML text",
                "Basic HTML example in Python"
            ],
            "responses": [
                "html = f'<p>{\"Hola\"}</p>'; print(html)",
                "text = 'Python'; print(f'<h1>{text}</h1>')"
            ]
        },
        {
            "tag": "CODE_FILTRADO_UPLAS",
            "patterns": [
                "How to filter tuples",
                "Example with tuple lists"
            ],
            "responses": [
                "data = [(1, 2), (3, 4)]; print([t for t in data if sum(t) > 5])",
                "pares = [(2, 2), (1, 1)]; print([p for p in pares if p[0] == p[1]])"
            ]
        },
        {
            "tag": "CODE_CONFIGURE_LOGGING",
            "patterns": [
                "How to configure logging",
                "Example with logging in python"
            ],
            "responses": [
                "import logging; logging.basicConfig(level=logging.INFO); logging.info('Mensaje de info')",
                "import logging; logging.basicConfig(filename='app.log', level=logging.DEBUG); logging.debug('Debugging...')"
            ]
        },
        {
            "tag": "CODE_FACTORIAL_BUCLE",
            "patterns": [
                "How to calculate factorial with loops",
                "Example of iterative factorial"
            ],
            "responses": [
                "def factorial(n): result = 1; for i in range(1, n + 1): result *= i; return result; print(factorial(5))",
                "n = 4; fact = 1; for i in range(1, n+1): fact *= i; print(fact)"
            ]
        },
        {
            "tag": "CODE_SUMAR_LISTA",
            "patterns": [
                "How to add elements of a list",
                "Sum example of a list in Python"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print(sum(nums))",
                "numbers = [10, 20, 30];suma = am (numbers);Print (Suma)"
            ]
        },
        {
            "tag": "CODE_DIVIDE_CADENAS",
            "patterns": [
                "How to divide a chain",
                "Split example in Python"
            ],
            "responses": [
                "text = 'python is amazing';print (text.split ())",
                "chain = 'one, two, three';print (chain.split (','))"
            ]
        },
        {
            "tag": "code_unir_cadenas",
            "patterns": [
                "How to join chains",
                "Join's example in Python"
            ],
            "responses": [
                "Words = ['hello', 'world'];print ('' .Join (words))",
                "frases = ['A', 'B', 'C']; print('-'.join(frases))"
            ]
        },
        {
            "tag": "CODE_FILTRO_LISTA",
            "patterns": [
                "How to filter a list",
                "Example of filtering with lists"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print([x for x in nums if x % 2 == 0])",
                "datos = [10, 15, 20]; print([x for x in datos if x > 15])"
            ]
        },
        {
            "tag": "CODE_LEER_ARCHIVO",
            "patterns": [
                "How to read a file",
                "Example of reading files in python"
            ],
            "responses": [
                "with open('archivo.txt', 'r') as f: print(f.read())",
                "file = open ('data.txt', 'r');content = file.read ();Archive.close ();print (content)"
            ]
        },
        {
            "tag": "CODE_REPLACE_TEXT_js",
            "patterns": [
                "How to replace text in JavaScript",
                "Replacement example with regex in JavaScript"
            ],
            "responses": [
                "const text = 'Hello world'; console.log(text.replace('world', 'python'));",
                "const phrase = 'python is easy'; console.log(phrase.replace(/fácil/g, 'great'));"
            ]
        },
        {
            "tag": "CODE_CONVERSION_Tipo_js",
            "patterns": [
                "How to convert types in JavaScript",
                "JavaScript casting example"
            ],
            "responses": [
                "const num = '12'; console.log(Number(num));",
                "const flt = '3.14'; console.log(parseFloat(flt));"
            ]
        },
        {
            "tag": "code_text_html_js",
            "patterns": [
                "How to generate HTML text in JavaScript",
                "Basic HTML example in JavaScript"
            ],
            "responses": [
                "const html = `<p>${'Hola'}</p>`; console.log(html);",
                "const text = 'Python'; console.log(`<h1>${text}</h1>`);"
            ]
        },
        {
            "tag": "CODE_FILTRADO_UPLAS_js",
            "patterns": [
                "How to filter tuples in JavaScript",
                "Example with tuple lists in JavaScript"
            ],
            "responses": [
                "const data = [[1, 2], [3, 4]]; console.log(data.filter(t => t.reduce((a, b) => a + b) > 5));",
                "const pairs = [[2, 2], [1, 1]]; console.log(pairs.filter(p => p[0] === p[1]));"
            ]
        },
        {
            "tag": "CODE_CONFIGURE_LOGGING_js",
            "patterns": [
                "How to configure logging in JavaScript",
                "Example with logging in JavaScript"
            ],
            "responses": [
                "console.log('Mensaje de info');",
                "console.debug('Debugging...');"
            ]
        },
        {
            "tag": "CODE_FACTORIAL_BUCLE_js",
            "patterns": [
                "How to calculate factorial with loops in JavaScript",
                "Example of iterative factorial in JavaScript"
            ],
            "responses": [
                "function factorial(n) { let result = 1; for (let i = 1; i <= n; i++) result *= i; return result; } console.log(factorial(5));",
                "let n = 4; let fact = 1; for (let i = 1; i <= n; i++) { fact *= i; } console.log(fact);"
            ]
        },
        {
            "tag": "CODE_SUMAR_LISTA_js",
            "patterns": [
                "How to sum elements of a list in JavaScript",
                "Sum example of a list in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3, 4]; console.log(nums.reduce((a, b) => a + b, 0));",
                "const numbers = [10, 20, 30]; const sum = numbers.reduce((a, b) => a + b, 0); console.log(sum);"
            ]
        },
        {
            "tag": "CODE_DIVIDE_CADENAS_js",
            "patterns": [
                "How to divide a string in JavaScript",
                "Split example in JavaScript"
            ],
            "responses": [
                "const text = 'python is amazing'; console.log(text.split(' '));",
                "const chain = 'one, two, three'; console.log(chain.split(','));"
            ]
        },
        {
            "tag": "code_unir_cadenas_js",
            "patterns": [
                "How to join strings in JavaScript",
                "Join example in JavaScript"
            ],
            "responses": [
                "const words = ['hello', 'world']; console.log(words.join(' '));",
                "const phrases = ['A', 'B', 'C']; console.log(phrases.join('-'));"
            ]
        },
        {
            "tag": "CODE_FILTRO_LISTA_js",
            "patterns": [
                "How to filter a list in JavaScript",
                "Example of filtering with lists in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3, 4]; console.log(nums.filter(x => x % 2 === 0));",
                "const datos = [10, 15, 20]; console.log(datos.filter(x => x > 15));"
            ]
        },
        {
            "tag": "CODE_LEER_ARCHIVO_js",
            "patterns": [
                "How to read a file in JavaScript",
                "Example of reading files in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.readFile('archivo.txt', 'utf8', (err, data) => { console.log(data); });",
                "const file = require('fs'); file.readFile('data.txt', 'utf8', (err, content) => { console.log(content); });"
            ]
        },
        {
            "tag": "CODE_Wrust_Archivo",
            "patterns": [
                "How to write a file",
                "Example of writing files in python"
            ],
            "responses": [
                "with open('archivo.txt', 'w') as f: f.write('Hola Mundo')",
                "File = Open ('Data.txt', 'W');archive.write ('new data');Archive.close ()"
            ]
        },
        {
            "tag": "code_inverter_lista",
            "patterns": [
                "How to invest a list",
                "example of investing a list in Python"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums[::-1])",
                "List = ['A', 'B', 'C'];List.rese ();print (list)"
            ]
        },
        {
            "tag": "code_multilistas_zip",
            "patterns": [
                "How to use Zip with lists",
                "Zip example in Python"
            ],
            "responses": [
                "a = [1, 2]; b = [3, 4]; print(list(zip(a, b)))",
                "names = ['a', 'b'];Ages = [20, 25];print (dict (zip (names, ages)))"
            ]
        },
        {
            "tag": "CODE_BORRER_ELEMENTO_LISTA",
            "patterns": [
                "How to delete an element of a list",
                "Example of deleting element in lists"
            ],
            "responses": [
                "nums = [1, 2, 3]; nums.remove(2); print(nums)",
                "data = [10, 20, 30];of data [1];print (data)"
            ]
        },
        {
            "tag": "CODE_Verification_Archivo",
            "patterns": [
                "How to verify if there is a file",
                "Example of OS.Path in Python"
            ],
            "responses": [
                "import os; print(os.path.exists('archivo.txt'))",
                "from pathlib import Path; print(Path('datos.txt').exists())"
            ]
        },
        {
            "tag": "CODE_ORDENAR_LISTA",
            "patterns": [
                "How to order a list",
                "Sort in Python"
            ],
            "responses": [
                "nums = [3, 1, 2]; nums.sort(); print(nums)",
                "dates = ['b', 'a', 'c'];print (luck (dates))"
            ]
        },
        {
            "tag": "CODE_Generator_simple",
            "patterns": [
                "How to create a generator",
                "example of a python generator"
            ],
            "responses": [
                "def gen(): yield 1; yield 2; for x in gen(): print(x)",
                "def numeros(): for i in range(3): yield i; print(list(numeros()))"
            ]
        },
        {
            "tag": "CODE_UUSE_NUMERATE",
            "patterns": [
                "How to use List",
                "List in Python"
            ],
            "responses": [
                "nums = [10, 20, 30]; for i, n in enumerate(nums): print(i, n)",
                "letras = ['a', 'b']; print(list(enumerate(letras)))"
            ]
        },
        {
            "tag": "CODE_Wrust_Archivo_js",
            "patterns": [
                "How to write a file in JavaScript",
                "Example of writing files in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); fs.writeFileSync('archivo.txt', 'Hola Mundo');",
                "const file = require('fs'); file.writeFileSync('data.txt', 'new data');"
            ]
        },
        {
            "tag": "code_inverter_lista_js",
            "patterns": [
                "How to invert a list in JavaScript",
                "Example of inverting a list in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.reverse());",
                "let list = ['A', 'B', 'C']; list.reverse(); console.log(list);"
            ]
        },
        {
            "tag": "code_multilistas_zip_js",
            "patterns": [
                "How to use Zip with lists in JavaScript",
                "Zip example in JavaScript"
            ],
            "responses": [
                "const a = [1, 2]; const b = [3, 4]; console.log(a.map((x, i) => [x, b[i]]));",
                "const names = ['a', 'b']; const ages = [20, 25]; console.log(Object.fromEntries(names.map((v, i) => [v, ages[i]])));"
            ]
        },
        {
            "tag": "CODE_BORRER_ELEMENTO_LISTA_js",
            "patterns": [
                "How to delete an element of a list in JavaScript",
                "Example of deleting element in lists in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; nums.splice(nums.indexOf(2), 1); console.log(nums);",
                "const data = [10, 20, 30]; data.splice(1, 1); console.log(data);"
            ]
        },
        {
            "tag": "CODE_Verification_Archivo_js",
            "patterns": [
                "How to verify if there is a file in JavaScript",
                "Example of checking file existence in JavaScript"
            ],
            "responses": [
                "const fs = require('fs'); console.log(fs.existsSync('archivo.txt'));",
                "const path = require('path'); console.log(path.existsSync('datos.txt'));"
            ]
        },
        {
            "tag": "CODE_ORDENAR_LISTA_js",
            "patterns": [
                "How to order a list in JavaScript",
                "Sort example in JavaScript"
            ],
            "responses": [
                "const nums = [3, 1, 2]; nums.sort(); console.log(nums);",
                "const dates = ['b', 'a', 'c']; dates.sort(); console.log(dates);"
            ]
        },
        {
            "tag": "CODE_Generator_simple_js",
            "patterns": [
                "How to create a generator in JavaScript",
                "Example of a generator in JavaScript"
            ],
            "responses": [
                "function* gen() { yield 1; yield 2; } for (let x of gen()) { console.log(x); }",
                "function* numbers() { for (let i = 0; i < 3; i++) yield i; } console.log([...numbers()]);"
            ]
        },
        {
            "tag": "CODE_UUSE_NUMERATE_js",
            "patterns": [
                "How to use List in JavaScript",
                "Example of List in JavaScript"
            ],
            "responses": [
                "const nums = [10, 20, 30]; nums.forEach((n, i) => console.log(i, n));",
                "const letras = ['a', 'b']; console.log(letras.map((v, i) => [i, v]));"
            ]
        },
        {
            "tag": "CODE_FUNCION_LAMDDA",
            "patterns": [
                "How to use Lambda functions",
                "Lambda example in Python"
            ],
            "responses": [
                "square = lambda x: x ** 2;print (square (3))",
                "sum = smuggled x, x + y y;Print(sum(1, 2)"
            ]
        },
        {
            "tag": "codigo_dict_con_default",
            "patterns": [
                "How to use DefultDict",
                "DefultDict example in Python"
            ],
            "responses": [
                "from collections import defaultdict; d = defaultdict(int); d['a'] += 1; print(d)",
                "from collections import defaultdict; d = defaultdict(list); d['a'].append(1); print(d)"
            ]
        },
        {
            "tag": "CODE_JSON_BASICO",
            "patterns": [
                "How to handle Json",
                "Json example in Python"
            ],
            "responses": [
                "import json; data = {'a': 1}; print(json.dumps(data))",
                "import json; text = '{\"a\": 1}'; print(json.loads(text))"
            ]
        },
        {
            "tag": "code_fecto_actual",
            "patterns": [
                "How to get the current date",
                "Example with Datetime in Python"
            ],
            "responses": [
                "from datetime import datetime; print(datetime.now())",
                "from datetime import date; print(date.today())"
            ]
        },
        {
            "tag": "CODE_NECTIONAL_NOWERED",
            "patterns": [
                "How to invest a dictionary",
                "Example of inverted dictionary"
            ],
            "responses": [
                "d = {'a': 1, 'b': 2}; print({v: k for k, v in d.items()})",
                "datos = {1: 'A', 2: 'B'}; print(dict(map(reversed, datos.items())))"
            ]
        },
        {
            "tag": "codigo_uso_try_except",
            "patterns": [
                "How to handle errors",
                "Example example in Python"
            ],
            "responses": [
                "try: x = 1/0;Excet Zerodivisionerror: print ('Division error')",
                "try: print(int('abc')); except ValueError: print('Valor inválido')"
            ]
        },
        {
            "tag": "CODE_ABRIR_URL",
            "patterns": [
                "How to open a URL",
                "Example of URLLIB in Python"
            ],
            "responses": [
                "import urllib.request; with urllib.request.urlopen('http://example.com') as response: print(response.read())",
                "import requests; r = requests.get('http://example.com'); print(r.text)"
            ]
        },
        {
            "tag": "CODE_UUSO_HEAPQ",
            "patterns": [
                "How to use Heapq",
                "Example of priority tails"
            ],
            "responses": [
                "import heapq; nums = [3, 1, 2]; heapq.heapify(nums); print(heapq.heappop(nums))",
                "import heapq; datos = [5, 7, 3]; print(heapq.nlargest(2, datos))"
            ]
        },
        {
            "tag": "Code_verify_inance",
            "patterns": [
                "How to verify the type of a variable",
                "Example with Isinstance"
            ],
            "responses": [
                "x = 10; print(isinstance(x, int))",
                "data = 'Hola'; print(isinstance(data, str))"
            ]
        },
        {
            "tag": "CODE_ITERACION_DICTIONARY",
            "patterns": [
                "How to iterate on a dictionary",
                "Example of iteration with dictionaries"
            ],
            "responses": [
                "d = {'a': 1, 'b': 2}; for k, v in d.items(): print(k, v)",
                "data = {1: 'one', 2: 'dos'};print (list (data.items ()))"
            ]
        },
        {
            "tag": "CODE_FUNCION_RECURSIVO",
            "patterns": [
                "How to define a recursive function",
                "Example of recursion in Python"
            ],
            "responses": [
                "def factorial(n): return 1 if n == 0 else n * factorial(n - 1); print(factorial(5))",
                "Soma guest (N): Retren N F n == 0 S + Soma (N -1);Brent (Soma (P))"
            ]
        },
        {
            "tag": "CODE_FUNCION_LAMDDA_js",
            "patterns": [
                "How to use Lambda functions in JavaScript",
                "Lambda example in JavaScript"
            ],
            "responses": [
                "const square = (x) => x ** 2; console.log(square(3));",
                "const sum = (x, y) => x + y; console.log(sum(1, 2));"
            ]
        },
        {
            "tag": "codigo_dict_con_default_js",
            "patterns": [
                "How to use DefaultDict in JavaScript",
                "DefaultDict example in JavaScript"
            ],
            "responses": [
                "const d = {}; d['a'] = (d['a'] || 0) + 1; console.log(d);",
                "const d = {}; if (!d['a']) d['a'] = []; d['a'].push(1); console.log(d);"
            ]
        },
        {
            "tag": "CODE_JSON_BASICO_js",
            "patterns": [
                "How to handle JSON in JavaScript",
                "JSON example in JavaScript"
            ],
            "responses": [
                "const data = {a: 1}; console.log(JSON.stringify(data));",
                "const text = '{\"a\": 1}'; console.log(JSON.parse(text));"
            ]
        },
        {
            "tag": "code_fecto_actual_js",
            "patterns": [
                "How to get the current date in JavaScript",
                "Example with DateTime in JavaScript"
            ],
            "responses": [
                "const now = new Date(); console.log(now);",
                "const today = new Date().toISOString().split('T')[0]; console.log(today);"
            ]
        },
        {
            "tag": "CODE_NECTIONAL_NOWERED_js",
            "patterns": [
                "How to invert a dictionary in JavaScript",
                "Example of inverted dictionary in JavaScript"
            ],
            "responses": [
                "const d = {a: 1, b: 2}; const inverted = Object.fromEntries(Object.entries(d).map(([key, value]) => [value, key])); console.log(inverted);",
                "const datos = {1: 'A', 2: 'B'}; const inverted = Object.fromEntries(Object.entries(datos).reverse()); console.log(inverted);"
            ]
        },
        {
            "tag": "codigo_uso_try_except_js",
            "patterns": [
                "How to handle errors in JavaScript",
                "Example of error handling in JavaScript"
            ],
            "responses": [
                "try { const x = 1 / 0; } catch (error) { console.log('Division by zero error'); }",
                "try { const x = parseInt('abc'); } catch (error) { console.log('Invalid value'); }"
            ]
        },
        {
            "tag": "CODE_ABRIR_URL_js",
            "patterns": [
                "How to open a URL in JavaScript",
                "Example of URL handling in JavaScript"
            ],
            "responses": [
                "fetch('http://example.com').then(response => response.text()).then(console.log);",
                "const response = await fetch('http://example.com'); const text = await response.text(); console.log(text);"
            ]
        },
        {
            "tag": "CODE_UUSO_HEAPQ_js",
            "patterns": [
                "How to use Heapq in JavaScript",
                "Priority queue example in JavaScript"
            ],
            "responses": [
                "const heap = [3, 1, 2]; heap.sort((a, b) => a - b); console.log(heap[0]);",
                "const data = [5, 7, 3]; console.log(Math.max(...data));"
            ]
        },
        {
            "tag": "Code_verify_inance_js",
            "patterns": [
                "How to verify the type of a variable in JavaScript",
                "Example with isinstance in JavaScript"
            ],
            "responses": [
                "const x = 10; console.log(typeof x === 'number');",
                "const data = 'Hola'; console.log(typeof data === 'string');"
            ]
        },
        {
            "tag": "CODE_ITERACION_DICTIONARY_js",
            "patterns": [
                "How to iterate over a dictionary in JavaScript",
                "Example of iteration over a dictionary in JavaScript"
            ],
            "responses": [
                "const d = {a: 1, b: 2}; for (const [k, v] of Object.entries(d)) { console.log(k, v); }",
                "const data = {1: 'one', 2: 'dos'}; console.log(Object.entries(data));"
            ]
        },
        {
            "tag": "CODE_FUNCION_RECURSIVO_js",
            "patterns": [
                "How to define a recursive function in JavaScript",
                "Example of recursion in JavaScript"
            ],
            "responses": [
                "function factorial(n) { return n === 0 ? 1 : n * factorial(n - 1); } console.log(factorial(5));",
                "function sum(n) { return n === 0 ? 0 : n + sum(n - 1); } console.log(sum(10));"
            ]
        },
        {
            "tag": "CODE_CRONOMETER",
            "patterns": [
                "How to measure execution time",
                "Example with Time in Python"
            ],
            "responses": [
                "import time; start = time.time(); print('Hola'); print(time.time() - start)",
                "from time import perf_counter; t1 = perf_counter(); print('Hola'); print(perf_counter() - t1)"
            ]
        },
        {
            "tag": "CODE_GENERAR_RANGO",
            "patterns": [
                "How to generate a range of numbers",
                "Range example in Python"
            ],
            "responses": [
                "print(list(range(5)))",
                "print(list(range(1, 10, 2)))"
            ]
        },
        {
            "tag": "CODE_DICTIONARY_VALORS_MAX",
            "patterns": [
                "How to obtain the maximum value of a dictionary",
                "Example with Max in dictionaries"
            ],
            "responses": [
                "d = {'a': 3, 'b': 5}; print(max(d.values()))",
                "data = {'x': 10, 'y': 15}; print(max(data, key=data.get))"
            ]
        },
        {
            "tag": "CODE_ENCONTRAR_INDICE",
            "patterns": [
                "How to find the index of an element on a list",
                "Index example in lists"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums.index(2))",
                "Letters = ['A', 'B', 'C'];print (letters.index ('c'))"
            ]
        },
        {
            "tag": "CODE_SUMA_ACUMULADA",
            "patterns": [
                "How to calculate an accumulated sum",
                "Example with itcherools.accumulate"
            ],
            "responses": [
                "from itertools import accumulate; nums = [1, 2, 3]; print(list(accumulate(nums)))",
                "import itertools; datos = [5, 10]; print(list(itertools.accumulate(datos)))"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICTIONARY",
            "patterns": [
                "How to order a dictionary",
                "Sorted example with dictionaries"
            ],
            "responses": [
                "d = {'b': 2, 'a': 1}; print(dict(sorted(d.items())))",
                "data = {2: 'B', 1: 'A'}; print(dict(sorted(data.items())))"
            ]
        },
        {
            "tag": "code_busqueda_binaria",
            "patterns": [
                "How to perform a binary search",
                "BISECT example in Python"
            ],
            "responses": [
                "import bisect; nums = [1, 3, 5]; print(bisect.bisect(nums, 4))",
                "from bisect import bisect_left; lista = [10, 20, 30]; print(bisect_left(lista, 25))"
            ]
        },
        {
            "tag": "CODE_CRED_CONJUNTO",
            "patterns": [
                "How to create a set",
                "SET example in Python"
            ],
            "responses": [
                "s = {1, 2, 3}; print(s)",
                "set = set ([1, 2, 2, 3]);print (set)"
            ]
        },
        {
            "tag": "CODE_INTERSECTION_CONJENTOS",
            "patterns": [
                "How to calculate set intersection",
                "Example of intersection in Python"
            ],
            "responses": [
                "a = {1, 2}; b = {2, 3}; print(a & b)",
                "x = {'a', 'b'}; y = {'b', 'c'}; print(x.intersection(y))"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION",
            "patterns": [
                "How to use understanding lists",
                "Example of List Comprehension"
            ],
            "responses": [
                "nums = [x**2 for x in range(5)]; print(nums)",
                "pares = [x for x in range(10) if x % 2 == 0]; print(pares)"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION CODE",
            "patterns": [
                "How to use dictionaries by understanding",
                "Example of dict comprehension"
            ],
            "responses": [
                "square = {x: x ** 2 for x in range (3)};print (square)",
                "inverso = {v: k for k, v in {'a': 1, 'b': 2}.items()}; print(inverso)"
            ]
        },
        {
            "tag": "CODE_CRONOMETER_js",
            "patterns": [
                "How to measure execution time in JavaScript",
                "Example with time in JavaScript"
            ],
            "responses": [
                "console.time('Execution'); console.log('Hello'); console.timeEnd('Execution');",
                "const t1 = performance.now(); console.log('Hello'); const t2 = performance.now(); console.log(t2 - t1);"
            ]
        },
        {
            "tag": "CODE_GENERAR_RANGO_js",
            "patterns": [
                "How to generate a range of numbers in JavaScript",
                "Range example in JavaScript"
            ],
            "responses": [
                "console.log([...Array(5).keys()]);",
                "console.log([...Array(5).keys()].map(x => x + 1));"
            ]
        },
        {
            "tag": "CODE_DICTIONARY_VALORS_MAX_js",
            "patterns": [
                "How to obtain the maximum value of a dictionary in JavaScript",
                "Example with max in dictionaries in JavaScript"
            ],
            "responses": [
                "const obj = {a: 3, b: 5}; console.log(Math.max(...Object.values(obj)));",
                "const data = {x: 10, y: 15}; const maxKey = Object.keys(data).reduce((a, b) => data[a] > data[b] ? a : b); console.log(maxKey);"
            ]
        },
        {
            "tag": "CODE_ENCONTRAR_INDICE_js",
            "patterns": [
                "How to find the index of an element in a list in JavaScript",
                "Index example in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.indexOf(2));",
                "const letters = ['A', 'B', 'C']; console.log(letters.indexOf('C'));"
            ]
        },
        {
            "tag": "CODE_SUMA_ACUMULADA_js",
            "patterns": [
                "How to calculate an accumulated sum in JavaScript",
                "Example with accumulate in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.reduce((a, b) => a + b));",
                "const data = [5, 10]; console.log(data.reduce((a, b) => a + b));"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICTIONARY_js",
            "patterns": [
                "How to order a dictionary in JavaScript",
                "Sorted example with dictionaries in JavaScript"
            ],
            "responses": [
                "const dict = {b: 2, a: 1}; const sorted = Object.fromEntries(Object.entries(dict).sort()); console.log(sorted);",
                "const data = {2: 'B', 1: 'A'}; const sortedData = Object.fromEntries(Object.entries(data).sort()); console.log(sortedData);"
            ]
        },
        {
            "tag": "code_busqueda_binaria_js",
            "patterns": [
                "How to perform a binary search in JavaScript",
                "Binary search example in JavaScript"
            ],
            "responses": [
                "const nums = [1, 3, 5]; console.log(nums.indexOf(4));",
                "const nums = [10, 20, 30]; console.log(nums.findIndex(num => num === 25));"
            ]
        },
        {
            "tag": "CODE_CRED_CONJUNTO_js",
            "patterns": [
                "How to create a set in JavaScript",
                "Set example in JavaScript"
            ],
            "responses": [
                "const set = new Set([1, 2, 3]); console.log(set);",
                "const set = new Set([1, 2, 2, 3]); console.log(set);"
            ]
        },
        {
            "tag": "CODE_INTERSECTION_CONJENTOS_js",
            "patterns": [
                "How to calculate set intersection in JavaScript",
                "Intersection example in JavaScript"
            ],
            "responses": [
                "const a = new Set([1, 2]); const b = new Set([2, 3]); const intersection = new Set([...a].filter(x => b.has(x))); console.log(intersection);",
                "const x = new Set(['a', 'b']); const y = new Set(['b', 'c']); console.log(new Set([...x].filter(x => y.has(x))));"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION_js",
            "patterns": [
                "How to use list comprehension in JavaScript",
                "List comprehension example in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; console.log(nums.map(x => x * 2));",
                "const nums = [1, 2, 3]; console.log(nums.filter(x => x % 2 === 0));"
            ]
        },
        {
            "tag": "CODE_COMPREHENSION_CODE_js",
            "patterns": [
                "How to use dictionaries by understanding in JavaScript",
                "Dictionary comprehension example in JavaScript"
            ],
            "responses": [
                "const nums = [1, 2, 3]; const square = nums.reduce((acc, x) => ({...acc, [x]: x ** 2}), {}); console.log(square);",
                "const obj = {a: 1, b: 2}; const inverted = Object.fromEntries(Object.entries(obj).map(([key, value]) => [value, key])); console.log(inverted);"
            ]
        },
        {
            "tag": "CODE_CONTAR_ELEMENTS",
            "patterns": [
                "How to count elements of a list",
                "Example with Collections.Counter"
            ],
            "responses": [
                "from collections import Counter; lista = ['a', 'b', 'a']; print(Counter(lista))",
                "import collections; nums = [1, 2, 1]; print(collections.Counter(nums))"
            ]
        },
        {
            "tag": "CODE_MAP",
            "patterns": [
                "How to use MAP in Python",
                "MAP example"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(list(map(lambda x: x**2, nums)))",
                "Words = ['one', 'dos'];print (list (Map (Len, words)))"
            ]
        },
        {
            "tag": "CODE_UUSO_FILTER",
            "patterns": [
                "How to use Filter in Python",
                "Filter example"
            ],
            "responses": [
                "nums = [1, 2, 3, 4]; print(list(filter(lambda x: x % 2 == 0, nums)))",
                "letras = ['a', '', 'b']; print(list(filter(bool, letras)))"
            ]
        },
        {
            "tag": "Codigo_palindrome",
            "patterns": [
                "How to verify if a word is a palindromo",
                "Example of Palindromo in Python"
            ],
            "responses": [
                "Word = 'Ana';print (word == word [::-1])",
                "Text = 'radar';print (text == '' .Join (reverse (text))))"
            ]
        },
        {
            "tag": "CODE_SUMA_MATRIZ",
            "patterns": [
                "How to add matrices",
                "Sum of matrices example in Python"
            ],
            "responses": [
                "import numpy as np; a = np.array([[1, 2], [3, 4]]); b = np.array([[5, 6], [7, 8]]); print(a + b)",
                "matriz1 = [[1, 2], [3, 4]]; matriz2 = [[5, 6], [7, 8]]; print([[x + y for x, y in zip(r1, r2)] for r1, r2 in zip(matriz1, matriz2)])"
            ]
        },
        {
            "tag": "codigo_uso_zip_longest",
            "patterns": [
                "How to use Zip_longest",
                "Example of Zip_longest in Python"
            ],
            "responses": [
                "from itertools import zip_longest; a = [1, 2]; b = [3]; print(list(zip_longest(a, b)))",
                "import itertools; x = ['a', 'b']; y = [1]; print(list(itertools.zip_longest(x, y, fillvalue='N/A')))"
            ]
        },
        {
            "tag": "code_invert_cadena",
            "patterns": [
                "How to invest a chain",
                "Example of investing text"
            ],
            "responses": [
                "Text = 'Python';print (text [::-1])",
                "Chain = 'Hello';print (''. Join (reverse (chain)))"
            ]
        },
        {
            "tag": "code_basica",
            "patterns": [
                "How to create a class in Python",
                "Basic class example"
            ],
            "responses": [
                "Class Person: Def __init __ (self, name): Self.name = Name;P = person ('Ana');print (p.name)",
                "Class Animal: def __init __ (self, type): self.Type = type;a = animal ('cat');print (a.tipo)"
            ]
        },
        {
            "tag": "CODE_FACTORIAL CODE",
            "patterns": [
                "How to calculate factorial",
                "Factorial example in Python"
            ],
            "responses": [
                "from math import factorial; print(factorial(5))",
                "def fact(n): return 1 if n == 0 else n * fact(n - 1); print(fact(4))"
            ]
        },
        {
            "tag": "CODE_ENCADENAR_IITABLE",
            "patterns": [
                "How to chain iterable",
                "Chain example in Python"
            ],
            "responses": [
                "from itertools import chain; a = [1, 2]; b = [3, 4]; print(list(chain(a, b)))",
                "import itertools; x = ('a', 'b'); y = ('c',); print(list(itertools.chain(x, y)))"
            ]
        },
        {
            "tag": "CODE_CONTAR_ELEMENTS_js",
            "patterns": [
                "How to count elements of a list in JavaScript",
                "Example with Collections.Counter in JavaScript"
            ],
            "responses": [
                "let lista = ['a', 'b', 'a']; let count = {}; lista.forEach(item => { count[item] = (count[item] || 0) + 1; }); console.log(count);",
                "let nums = [1, 2, 1]; let counter = {}; nums.forEach(num => { counter[num] = (counter[num] || 0) + 1; }); console.log(counter);"
            ]
        },
        {
            "tag": "CODE_MAP_js",
            "patterns": [
                "How to use MAP in JavaScript",
                "MAP example in JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log(nums.map(x => x ** 2));",
                "let words = ['one', 'dos']; console.log(words.map(word => word.length));"
            ]
        },
        {
            "tag": "CODE_UUSO_FILTER_js",
            "patterns": [
                "How to use Filter in JavaScript",
                "Filter example in JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; console.log(nums.filter(x => x % 2 === 0));",
                "let letras = ['a', '', 'b']; console.log(letras.filter(Boolean));"
            ]
        },
        {
            "tag": "Codigo_palindrome_js",
            "patterns": [
                "How to verify if a word is a palindrome in JavaScript",
                "Example of palindrome in JavaScript"
            ],
            "responses": [
                "let word = 'Ana'; console.log(word === word.split('').reverse().join(''));",
                "let text = 'radar'; console.log(text === text.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "CODE_SUMA_MATRIZ_js",
            "patterns": [
                "How to add matrices in JavaScript",
                "Sum of matrices example in JavaScript"
            ],
            "responses": [
                "let a = [[1, 2], [3, 4]]; let b = [[5, 6], [7, 8]]; let result = a.map((row, i) => row.map((val, j) => val + b[i][j])); console.log(result);",
                "let matrix1 = [[1, 2], [3, 4]]; let matrix2 = [[5, 6], [7, 8]]; let result = matrix1.map((row, i) => row.map((col, j) => col + matrix2[i][j])); console.log(result);"
            ]
        },
        {
            "tag": "codigo_uso_zip_longest_js",
            "patterns": [
                "How to use Zip_longest in JavaScript",
                "Example of Zip_longest in JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = [3]; let result = [...a, ...b]; console.log(result);",
                "let x = ['a', 'b']; let y = [1]; let result = [...x, ...y]; console.log(result);"
            ]
        },
        {
            "tag": "code_invert_cadena_js",
            "patterns": [
                "How to invert a string in JavaScript",
                "Example of inverting text in JavaScript"
            ],
            "responses": [
                "let text = 'Python'; console.log(text.split('').reverse().join(''));",
                "let chain = 'Hello'; console.log(chain.split('').reverse().join(''));"
            ]
        },
        {
            "tag": "code_basica_js",
            "patterns": [
                "How to create a class in JavaScript",
                "Basic class example in JavaScript"
            ],
            "responses": [
                "class Person { constructor(name) { this.name = name; }} let p = new Person('Ana'); console.log(p.name);",
                "class Animal { constructor(type) { this.type = type; }} let a = new Animal('cat'); console.log(a.type);"
            ]
        },
        {
            "tag": "CODE_FACTORIAL_CODE_js",
            "patterns": [
                "How to calculate factorial in JavaScript",
                "Factorial example in JavaScript"
            ],
            "responses": [
                "function factorial(n) { return n <= 1 ? 1 : n * factorial(n - 1); } console.log(factorial(5));",
                "function fact(n) { return n === 0 ? 1 : n * fact(n - 1); } console.log(fact(4));"
            ]
        },
        {
            "tag": "CODE_ENCADENAR_IITABLE_js",
            "patterns": [
                "How to chain iterables in JavaScript",
                "Chain example in JavaScript"
            ],
            "responses": [
                "let a = [1, 2]; let b = [3, 4]; console.log([...a, ...b]);",
                "let x = ['a', 'b']; let y = ['c']; console.log([...x, ...y]);"
            ]
        },
        {
            "tag": "CODE_Verify_subcadena",
            "patterns": [
                "How to verify if one chain contains another",
                "Subcadena example in Python"
            ],
            "responses": [
                "print('Python' in 'Hola Python')",
                "text = 'This is a text';print ('text' in text)"
            ]
        },
        {
            "tag": "code_leer_url",
            "patterns": [
                "How to read data from a URL",
                "Example with requests"
            ],
            "responses": [
                "import requests; r = requests.get('http://example.com'); print(r.text)",
                "import urllib.request; with urllib.request.urlopen('http://example.com') as response: print(response.read().decode())"
            ]
        },
        {
            "tag": "code_rotar_lista",
            "patterns": [
                "How to rotate a list",
                "Example of lista rotation"
            ],
            "responses": [
                "nums = [1, 2, 3]; print(nums[1:] + nums[:1])",
                "List = ['A', 'B', 'C'];print (list [-1:] + list [:-1])"
            ]
        },
        {
            "tag": "CODE_ITERAR_DOBLE_FOR",
            "patterns": [
                "How to use double for in python",
                "double for example"
            ],
            "responses": [
                "for i in range(2): for j in range(2): print(i, j)",
                "dates = [[1, 2], [3, 4]];For Fila in Dates: For Val in Low: Print (VAL)"
            ]
        },
        {
            "tag": "code_calculo_prom",
            "patterns": [
                "How to calculate the average",
                "Average example in Python"
            ],
            "responses": [
                "nums = [10, 20, 30]; print(sum(nums) / len(nums))",
                "data = [5, 15];average = sum (data) / Len (data);print (average)"
            ]
        },
        {
            "tag": "CODE_ENCONTRAR_Minimo",
            "patterns": [
                "How to find the minimum value on a list",
                "Example of min in python"
            ],
            "responses": [
                "nums = [3, 1, 2]; print(min(nums))",
                "values ​​= [10, 5, 15];print (min (values))"
            ]
        },
        {
            "tag": "CODE_Generar_num_leatory",
            "patterns": [
                "How to generate a random number",
                "Random example in Python"
            ],
            "responses": [
                "import random; print(random.randint(1, 10))",
                "from random import uniform; print(uniform(1.0, 5.0))"
            ]
        },
        {
            "tag": "code_crear_tupla",
            "patterns": [
                "How to create a tupla",
                "Example of tuple in python"
            ],
            "responses": [
                "double = (1, 2, 3);Print (double)",
                "t = tuple(['a', 'b', 'c']); print(t)"
            ]
        },
        {
            "tag": "CODE_FORMATO_CADENA",
            "patterns": [
                "How to format chains",
                "Ejemplo de f-strings a python"
            ],
            "responses": [
                "Name = 'Ana';print (f'hola, {name} ')",
                "Age = 30;print ('you have {} years'.Format (age))"
            ]
        },
        {
            "tag": "code_multiplico_matrices",
            "patterns": [
                "How to multiply matrices",
                "Matrices multiplication example"
            ],
            "responses": [
                "import numpy as np; a = np.array([[1, 2], [3, 4]]); b = np.array([[5, 6], [7, 8]]); print(np.dot(a, b))",
                "matriz1 = [[1, 2], [3, 4]]; matriz2 = [[5, 6], [7, 8]]; print([[sum(x*y for x, y in zip(row, col)) for col in zip(*matriz2)] for row in matriz1])"
            ]
        },
        {
            "tag": "CODE_ORDENAR_Palabras",
            "patterns": [
                "How to order words",
                "example of ordering chains in Python"
            ],
            "responses": [
                "Text = 'Hola World';print ('' .Join (luck (text.split ()))))",
                "phrase = 'zeta alpha beta';words = phrase.split ();words.sort ();print ('' .Join (words))"
            ]
        },
        {
            "tag": "CODE_Verify_subcadena_js",
            "patterns": [
                "How to verify if one chain contains another in JavaScript",
                "Subcadena example in JavaScript"
            ],
            "responses": [
                "console.log('Python' in 'Hola Python');",
                "let text = 'This is a text'; console.log(text.includes('text'));"
            ]
        },
        {
            "tag": "code_leer_url_js",
            "patterns": [
                "How to read data from a URL in JavaScript",
                "Example with requests in JavaScript"
            ],
            "responses": [
                "fetch('http://example.com').then(response => response.text()).then(text => console.log(text));",
                "import urllib.request; urllib.request.urlopen('http://example.com').then(response => response.text()).then(console.log);"
            ]
        },
        {
            "tag": "code_rotar_lista_js",
            "patterns": [
                "How to rotate a list in JavaScript",
                "Example of list rotation in JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3]; console.log([...nums.slice(1), nums[0]]);",
                "let list = ['A', 'B', 'C']; console.log([list[list.length - 1], ...list.slice(0, list.length - 1)]);"
            ]
        },
        {
            "tag": "CODE_ITERAR_DOBLE_FOR_js",
            "patterns": [
                "How to use double for in JavaScript",
                "Double for example in JavaScript"
            ],
            "responses": [
                "for (let i = 0; i < 2; i++) { for (let j = 0; j < 2; j++) { console.log(i, j); }}",
                "let dates = [[1, 2], [3, 4]]; for (let row of dates) { for (let val of row) { console.log(val); }}"
            ]
        },
        {
            "tag": "code_calculo_prom_js",
            "patterns": [
                "How to calculate the average in JavaScript",
                "Average example in JavaScript"
            ],
            "responses": [
                "let nums = [10, 20, 30]; console.log(nums.reduce((a, b) => a + b) / nums.length);",
                "let data = [5, 15]; let average = data.reduce((a, b) => a + b) / data.length; console.log(average);"
            ]
        },
        {
            "tag": "CODE_ENCONTRAR_Minimo_js",
            "patterns": [
                "How to find the minimum value on a list in JavaScript",
                "Example of min in JavaScript"
            ],
            "responses": [
                "let nums = [3, 1, 2]; console.log(Math.min(...nums));",
                "let values = [10, 5, 15]; console.log(Math.min(...values));"
            ]
        },
        {
            "tag": "CODE_Generar_num_leatory_js",
            "patterns": [
                "How to generate a random number in JavaScript",
                "Random example in JavaScript"
            ],
            "responses": [
                "let random = Math.floor(Math.random() * 10) + 1; console.log(random);",
                "let random = Math.random() * 5 + 1; console.log(random);"
            ]
        },
        {
            "tag": "code_crear_tupla_js",
            "patterns": [
                "How to create a tuple in JavaScript",
                "Example of tuple in JavaScript"
            ],
            "responses": [
                "let tuple = [1, 2, 3]; console.log(tuple);",
                "let t = ['a', 'b', 'c']; console.log(t);"
            ]
        },
        {
            "tag": "CODE_FORMATO_CADENA_js",
            "patterns": [
                "How to format strings in JavaScript",
                "f-strings example in JavaScript"
            ],
            "responses": [
                "let name = 'Ana'; console.log(`Hola, ${name}`);",
                "let age = 30; console.log(`You have ${age} years`);"
            ]
        },
        {
            "tag": "code_multiplico_matrices_js",
            "patterns": [
                "How to multiply matrices in JavaScript",
                "Matrices multiplication example in JavaScript"
            ],
            "responses": [
                "let a = [[1, 2], [3, 4]]; let b = [[5, 6], [7, 8]]; let result = a.map((row, i) => row.map((val, j) => val * b[i][j])); console.log(result);",
                "let matrix1 = [[1, 2], [3, 4]]; let matrix2 = [[5, 6], [7, 8]]; let result = matrix1.map((row, i) => row.map((col, j) => col * matrix2[i][j])); console.log(result);"
            ]
        },
        {
            "tag": "CODE_ITARAR_LISTA_ANIDADA",
            "patterns": [
                "How to iterate on nested lists",
                "Example of nested lists in Python"
            ],
            "responses": [
                "list = [1, 2], [3, 4]];for val is a subsist: print (val)",
                "datos = [['a', 'b'], ['c', 'd']]; for fila in datos: print(''.join(fila))"
            ]
        },
        {
            "tag": "codigo_calculo_raiz",
            "patterns": [
                "How to calculate the square root",
                "Square root example in Python"
            ],
            "responses": [
                "from math import sqrt; print(sqrt(16))",
                "import math; print(math.sqrt(25))"
            ]
        },
        {
            "tag": "code_validar_email",
            "patterns": [
                "How to validate an email",
                "Email validation example in Python"
            ],
            "responses": [
                "import re; email = 'test@example.com'; print(bool(re.match(r'^[\\w._%+-]+@[\\w.-]+\\.[a-zA-Z]{2,}$', email)))",
                "Correo = 'Usuario@dominio.com';print ('@' In Correo and Correo.endswith ('. com'))"
            ]
        },
        {
            "tag": "CODE_COMBINATIONS",
            "patterns": [
                "How to generate combinations",
                "Example of combinations in Python"
            ],
            "responses": [
                "from itertools import combinations; print(list(combinations([1, 2, 3], 2)))",
                "import itertools; datos = ['a', 'b', 'c']; print(list(itertools.combinations(datos, 2)))"
            ]
        },
        {
            "tag": "CODE_PERMUTATIONS",
            "patterns": [
                "How to generate permutations",
                "Example of Python permutations"
            ],
            "responses": [
                "from itertools import permutations; print(list(permutations([1, 2, 3])))",
                "import itertools; valores = ['x', 'y']; print(list(itertools.permutations(valores, 2)))"
            ]
        },
        {
            "tag": "code_calcular_mediana",
            "patterns": [
                "How to calculate the median",
                "Medium example in Python"
            ],
            "responses": [
                "import statistics; nums = [1, 2, 3, 4]; print(statistics.median(nums))",
                "values ​​= [5, 2, 1, 4];values.sort ();print (values ​​[len (values) // 2])"
            ]
        },
        {
            "tag": "code_converter_a_binario",
            "patterns": [
                "How to turn Binary",
                "Bin example in Python"
            ],
            "responses": [
                "print(bin(10))",
                "Number = 8;Print (format (numbers 'b'))"
            ]
        },
        {
            "tag": "code_calcular_gcd",
            "patterns": [
                "How to calculate the maximum common divisor",
                "GCD example in Python"
            ],
            "responses": [
                "from math import gcd; print(gcd(12, 15))",
                "import math; print(math.gcd(100, 75))"
            ]
        },
        {
            "tag": "CODE_GRAPHER_DATOS",
            "patterns": [
                "How to graph data",
                "Matpletlib example"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; plt.plot([1, 2, 3], [4, 5, 6]); plt.show()",
                "import matplotlib.pyplot as plt; x = [1, 2, 3]; y = [2, 4, 6]; plt.scatter(x, y); plt.show()"
            ]
        },
        {
            "tag": "code_crear_dataframe",
            "patterns": [
                "How to create a dataframe",
                "example of dataframe pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2], 'col2': [3, 4]}); print(df)",
                "import pandas as pd; datos = {'A': [1, 2], 'B': [3, 4]}; df = pd.DataFrame(datos); print(df)"
            ]
        },
        {
            "tag": "CODE_ITARAR_LISTA_ANIDADA_js",
            "patterns": [
                "How to iterate on nested lists in JavaScript",
                "Example of nested lists in JavaScript"
            ],
            "responses": [
                "let list = [[1, 2], [3, 4]]; for (let val of list) { console.log(val); }",
                "let datos = [['a', 'b'], ['c', 'd']]; for (let fila of datos) { console.log(fila.join('')); }"
            ]
        },
        {
            "tag": "codigo_calculo_raiz_js",
            "patterns": [
                "How to calculate the square root in JavaScript",
                "Square root example in JavaScript"
            ],
            "responses": [
                "console.log(Math.sqrt(16));",
                "let num = 25; console.log(Math.sqrt(num));"
            ]
        },
        {
            "tag": "code_validar_email_js",
            "patterns": [
                "How to validate an email in JavaScript",
                "Email validation example in JavaScript"
            ],
            "responses": [
                "let email = 'test@example.com'; console.log(/^[\\w._%+-]+@[\\w.-]+\\.[a-zA-Z]{2,}$/.test(email));",
                "let email = 'Usuario@dominio.com'; console.log(email.includes('@') && email.endsWith('.com'));"
            ]
        },
        {
            "tag": "CODE_COMBINATIONS_js",
            "patterns": [
                "How to generate combinations in JavaScript",
                "Example of combinations in JavaScript"
            ],
            "responses": [
                "const { combinations } = require('js-combinatorics'); let comb = combinations([1, 2, 3], 2); console.log([...comb]);",
                "let datos = ['a', 'b', 'c']; let comb = []; for (let i = 0; i < datos.length; i++) { for (let j = i + 1; j < datos.length; j++) { comb.push([datos[i], datos[j]]); } } console.log(comb);"
            ]
        },
        {
            "tag": "CODE_PERMUTATIONS_js",
            "patterns": [
                "How to generate permutations in JavaScript",
                "Example of permutations in JavaScript"
            ],
            "responses": [
                "const { permutations } = require('js-combinatorics'); let perm = permutations([1, 2, 3]); console.log([...perm]);",
                "let valores = ['x', 'y']; let perm = []; for (let i = 0; i < valores.length; i++) { for (let j = 0; j < valores.length; j++) { if (i !== j) { perm.push([valores[i], valores[j]]); } } } console.log(perm);"
            ]
        },
        {
            "tag": "code_calcular_mediana_js",
            "patterns": [
                "How to calculate the median in JavaScript",
                "Median example in JavaScript"
            ],
            "responses": [
                "let nums = [1, 2, 3, 4]; nums.sort((a, b) => a - b); console.log(nums[Math.floor(nums.length / 2)]);",
                "let values = [5, 2, 1, 4]; values.sort((a, b) => a - b); console.log(values[Math.floor(values.length / 2)]);"
            ]
        },
        {
            "tag": "code_converter_a_binario_js",
            "patterns": [
                "How to convert to binary in JavaScript",
                "Binary conversion example in JavaScript"
            ],
            "responses": [
                "console.log((10).toString(2));",
                "let num = 8; console.log(num.toString(2));"
            ]
        },
        {
            "tag": "code_calcular_gcd_js",
            "patterns": [
                "How to calculate the greatest common divisor in JavaScript",
                "GCD example in JavaScript"
            ],
            "responses": [
                "function gcd(a, b) { return b === 0 ? a : gcd(b, a % b); } console.log(gcd(12, 15));",
                "let a = 100, b = 75; let gcd = (a, b) => b === 0 ? a : gcd(b, a % b); console.log(gcd(a, b));"
            ]
        },
        {
            "tag": "CODE_GRAPHER_DATOS_js",
            "patterns": [
                "How to graph data in JavaScript",
                "Matplotlib example in JavaScript"
            ],
            "responses": [
                "import { Chart } from 'chart.js'; const ctx = document.getElementById('myChart').getContext('2d'); new Chart(ctx, { type: 'line', data: { labels: [1, 2, 3], datasets: [{ label: 'Data', data: [4, 5, 6] }] } });",
                "const x = [1, 2, 3]; const y = [2, 4, 6]; const ctx = document.getElementById('scatterChart').getContext('2d'); new Chart(ctx, { type: 'scatter', data: { datasets: [{ label: 'Scatter Plot', data: x.map((e, i) => ({ x: e, y: y[i] })) }] } });"
            ]
        },
        {
            "tag": "code_crear_dataframe_js",
            "patterns": [
                "How to create a dataframe in JavaScript",
                "DataFrame example in JavaScript"
            ],
            "responses": [
                "let data = {col1: [1, 2], col2: [3, 4]}; let df = new DataFrame(data); console.log(df);",
                "let data = {A: [1, 2], B: [3, 4]}; let df = new DataFrame(data); console.log(df);"
            ]
        },
        {
            "tag": "code_filtra_dataframe",
            "patterns": [
                "How to filter a dataframe",
                "Example of Pandas Filter"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2, 3]}); print(df[df['col1'] > 1])",
                "Import pandas the PD;dates = {'values': [10, 20, 30]};df = pd.dataframe (dates);Print (DF [DF ['values'] == 20])"
            ]
        },
        {
            "tag": "code_classify_dates",
            "patterns": [
                "How to classify data",
                "classification example with pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'valores': [10, 20, 30]}); df['categoría'] = ['bajo' if x < 20 else 'alto' for x in df['valores']]; print(df)",
                "import pandas as pd; datos = {'valores': [1, 2, 3]}; df = pd.DataFrame(datos); df['grupo'] = pd.cut(df['valores'], bins=[0, 2, 3], labels=['A', 'B']); print(df)"
            ]
        },
        {
            "tag": "CODE_GUARDAR_CSV",
            "patterns": [
                "How to save a DataFrame in CSV",
                "To_CSV example in pandas"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'col1': [1, 2]}); df.to_csv('archivo.csv', index=False)",
                "import pandas as pd; datos = {'A': [10, 20]}; df = pd.DataFrame(datos); df.to_csv('datos.csv')"
            ]
        },
        {
            "tag": "CODE_FILTRER_DATOS",
            "patterns": [
                "How to filter data in a dataframe",
                "Example of Pandas Consultation"
            ],
            "responses": [
                "import pandas as pd; df = pd.DataFrame({'valores': [1, 2, 3]}); print(df.query('valores > 2'))",
                "import pandas as pd; datos = {'A': [10, 20, 30]}; df = pd.DataFrame(datos); print(df[df['A'] < 30])"
            ]
        },
        {
            "tag": "CODE_UNION_DATOS",
            "patterns": [
                "How to join data",
                "Merge example in pandas"
            ],
            "responses": [
                "import pandas as pd; a = pd.DataFrame({'id': [1, 2]}); b = pd.DataFrame({'id': [2, 3]}); print(pd.merge(a, b, on='id', how='inner'))",
                "import pandas as pd; df1 = pd.DataFrame({'A': [1]}); df2 = pd.DataFrame({'A': [1]}); print(pd.concat([df1, df2]))"
            ]
        },
        {
            "tag": "code_crear_histogram",
            "patterns": [
                "How to create a histogram",
                "Histogram example in Python"
            ],
            "responses": [
                "import matplotlib.pyplot as plt; datos = [1, 2, 2, 3, 3, 3]; plt.hist(datos, bins=3); plt.show()",
                "import matplotlib.pyplot as plt; data = [1, 2, 3, 4, 5]; plt.hist(data, bins=5); plt.show()"
            ]
        },
        {
            "tag": "CODE_REPLAZAR_SUBCADENA",
            "patterns": [
                "How to replace a subcadena",
                "Example of text replacement in Python"
            ],
            "responses": [
                "Text = 'Hola World';print (text.Replace ('world', 'python'))",
                "chain = 'apple';print (chain.replace ('manza', 'fruit'))"
            ]
        },
        {
            "tag": "CODE_CLASE_SIMPLE",
            "patterns": [
                "How to create a simple class",
                "class example in python"
            ],
            "responses": [
                "Class Person: Def __init __ (self, name): Self.name = Name;P = person ('Carlos');print (p.name)",
                "CLASS ANIMAL: DEF __INIT __ (Self, species): Self.especie = species;a = animal ('dog');print (A.specie)"
            ]
        },
        {
            "tag": "CODE_Verify_Espacio_vacio",
            "patterns": [
                "How to verify if a chain is empty",
                "Empty Space Verification Exam"
            ],
            "responses": [
                "chain = '';print (Len (chain) == 0)",
                "Text = '';print (text.strip () == '')"
            ]
        },
        {
            "tag": "CODE_comprobar_parity",
            "patterns": [
                "How to check if a number is even",
                "Example of parity in python"
            ],
            "responses": [
                "number = 4;print (number% 2 == 0)",
                "Value = 7;print (value % 2 == 0)"
            ]
        },
        {
            "tag": "CODE_CONCATENAR_CADENAS",
            "patterns": [
                "How to concatenate chains",
                "Example of concatenation in Python"
            ],
            "responses": [
                "Text 1 = 'Hola';Text 2 = 'World';Print (Text1 + '' + Text2)",
                "cadena1 = 'Python'; cadena2 = 'rocks'; print(cadena1 + cadena2)"
            ]
        },
        {
            "tag": "CODE_ORDENAR_LISTA_DESCENDENTE",
            "patterns": [
                "How to order a list in descending order",
                "Example of descending order in Python"
            ],
            "responses": [
                "List = [5, 1, 3];list.sort (reverse = true);print (list)",
                "numbers = [3, 2, 1];Print (Sorted (numbers, reverse = true))"
            ]
        },
        {
            "tag": "code_filtra_dataframe_js",
            "patterns": [
                "How to filter a dataframe in JavaScript",
                "Example of Pandas Filter in JavaScript"
            ],
            "responses": [
                "let df = [{col1: 1}, {col1: 2}, {col1: 3}]; let filtered = df.filter(row => row.col1 > 1); console.log(filtered);",
                "let df = [{values: 10}, {values: 20}, {values: 30}]; let filtered = df.filter(row => row.values == 20); console.log(filtered);"
            ]
        },
        {
            "tag": "code_classify_dates_js",
            "patterns": [
                "How to classify data in JavaScript",
                "Classification example with pandas in JavaScript"
            ],
            "responses": [
                "let df = [{valores: 10}, {valores: 20}, {valores: 30}]; df.forEach(row => row.categoria = row.valores < 20 ? 'bajo' : 'alto'); console.log(df);",
                "let df = [{valores: 1}, {valores: 2}, {valores: 3}]; df.forEach(row => row.grupo = (row.valores <= 2 ? 'A' : 'B')); console.log(df);"
            ]
        },
        {
            "tag": "CODE_GUARDAR_CSV_js",
            "patterns": [
                "How to save a DataFrame in CSV in JavaScript",
                "To_CSV example in JavaScript"
            ],
            "responses": [
                "let df = [{col1: 1}, {col1: 2}]; let csv = df.map(row => Object.values(row).join(',')).join('\\n'); console.log(csv);",
                "let df = [{A: 10}, {A: 20}]; let csv = df.map(row => Object.values(row).join(',')).join('\\n'); console.log(csv);"
            ]
        },
        {
            "tag": "CODE_FILTRER_DATOS_js",
            "patterns": [
                "How to filter data in a dataframe in JavaScript",
                "Example of Pandas Consultation in JavaScript"
            ],
            "responses": [
                "let df = [{valores: 1}, {valores: 2}, {valores: 3}]; let filtered = df.filter(row => row.valores > 2); console.log(filtered);",
                "let df = [{A: 10}, {A: 20}, {A: 30}]; let filtered = df.filter(row => row.A < 30); console.log(filtered);"
            ]
        },
        {
            "tag": "CODE_UNION_DATOS_js",
            "patterns": [
                "How to join data in JavaScript",
                "Merge example in pandas in JavaScript"
            ],
            "responses": [
                "let a = [{id: 1}, {id: 2}]; let b = [{id: 2}, {id: 3}]; let merged = [...a, ...b.filter(bItem => !a.some(aItem => aItem.id === bItem.id))]; console.log(merged);",
                "let df1 = [{A: 1}]; let df2 = [{A: 1}]; let combined = [...df1, ...df2]; console.log(combined);"
            ]
        },
        {
            "tag": "code_crear_histogram_js",
            "patterns": [
                "How to create a histogram in JavaScript",
                "Histogram example in JavaScript"
            ],
            "responses": [
                "let data = [1, 2, 2, 3, 3, 3]; let ctx = document.getElementById('histogram').getContext('2d'); new Chart(ctx, {type: 'bar', data: {labels: [1, 2, 3], datasets: [{data: [1, 2, 3]}]}});",
                "let data = [1, 2, 3, 4, 5]; let ctx = document.getElementById('histogram').getContext('2d'); new Chart(ctx, {type: 'bar', data: {labels: [1, 2, 3, 4, 5], datasets: [{data: data}]}});"
            ]
        },
        {
            "tag": "CODE_REPLAZAR_SUBCADENA_js",
            "patterns": [
                "How to replace a substring in JavaScript",
                "Example of text replacement in JavaScript"
            ],
            "responses": [
                "let text = 'Hola World'; console.log(text.replace('World', 'Python'));",
                "let text = 'apple'; console.log(text.replace('apple', 'fruit'));"
            ]
        },
        {
            "tag": "CODE_CLASE_SIMPLE_js",
            "patterns": [
                "How to create a simple class in JavaScript",
                "Class example in JavaScript"
            ],
            "responses": [
                "class Person { constructor(name) { this.name = name; } } let p = new Person('Carlos'); console.log(p.name);",
                "class Animal { constructor(species) { this.species = species; } } let a = new Animal('dog'); console.log(a.species);"
            ]
        },
        {
            "tag": "CODE_Verify_Espacio_vacio_js",
            "patterns": [
                "How to verify if a string is empty in JavaScript",
                "Empty space verification example in JavaScript"
            ],
            "responses": [
                "let text = ''; console.log(text.length === 0);",
                "let text = ''; console.log(text.trim() === '');"
            ]
        },
        {
            "tag": "CODE_comprobar_parity_js",
            "patterns": [
                "How to check if a number is even in JavaScript",
                "Example of parity in JavaScript"
            ],
            "responses": [
                "let number = 4; console.log(number % 2 === 0);",
                "let value = 7; console.log(value % 2 === 0);"
            ]
        },
        {
            "tag": "CODE_CONCATENAR_CADENAS_js",
            "patterns": [
                "How to concatenate strings in JavaScript",
                "Example of string concatenation in JavaScript"
            ],
            "responses": [
                "let text1 = 'Hola'; let text2 = 'World'; console.log(text1 + ' ' + text2);",
                "let str1 = 'Python'; let str2 = 'rocks'; console.log(str1 + str2);"
            ]
        },
        {
            "tag": "CODE_ORDENAR_LISTA_DESCENDENTE_js",
            "patterns": [
                "How to order a list in descending order in JavaScript",
                "Example of descending order in JavaScript"
            ],
            "responses": [
                "let list = [5, 1, 3]; list.sort((a, b) => b - a); console.log(list);",
                "let numbers = [3, 2, 1]; console.log(numbers.sort((a, b) => b - a));"
            ]
        },
        {
            "tag": "code",
            "patterns": [
                "How to replace an element on a list",
                "Example of replacement in lists"
            ],
            "responses": [
                "List = [1, 2, 3];List [1] = 5;print (list)",
                "values ​​= [10, 20, 30];Values ​​[0] = 100;print (values)"
            ]
        },
        {
            "tag": "CODE_MATRIZ_Transpuesta",
            "patterns": [
                "How to obtain the transpose of a matrix",
                "Matric transposition example"
            ],
            "responses": [
                "import numpy as np; matriz = np.array([[1, 2], [3, 4]]); print(matriz.T)",
                "m = [[1, 2], [3, 4]]; transpuesta = [list(i) for i in zip(*m)]; print(transpuesta)"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICT_Por_valor",
            "patterns": [
                "How to order a dictionary by value",
                "example of ordering dictionary by value in python"
            ],
            "responses": [
                "d = {'a': 2, 'b': 1}; sorted_dict = dict(sorted(d.items(), key=lambda item: item[1])); print(sorted_dict)",
                "data = {'x': 10, 'y': 5}; sorted_data = {k: v for k, v in sorted(data.items(), key=lambda item: item[1])}; print(sorted_data)"
            ]
        },
        {
            "tag": "code_js",
            "patterns": [
                "How to replace an element in a list in JavaScript",
                "Example of replacing an element in lists in JavaScript"
            ],
            "responses": [
                "let list = [1, 2, 3]; list[1] = 5; console.log(list);",
                "let values = [10, 20, 30]; values[0] = 100; console.log(values);"
            ]
        },
        {
            "tag": "CODE_MATRIZ_Transpuesta_js",
            "patterns": [
                "How to obtain the transpose of a matrix in JavaScript",
                "Matrix transposition example in JavaScript"
            ],
            "responses": [
                "let matriz = [[1, 2], [3, 4]]; let transpuesta = matriz[0].map((_, i) => matriz.map(row => row[i])); console.log(transpuesta);",
                "let m = [[1, 2], [3, 4]]; let transpuesta = m[0].map((_, i) => m.map(row => row[i])); console.log(transpuesta);"
            ]
        },
        {
            "tag": "CODE_ORDENAR_DICT_Por_valor_js",
            "patterns": [
                "How to order a dictionary by value in JavaScript",
                "Example of ordering dictionary by value in JavaScript"
            ],
            "responses": [
                "let d = {'a': 2, 'b': 1}; let sortedDict = Object.fromEntries(Object.entries(d).sort((a, b) => a[1] - b[1])); console.log(sortedDict);",
                "let data = {'x': 10, 'y': 5}; let sortedData = Object.fromEntries(Object.entries(data).sort((a, b) => a[1] - b[1])); console.log(sortedData);"
            ]
        }
    ]
}